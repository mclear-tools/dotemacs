#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ((nil :repo-demographics (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "mclear-research-projects")) (name . "org-files"))))) (and (not (magithub--api-available-p)) sparse-repo))) ((id . 143366719) (node_id . "MDEwOlJlcG9zaXRvcnkxNDMzNjY3MTk=") (name . "org-files") (full_name . "mclear-research-projects/org-files") (owner (login . "mclear-research-projects") (id . 19612003) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjEyMDAz") (avatar_url . "https://avatars3.githubusercontent.com/u/19612003?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-research-projects") (html_url . "https://github.com/mclear-research-projects") (followers_url . "https://api.github.com/users/mclear-research-projects/followers") (following_url . "https://api.github.com/users/mclear-research-projects/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-research-projects/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-research-projects/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-research-projects/subscriptions") (organizations_url . "https://api.github.com/users/mclear-research-projects/orgs") (repos_url . "https://api.github.com/users/mclear-research-projects/repos") (events_url . "https://api.github.com/users/mclear-research-projects/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-research-projects/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/mclear-research-projects/org-files") (description . "All my org-files (notes, todos, etc)") (fork) (url . "https://api.github.com/repos/mclear-research-projects/org-files") (forks_url . "https://api.github.com/repos/mclear-research-projects/org-files/forks") (keys_url . "https://api.github.com/repos/mclear-research-projects/org-files/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mclear-research-projects/org-files/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mclear-research-projects/org-files/teams") (hooks_url . "https://api.github.com/repos/mclear-research-projects/org-files/hooks") (issue_events_url . "https://api.github.com/repos/mclear-research-projects/org-files/issues/events{/number}") (events_url . "https://api.github.com/repos/mclear-research-projects/org-files/events") (assignees_url . "https://api.github.com/repos/mclear-research-projects/org-files/assignees{/user}") (branches_url . "https://api.github.com/repos/mclear-research-projects/org-files/branches{/branch}") (tags_url . "https://api.github.com/repos/mclear-research-projects/org-files/tags") (blobs_url . "https://api.github.com/repos/mclear-research-projects/org-files/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mclear-research-projects/org-files/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mclear-research-projects/org-files/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mclear-research-projects/org-files/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mclear-research-projects/org-files/statuses/{sha}") (languages_url . "https://api.github.com/repos/mclear-research-projects/org-files/languages") (stargazers_url . "https://api.github.com/repos/mclear-research-projects/org-files/stargazers") (contributors_url . "https://api.github.com/repos/mclear-research-projects/org-files/contributors") (subscribers_url . "https://api.github.com/repos/mclear-research-projects/org-files/subscribers") (subscription_url . "https://api.github.com/repos/mclear-research-projects/org-files/subscription") (commits_url . "https://api.github.com/repos/mclear-research-projects/org-files/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mclear-research-projects/org-files/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mclear-research-projects/org-files/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mclear-research-projects/org-files/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mclear-research-projects/org-files/contents/{+path}") (compare_url . "https://api.github.com/repos/mclear-research-projects/org-files/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mclear-research-projects/org-files/merges") (archive_url . "https://api.github.com/repos/mclear-research-projects/org-files/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mclear-research-projects/org-files/downloads") (issues_url . "https://api.github.com/repos/mclear-research-projects/org-files/issues{/number}") (pulls_url . "https://api.github.com/repos/mclear-research-projects/org-files/pulls{/number}") (milestones_url . "https://api.github.com/repos/mclear-research-projects/org-files/milestones{/number}") (notifications_url . "https://api.github.com/repos/mclear-research-projects/org-files/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mclear-research-projects/org-files/labels{/name}") (releases_url . "https://api.github.com/repos/mclear-research-projects/org-files/releases{/id}") (deployments_url . "https://api.github.com/repos/mclear-research-projects/org-files/deployments") (created_at . "2018-08-03T02:21:08Z") (updated_at . "2018-08-03T02:23:12Z") (pushed_at . "2018-08-03T02:23:11Z") (git_url . "git://github.com/mclear-research-projects/org-files.git") (ssh_url . "git@github.com:mclear-research-projects/org-files.git") (clone_url . "https://github.com/mclear-research-projects/org-files.git") (svn_url . "https://github.com/mclear-research-projects/org-files") (homepage) (size . 0) (stargazers_count . 0) (watchers_count . 0) (language) (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "mclear-research-projects") (id . 19612003) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjEyMDAz") (avatar_url . "https://avatars3.githubusercontent.com/u/19612003?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-research-projects") (html_url . "https://github.com/mclear-research-projects") (followers_url . "https://api.github.com/users/mclear-research-projects/followers") (following_url . "https://api.github.com/users/mclear-research-projects/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-research-projects/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-research-projects/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-research-projects/subscriptions") (organizations_url . "https://api.github.com/users/mclear-research-projects/orgs") (repos_url . "https://api.github.com/users/mclear-research-projects/repos") (events_url . "https://api.github.com/users/mclear-research-projects/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-research-projects/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 1)) (nil :user-demographics (magithub-request (ghubp-get-user))) ((login . "mclearc") (id . 1502422) (node_id . "MDQ6VXNlcjE1MDI0MjI=") (avatar_url . "https://avatars2.githubusercontent.com/u/1502422?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclearc") (html_url . "https://github.com/mclearc") (followers_url . "https://api.github.com/users/mclearc/followers") (following_url . "https://api.github.com/users/mclearc/following{/other_user}") (gists_url . "https://api.github.com/users/mclearc/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclearc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclearc/subscriptions") (organizations_url . "https://api.github.com/users/mclearc/orgs") (repos_url . "https://api.github.com/users/mclearc/repos") (events_url . "https://api.github.com/users/mclearc/events{/privacy}") (received_events_url . "https://api.github.com/users/mclearc/received_events") (type . "User") (site_admin) (name . "Colin McLear") (company) (blog . "colinmclear.net") (location) (email) (hireable) (bio) (public_repos . 23) (public_gists . 1) (followers . 12) (following . 16) (created_at . "2012-03-05T11:03:00Z") (updated_at . "2018-05-29T04:14:32Z") (private_gists . 0) (total_private_repos . 0) (owned_private_repos . 0) (disk_usage . 264311) (collaborators . 0) (two_factor_authentication) (plan (name . "free") (space . 976562499) (collaborators . 0) (private_repos . 0))) (nil :notification (magithub-request (ghubp-unpaginate (ghubp-get-notifications :all "true")))) (((id . "365565296") (unread . t) (reason . "subscribed") (updated_at . "2018-08-14T04:59:29Z") (last_read_at) (subject (title . "Feature : config with chunkwm; Tiling window manager") (url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/46") (latest_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/46") (type . "Issue")) (repository (id . 9118195) (node_id . "MDEwOlJlcG9zaXRvcnk5MTE4MTk1") (name . "keyboard") (full_name . "jasonrudolph/keyboard") (owner (login . "jasonrudolph") (id . 2988) (node_id . "MDQ6VXNlcjI5ODg=") (avatar_url . "https://avatars3.githubusercontent.com/u/2988?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jasonrudolph") (html_url . "https://github.com/jasonrudolph") (followers_url . "https://api.github.com/users/jasonrudolph/followers") (following_url . "https://api.github.com/users/jasonrudolph/following{/other_user}") (gists_url . "https://api.github.com/users/jasonrudolph/gists{/gist_id}") (starred_url . "https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jasonrudolph/subscriptions") (organizations_url . "https://api.github.com/users/jasonrudolph/orgs") (repos_url . "https://api.github.com/users/jasonrudolph/repos") (events_url . "https://api.github.com/users/jasonrudolph/events{/privacy}") (received_events_url . "https://api.github.com/users/jasonrudolph/received_events") (type . "User") (site_admin . t)) (private) (html_url . "https://github.com/jasonrudolph/keyboard") (description . "⌨ Toward a more useful keyboard") (fork) (url . "https://api.github.com/repos/jasonrudolph/keyboard") (forks_url . "https://api.github.com/repos/jasonrudolph/keyboard/forks") (keys_url . "https://api.github.com/repos/jasonrudolph/keyboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jasonrudolph/keyboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jasonrudolph/keyboard/teams") (hooks_url . "https://api.github.com/repos/jasonrudolph/keyboard/hooks") (issue_events_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/events{/number}") (events_url . "https://api.github.com/repos/jasonrudolph/keyboard/events") (assignees_url . "https://api.github.com/repos/jasonrudolph/keyboard/assignees{/user}") (branches_url . "https://api.github.com/repos/jasonrudolph/keyboard/branches{/branch}") (tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/tags") (blobs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jasonrudolph/keyboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/jasonrudolph/keyboard/languages") (stargazers_url . "https://api.github.com/repos/jasonrudolph/keyboard/stargazers") (contributors_url . "https://api.github.com/repos/jasonrudolph/keyboard/contributors") (subscribers_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscribers") (subscription_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscription") (commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jasonrudolph/keyboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jasonrudolph/keyboard/contents/{+path}") (compare_url . "https://api.github.com/repos/jasonrudolph/keyboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jasonrudolph/keyboard/merges") (archive_url . "https://api.github.com/repos/jasonrudolph/keyboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jasonrudolph/keyboard/downloads") (issues_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues{/number}") (pulls_url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/jasonrudolph/keyboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/jasonrudolph/keyboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jasonrudolph/keyboard/labels{/name}") (releases_url . "https://api.github.com/repos/jasonrudolph/keyboard/releases{/id}") (deployments_url . "https://api.github.com/repos/jasonrudolph/keyboard/deployments")) (url . "https://api.github.com/notifications/threads/365565296") (subscription_url . "https://api.github.com/notifications/threads/365565296/subscription")) ((id . "367973367") (unread . t) (reason . "subscribed") (updated_at . "2018-08-14T02:48:07Z") (last_read_at) (subject (title . "Can I move the text of bookmark, recentf, etc, to the center") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/77") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/77") (type . "Issue")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/367973367") (subscription_url . "https://api.github.com/notifications/threads/367973367/subscription")) ((id . "344626942") (unread . t) (reason . "subscribed") (updated_at . "2018-08-13T09:05:35Z") (last_read_at . "2018-06-27T19:54:02Z") (subject (title . "No longer works now that Mendeley encrypts its database") (url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/issues/4") (latest_comment_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/issues/comments/412454402") (type . "Issue")) (repository (id . 38809916) (node_id . "MDEwOlJlcG9zaXRvcnkzODgwOTkxNg==") (name . "Adios_Mendeley") (full_name . "rdiaz02/Adios_Mendeley") (owner (login . "rdiaz02") (id . 1688611) (node_id . "MDQ6VXNlcjE2ODg2MTE=") (avatar_url . "https://avatars2.githubusercontent.com/u/1688611?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rdiaz02") (html_url . "https://github.com/rdiaz02") (followers_url . "https://api.github.com/users/rdiaz02/followers") (following_url . "https://api.github.com/users/rdiaz02/following{/other_user}") (gists_url . "https://api.github.com/users/rdiaz02/gists{/gist_id}") (starred_url . "https://api.github.com/users/rdiaz02/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rdiaz02/subscriptions") (organizations_url . "https://api.github.com/users/rdiaz02/orgs") (repos_url . "https://api.github.com/users/rdiaz02/repos") (events_url . "https://api.github.com/users/rdiaz02/events{/privacy}") (received_events_url . "https://api.github.com/users/rdiaz02/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rdiaz02/Adios_Mendeley") (description . "Moving from Mendeley to Zotero") (fork) (url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley") (forks_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/forks") (keys_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/teams") (hooks_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/hooks") (issue_events_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/issues/events{/number}") (events_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/events") (assignees_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/assignees{/user}") (branches_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/branches{/branch}") (tags_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/tags") (blobs_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/statuses/{sha}") (languages_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/languages") (stargazers_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/stargazers") (contributors_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/contributors") (subscribers_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/subscribers") (subscription_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/subscription") (commits_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/contents/{+path}") (compare_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/merges") (archive_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/downloads") (issues_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/issues{/number}") (pulls_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/pulls{/number}") (milestones_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/milestones{/number}") (notifications_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/labels{/name}") (releases_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/releases{/id}") (deployments_url . "https://api.github.com/repos/rdiaz02/Adios_Mendeley/deployments")) (url . "https://api.github.com/notifications/threads/344626942") (subscription_url . "https://api.github.com/notifications/threads/344626942/subscription")) ((id . "367348557") (unread . t) (reason . "state_change") (updated_at . "2018-08-12T02:01:06Z") (last_read_at . "2018-08-12T01:58:17Z") (subject (title . "super-agenda and diary") (url . "https://api.github.com/repos/alphapapa/org-super-agenda/issues/46") (latest_comment_url . "https://api.github.com/repos/alphapapa/org-super-agenda/issues/comments/412313191") (type . "Issue")) (repository (id . 98127938) (node_id . "MDEwOlJlcG9zaXRvcnk5ODEyNzkzOA==") (name . "org-super-agenda") (full_name . "alphapapa/org-super-agenda") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/org-super-agenda") (description . "Supercharge your Org daily/weekly agenda by grouping items") (fork) (url . "https://api.github.com/repos/alphapapa/org-super-agenda") (forks_url . "https://api.github.com/repos/alphapapa/org-super-agenda/forks") (keys_url . "https://api.github.com/repos/alphapapa/org-super-agenda/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/org-super-agenda/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/org-super-agenda/teams") (hooks_url . "https://api.github.com/repos/alphapapa/org-super-agenda/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/org-super-agenda/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/org-super-agenda/events") (assignees_url . "https://api.github.com/repos/alphapapa/org-super-agenda/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/org-super-agenda/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/org-super-agenda/tags") (blobs_url . "https://api.github.com/repos/alphapapa/org-super-agenda/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/org-super-agenda/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/org-super-agenda/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/org-super-agenda/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/org-super-agenda/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/org-super-agenda/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/org-super-agenda/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/org-super-agenda/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/org-super-agenda/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/org-super-agenda/subscription") (commits_url . "https://api.github.com/repos/alphapapa/org-super-agenda/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/org-super-agenda/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/org-super-agenda/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/org-super-agenda/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/org-super-agenda/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/org-super-agenda/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/org-super-agenda/merges") (archive_url . "https://api.github.com/repos/alphapapa/org-super-agenda/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/org-super-agenda/downloads") (issues_url . "https://api.github.com/repos/alphapapa/org-super-agenda/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/org-super-agenda/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/org-super-agenda/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/org-super-agenda/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/org-super-agenda/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/org-super-agenda/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/org-super-agenda/deployments")) (url . "https://api.github.com/notifications/threads/367348557") (subscription_url . "https://api.github.com/notifications/threads/367348557/subscription")) ((id . "366914619") (unread . t) (reason . "subscribed") (updated_at . "2018-08-11T14:00:03Z") (last_read_at) (subject (title . "HTML: separate pages for some of the subheadings?") (url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/5") (latest_comment_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/comments/412276978") (type . "Issue")) (repository (id . 99223466) (node_id . "MDEwOlJlcG9zaXRvcnk5OTIyMzQ2Ng==") (name . "emacs-package-dev-handbook") (full_name . "alphapapa/emacs-package-dev-handbook") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/emacs-package-dev-handbook") (description . "An Emacs package development handbook. Built with Emacs, by Emacs package developers, for Emacs package developers.") (fork) (url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook") (forks_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/forks") (keys_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/teams") (hooks_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/events") (assignees_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/tags") (blobs_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/subscription") (commits_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/merges") (archive_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/downloads") (issues_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/deployments")) (url . "https://api.github.com/notifications/threads/366914619") (subscription_url . "https://api.github.com/notifications/threads/366914619/subscription")) ((id . "366911741") (unread . t) (reason . "subscribed") (updated_at . "2018-08-11T13:56:30Z") (last_read_at) (subject (title . "Replace some subheading with lists") (url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/4") (latest_comment_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/4") (type . "Issue")) (repository (id . 99223466) (node_id . "MDEwOlJlcG9zaXRvcnk5OTIyMzQ2Ng==") (name . "emacs-package-dev-handbook") (full_name . "alphapapa/emacs-package-dev-handbook") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/emacs-package-dev-handbook") (description . "An Emacs package development handbook. Built with Emacs, by Emacs package developers, for Emacs package developers.") (fork) (url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook") (forks_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/forks") (keys_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/teams") (hooks_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/events") (assignees_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/tags") (blobs_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/subscription") (commits_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/merges") (archive_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/downloads") (issues_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/deployments")) (url . "https://api.github.com/notifications/threads/366911741") (subscription_url . "https://api.github.com/notifications/threads/366911741/subscription")) ((id . "366302700") (unread . t) (reason . "subscribed") (updated_at . "2018-08-10T05:31:23Z") (last_read_at) (subject (title . "Test PR: Add \"Read and Write Files in Emacs Lisp\"") (url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/pulls/3") (latest_comment_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/comments/411979675") (type . "PullRequest")) (repository (id . 99223466) (node_id . "MDEwOlJlcG9zaXRvcnk5OTIyMzQ2Ng==") (name . "emacs-package-dev-handbook") (full_name . "alphapapa/emacs-package-dev-handbook") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/emacs-package-dev-handbook") (description . "An Emacs package development handbook. Built with Emacs, by Emacs package developers, for Emacs package developers.") (fork) (url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook") (forks_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/forks") (keys_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/teams") (hooks_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/events") (assignees_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/tags") (blobs_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/subscription") (commits_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/merges") (archive_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/downloads") (issues_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/deployments")) (url . "https://api.github.com/notifications/threads/366302700") (subscription_url . "https://api.github.com/notifications/threads/366302700/subscription")) ((id . "366302328") (unread . t) (reason . "subscribed") (updated_at . "2018-08-10T05:27:55Z") (last_read_at . "2018-08-09T13:05:46Z") (subject (title . "Add CONTRIBUTE.org?") (url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/2") (latest_comment_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/comments/411979190") (type . "Issue")) (repository (id . 99223466) (node_id . "MDEwOlJlcG9zaXRvcnk5OTIyMzQ2Ng==") (name . "emacs-package-dev-handbook") (full_name . "alphapapa/emacs-package-dev-handbook") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/emacs-package-dev-handbook") (description . "An Emacs package development handbook. Built with Emacs, by Emacs package developers, for Emacs package developers.") (fork) (url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook") (forks_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/forks") (keys_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/teams") (hooks_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/events") (assignees_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/tags") (blobs_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/subscription") (commits_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/merges") (archive_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/downloads") (issues_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/emacs-package-dev-handbook/deployments")) (url . "https://api.github.com/notifications/threads/366302328") (subscription_url . "https://api.github.com/notifications/threads/366302328/subscription")) ((id . "364716596") (unread . t) (reason . "manual") (updated_at . "2018-08-09T16:02:59Z") (last_read_at) (subject (title . "Homebrew formula") (url . "https://api.github.com/repos/jesseduffield/lazygit/issues/14") (latest_comment_url . "https://api.github.com/repos/jesseduffield/lazygit/issues/14") (type . "Issue")) (repository (id . 134017286) (node_id . "MDEwOlJlcG9zaXRvcnkxMzQwMTcyODY=") (name . "lazygit") (full_name . "jesseduffield/lazygit") (owner (login . "jesseduffield") (id . 8456633) (node_id . "MDQ6VXNlcjg0NTY2MzM=") (avatar_url . "https://avatars0.githubusercontent.com/u/8456633?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jesseduffield") (html_url . "https://github.com/jesseduffield") (followers_url . "https://api.github.com/users/jesseduffield/followers") (following_url . "https://api.github.com/users/jesseduffield/following{/other_user}") (gists_url . "https://api.github.com/users/jesseduffield/gists{/gist_id}") (starred_url . "https://api.github.com/users/jesseduffield/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jesseduffield/subscriptions") (organizations_url . "https://api.github.com/users/jesseduffield/orgs") (repos_url . "https://api.github.com/users/jesseduffield/repos") (events_url . "https://api.github.com/users/jesseduffield/events{/privacy}") (received_events_url . "https://api.github.com/users/jesseduffield/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jesseduffield/lazygit") (description . "simple terminal UI for git commands") (fork) (url . "https://api.github.com/repos/jesseduffield/lazygit") (forks_url . "https://api.github.com/repos/jesseduffield/lazygit/forks") (keys_url . "https://api.github.com/repos/jesseduffield/lazygit/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jesseduffield/lazygit/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jesseduffield/lazygit/teams") (hooks_url . "https://api.github.com/repos/jesseduffield/lazygit/hooks") (issue_events_url . "https://api.github.com/repos/jesseduffield/lazygit/issues/events{/number}") (events_url . "https://api.github.com/repos/jesseduffield/lazygit/events") (assignees_url . "https://api.github.com/repos/jesseduffield/lazygit/assignees{/user}") (branches_url . "https://api.github.com/repos/jesseduffield/lazygit/branches{/branch}") (tags_url . "https://api.github.com/repos/jesseduffield/lazygit/tags") (blobs_url . "https://api.github.com/repos/jesseduffield/lazygit/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jesseduffield/lazygit/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jesseduffield/lazygit/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jesseduffield/lazygit/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jesseduffield/lazygit/statuses/{sha}") (languages_url . "https://api.github.com/repos/jesseduffield/lazygit/languages") (stargazers_url . "https://api.github.com/repos/jesseduffield/lazygit/stargazers") (contributors_url . "https://api.github.com/repos/jesseduffield/lazygit/contributors") (subscribers_url . "https://api.github.com/repos/jesseduffield/lazygit/subscribers") (subscription_url . "https://api.github.com/repos/jesseduffield/lazygit/subscription") (commits_url . "https://api.github.com/repos/jesseduffield/lazygit/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jesseduffield/lazygit/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jesseduffield/lazygit/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jesseduffield/lazygit/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jesseduffield/lazygit/contents/{+path}") (compare_url . "https://api.github.com/repos/jesseduffield/lazygit/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jesseduffield/lazygit/merges") (archive_url . "https://api.github.com/repos/jesseduffield/lazygit/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jesseduffield/lazygit/downloads") (issues_url . "https://api.github.com/repos/jesseduffield/lazygit/issues{/number}") (pulls_url . "https://api.github.com/repos/jesseduffield/lazygit/pulls{/number}") (milestones_url . "https://api.github.com/repos/jesseduffield/lazygit/milestones{/number}") (notifications_url . "https://api.github.com/repos/jesseduffield/lazygit/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jesseduffield/lazygit/labels{/name}") (releases_url . "https://api.github.com/repos/jesseduffield/lazygit/releases{/id}") (deployments_url . "https://api.github.com/repos/jesseduffield/lazygit/deployments")) (url . "https://api.github.com/notifications/threads/364716596") (subscription_url . "https://api.github.com/notifications/threads/364716596/subscription")) ((id . "366217493") (unread . t) (reason . "subscribed") (updated_at . "2018-08-09T10:19:36Z") (last_read_at) (subject (title . "pandoc-citeproc fails to parse \\{`u}") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/345") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/411710219") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/366217493") (subscription_url . "https://api.github.com/notifications/threads/366217493/subscription")) ((id . "366032399") (unread . t) (reason . "subscribed") (updated_at . "2018-08-08T16:54:47Z") (last_read_at) (subject (title . "Bulk conversion problem") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/344") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/344") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/366032399") (subscription_url . "https://api.github.com/notifications/threads/366032399/subscription")) ((id . "365485882") (unread . t) (reason . "subscribed") (updated_at . "2018-08-07T15:58:05Z") (last_read_at) (subject (title . "stuck on Tapping caskroom/cask") (url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/45") (latest_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/45") (type . "Issue")) (repository (id . 9118195) (node_id . "MDEwOlJlcG9zaXRvcnk5MTE4MTk1") (name . "keyboard") (full_name . "jasonrudolph/keyboard") (owner (login . "jasonrudolph") (id . 2988) (node_id . "MDQ6VXNlcjI5ODg=") (avatar_url . "https://avatars3.githubusercontent.com/u/2988?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jasonrudolph") (html_url . "https://github.com/jasonrudolph") (followers_url . "https://api.github.com/users/jasonrudolph/followers") (following_url . "https://api.github.com/users/jasonrudolph/following{/other_user}") (gists_url . "https://api.github.com/users/jasonrudolph/gists{/gist_id}") (starred_url . "https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jasonrudolph/subscriptions") (organizations_url . "https://api.github.com/users/jasonrudolph/orgs") (repos_url . "https://api.github.com/users/jasonrudolph/repos") (events_url . "https://api.github.com/users/jasonrudolph/events{/privacy}") (received_events_url . "https://api.github.com/users/jasonrudolph/received_events") (type . "User") (site_admin . t)) (private) (html_url . "https://github.com/jasonrudolph/keyboard") (description . "⌨ Toward a more useful keyboard") (fork) (url . "https://api.github.com/repos/jasonrudolph/keyboard") (forks_url . "https://api.github.com/repos/jasonrudolph/keyboard/forks") (keys_url . "https://api.github.com/repos/jasonrudolph/keyboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jasonrudolph/keyboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jasonrudolph/keyboard/teams") (hooks_url . "https://api.github.com/repos/jasonrudolph/keyboard/hooks") (issue_events_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/events{/number}") (events_url . "https://api.github.com/repos/jasonrudolph/keyboard/events") (assignees_url . "https://api.github.com/repos/jasonrudolph/keyboard/assignees{/user}") (branches_url . "https://api.github.com/repos/jasonrudolph/keyboard/branches{/branch}") (tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/tags") (blobs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jasonrudolph/keyboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/jasonrudolph/keyboard/languages") (stargazers_url . "https://api.github.com/repos/jasonrudolph/keyboard/stargazers") (contributors_url . "https://api.github.com/repos/jasonrudolph/keyboard/contributors") (subscribers_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscribers") (subscription_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscription") (commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jasonrudolph/keyboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jasonrudolph/keyboard/contents/{+path}") (compare_url . "https://api.github.com/repos/jasonrudolph/keyboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jasonrudolph/keyboard/merges") (archive_url . "https://api.github.com/repos/jasonrudolph/keyboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jasonrudolph/keyboard/downloads") (issues_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues{/number}") (pulls_url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/jasonrudolph/keyboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/jasonrudolph/keyboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jasonrudolph/keyboard/labels{/name}") (releases_url . "https://api.github.com/repos/jasonrudolph/keyboard/releases{/id}") (deployments_url . "https://api.github.com/repos/jasonrudolph/keyboard/deployments")) (url . "https://api.github.com/notifications/threads/365485882") (subscription_url . "https://api.github.com/notifications/threads/365485882/subscription")) ((id . "362186667") (unread . t) (reason . "subscribed") (updated_at . "2018-08-07T10:58:17Z") (last_read_at) (subject (title . "Persist 'muted' status message when microphone is muted") (url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls/44") (latest_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments/411018047") (type . "PullRequest")) (repository (id . 9118195) (node_id . "MDEwOlJlcG9zaXRvcnk5MTE4MTk1") (name . "keyboard") (full_name . "jasonrudolph/keyboard") (owner (login . "jasonrudolph") (id . 2988) (node_id . "MDQ6VXNlcjI5ODg=") (avatar_url . "https://avatars3.githubusercontent.com/u/2988?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jasonrudolph") (html_url . "https://github.com/jasonrudolph") (followers_url . "https://api.github.com/users/jasonrudolph/followers") (following_url . "https://api.github.com/users/jasonrudolph/following{/other_user}") (gists_url . "https://api.github.com/users/jasonrudolph/gists{/gist_id}") (starred_url . "https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jasonrudolph/subscriptions") (organizations_url . "https://api.github.com/users/jasonrudolph/orgs") (repos_url . "https://api.github.com/users/jasonrudolph/repos") (events_url . "https://api.github.com/users/jasonrudolph/events{/privacy}") (received_events_url . "https://api.github.com/users/jasonrudolph/received_events") (type . "User") (site_admin . t)) (private) (html_url . "https://github.com/jasonrudolph/keyboard") (description . "⌨ Toward a more useful keyboard") (fork) (url . "https://api.github.com/repos/jasonrudolph/keyboard") (forks_url . "https://api.github.com/repos/jasonrudolph/keyboard/forks") (keys_url . "https://api.github.com/repos/jasonrudolph/keyboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jasonrudolph/keyboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jasonrudolph/keyboard/teams") (hooks_url . "https://api.github.com/repos/jasonrudolph/keyboard/hooks") (issue_events_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/events{/number}") (events_url . "https://api.github.com/repos/jasonrudolph/keyboard/events") (assignees_url . "https://api.github.com/repos/jasonrudolph/keyboard/assignees{/user}") (branches_url . "https://api.github.com/repos/jasonrudolph/keyboard/branches{/branch}") (tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/tags") (blobs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jasonrudolph/keyboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/jasonrudolph/keyboard/languages") (stargazers_url . "https://api.github.com/repos/jasonrudolph/keyboard/stargazers") (contributors_url . "https://api.github.com/repos/jasonrudolph/keyboard/contributors") (subscribers_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscribers") (subscription_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscription") (commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jasonrudolph/keyboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jasonrudolph/keyboard/contents/{+path}") (compare_url . "https://api.github.com/repos/jasonrudolph/keyboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jasonrudolph/keyboard/merges") (archive_url . "https://api.github.com/repos/jasonrudolph/keyboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jasonrudolph/keyboard/downloads") (issues_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues{/number}") (pulls_url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/jasonrudolph/keyboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/jasonrudolph/keyboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jasonrudolph/keyboard/labels{/name}") (releases_url . "https://api.github.com/repos/jasonrudolph/keyboard/releases{/id}") (deployments_url . "https://api.github.com/repos/jasonrudolph/keyboard/deployments")) (url . "https://api.github.com/notifications/threads/362186667") (subscription_url . "https://api.github.com/notifications/threads/362186667/subscription")) ((id . "364696108") (unread) (reason . "author") (updated_at . "2018-08-06T14:49:30Z") (last_read_at . "2018-08-06T14:51:17Z") (subject (title . "footnotes and toc links not working") (url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/issues/46") (latest_comment_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/issues/46") (type . "Issue")) (repository (id . 56978164) (node_id . "MDEwOlJlcG9zaXRvcnk1Njk3ODE2NA==") (name . "hugo-bootstrap-premium") (full_name . "appernetic/hugo-bootstrap-premium") (owner (login . "appernetic") (id . 15160419) (node_id . "MDQ6VXNlcjE1MTYwNDE5") (avatar_url . "https://avatars2.githubusercontent.com/u/15160419?v=4") (gravatar_id . "") (url . "https://api.github.com/users/appernetic") (html_url . "https://github.com/appernetic") (followers_url . "https://api.github.com/users/appernetic/followers") (following_url . "https://api.github.com/users/appernetic/following{/other_user}") (gists_url . "https://api.github.com/users/appernetic/gists{/gist_id}") (starred_url . "https://api.github.com/users/appernetic/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/appernetic/subscriptions") (organizations_url . "https://api.github.com/users/appernetic/orgs") (repos_url . "https://api.github.com/users/appernetic/repos") (events_url . "https://api.github.com/users/appernetic/events{/privacy}") (received_events_url . "https://api.github.com/users/appernetic/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/appernetic/hugo-bootstrap-premium") (description . "Hugo appernetic bootstrap premium theme") (fork) (url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium") (forks_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/forks") (keys_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/teams") (hooks_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/hooks") (issue_events_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/issues/events{/number}") (events_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/events") (assignees_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/assignees{/user}") (branches_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/branches{/branch}") (tags_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/tags") (blobs_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/git/refs{/sha}") (trees_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/statuses/{sha}") (languages_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/languages") (stargazers_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/stargazers") (contributors_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/contributors") (subscribers_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/subscribers") (subscription_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/subscription") (commits_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/commits{/sha}") (git_commits_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/git/commits{/sha}") (comments_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/comments{/number}") (issue_comment_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/issues/comments{/number}") (contents_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/contents/{+path}") (compare_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/merges") (archive_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/downloads") (issues_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/issues{/number}") (pulls_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/pulls{/number}") (milestones_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/milestones{/number}") (notifications_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/labels{/name}") (releases_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/releases{/id}") (deployments_url . "https://api.github.com/repos/appernetic/hugo-bootstrap-premium/deployments")) (url . "https://api.github.com/notifications/threads/364696108") (subscription_url . "https://api.github.com/notifications/threads/364696108/subscription")) ((id . "364770716") (unread) (reason . "subscribed") (updated_at . "2018-08-06T10:34:13Z") (last_read_at . "2018-08-05T23:22:25Z") (subject (title . "Add instalation instructions for ubuntu") (url . "https://api.github.com/repos/jesseduffield/lazygit/pulls/20") (latest_comment_url . "https://api.github.com/repos/jesseduffield/lazygit/issues/comments/410665053") (type . "PullRequest")) (repository (id . 134017286) (node_id . "MDEwOlJlcG9zaXRvcnkxMzQwMTcyODY=") (name . "lazygit") (full_name . "jesseduffield/lazygit") (owner (login . "jesseduffield") (id . 8456633) (node_id . "MDQ6VXNlcjg0NTY2MzM=") (avatar_url . "https://avatars0.githubusercontent.com/u/8456633?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jesseduffield") (html_url . "https://github.com/jesseduffield") (followers_url . "https://api.github.com/users/jesseduffield/followers") (following_url . "https://api.github.com/users/jesseduffield/following{/other_user}") (gists_url . "https://api.github.com/users/jesseduffield/gists{/gist_id}") (starred_url . "https://api.github.com/users/jesseduffield/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jesseduffield/subscriptions") (organizations_url . "https://api.github.com/users/jesseduffield/orgs") (repos_url . "https://api.github.com/users/jesseduffield/repos") (events_url . "https://api.github.com/users/jesseduffield/events{/privacy}") (received_events_url . "https://api.github.com/users/jesseduffield/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jesseduffield/lazygit") (description . "simple terminal UI for git commands") (fork) (url . "https://api.github.com/repos/jesseduffield/lazygit") (forks_url . "https://api.github.com/repos/jesseduffield/lazygit/forks") (keys_url . "https://api.github.com/repos/jesseduffield/lazygit/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jesseduffield/lazygit/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jesseduffield/lazygit/teams") (hooks_url . "https://api.github.com/repos/jesseduffield/lazygit/hooks") (issue_events_url . "https://api.github.com/repos/jesseduffield/lazygit/issues/events{/number}") (events_url . "https://api.github.com/repos/jesseduffield/lazygit/events") (assignees_url . "https://api.github.com/repos/jesseduffield/lazygit/assignees{/user}") (branches_url . "https://api.github.com/repos/jesseduffield/lazygit/branches{/branch}") (tags_url . "https://api.github.com/repos/jesseduffield/lazygit/tags") (blobs_url . "https://api.github.com/repos/jesseduffield/lazygit/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jesseduffield/lazygit/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jesseduffield/lazygit/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jesseduffield/lazygit/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jesseduffield/lazygit/statuses/{sha}") (languages_url . "https://api.github.com/repos/jesseduffield/lazygit/languages") (stargazers_url . "https://api.github.com/repos/jesseduffield/lazygit/stargazers") (contributors_url . "https://api.github.com/repos/jesseduffield/lazygit/contributors") (subscribers_url . "https://api.github.com/repos/jesseduffield/lazygit/subscribers") (subscription_url . "https://api.github.com/repos/jesseduffield/lazygit/subscription") (commits_url . "https://api.github.com/repos/jesseduffield/lazygit/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jesseduffield/lazygit/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jesseduffield/lazygit/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jesseduffield/lazygit/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jesseduffield/lazygit/contents/{+path}") (compare_url . "https://api.github.com/repos/jesseduffield/lazygit/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jesseduffield/lazygit/merges") (archive_url . "https://api.github.com/repos/jesseduffield/lazygit/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jesseduffield/lazygit/downloads") (issues_url . "https://api.github.com/repos/jesseduffield/lazygit/issues{/number}") (pulls_url . "https://api.github.com/repos/jesseduffield/lazygit/pulls{/number}") (milestones_url . "https://api.github.com/repos/jesseduffield/lazygit/milestones{/number}") (notifications_url . "https://api.github.com/repos/jesseduffield/lazygit/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jesseduffield/lazygit/labels{/name}") (releases_url . "https://api.github.com/repos/jesseduffield/lazygit/releases{/id}") (deployments_url . "https://api.github.com/repos/jesseduffield/lazygit/deployments")) (url . "https://api.github.com/notifications/threads/364770716") (subscription_url . "https://api.github.com/notifications/threads/364770716/subscription")) ((id . "364782020") (unread . t) (reason . "subscribed") (updated_at . "2018-08-08T11:29:41Z") (last_read_at) (subject (title . "Releases / Binary Distribution") (url . "https://api.github.com/repos/jesseduffield/lazygit/issues/21") (latest_comment_url . "https://api.github.com/repos/jesseduffield/lazygit/issues/comments/411374383") (type . "Issue")) (repository (id . 134017286) (node_id . "MDEwOlJlcG9zaXRvcnkxMzQwMTcyODY=") (name . "lazygit") (full_name . "jesseduffield/lazygit") (owner (login . "jesseduffield") (id . 8456633) (node_id . "MDQ6VXNlcjg0NTY2MzM=") (avatar_url . "https://avatars0.githubusercontent.com/u/8456633?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jesseduffield") (html_url . "https://github.com/jesseduffield") (followers_url . "https://api.github.com/users/jesseduffield/followers") (following_url . "https://api.github.com/users/jesseduffield/following{/other_user}") (gists_url . "https://api.github.com/users/jesseduffield/gists{/gist_id}") (starred_url . "https://api.github.com/users/jesseduffield/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jesseduffield/subscriptions") (organizations_url . "https://api.github.com/users/jesseduffield/orgs") (repos_url . "https://api.github.com/users/jesseduffield/repos") (events_url . "https://api.github.com/users/jesseduffield/events{/privacy}") (received_events_url . "https://api.github.com/users/jesseduffield/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jesseduffield/lazygit") (description . "simple terminal UI for git commands") (fork) (url . "https://api.github.com/repos/jesseduffield/lazygit") (forks_url . "https://api.github.com/repos/jesseduffield/lazygit/forks") (keys_url . "https://api.github.com/repos/jesseduffield/lazygit/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jesseduffield/lazygit/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jesseduffield/lazygit/teams") (hooks_url . "https://api.github.com/repos/jesseduffield/lazygit/hooks") (issue_events_url . "https://api.github.com/repos/jesseduffield/lazygit/issues/events{/number}") (events_url . "https://api.github.com/repos/jesseduffield/lazygit/events") (assignees_url . "https://api.github.com/repos/jesseduffield/lazygit/assignees{/user}") (branches_url . "https://api.github.com/repos/jesseduffield/lazygit/branches{/branch}") (tags_url . "https://api.github.com/repos/jesseduffield/lazygit/tags") (blobs_url . "https://api.github.com/repos/jesseduffield/lazygit/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jesseduffield/lazygit/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jesseduffield/lazygit/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jesseduffield/lazygit/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jesseduffield/lazygit/statuses/{sha}") (languages_url . "https://api.github.com/repos/jesseduffield/lazygit/languages") (stargazers_url . "https://api.github.com/repos/jesseduffield/lazygit/stargazers") (contributors_url . "https://api.github.com/repos/jesseduffield/lazygit/contributors") (subscribers_url . "https://api.github.com/repos/jesseduffield/lazygit/subscribers") (subscription_url . "https://api.github.com/repos/jesseduffield/lazygit/subscription") (commits_url . "https://api.github.com/repos/jesseduffield/lazygit/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jesseduffield/lazygit/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jesseduffield/lazygit/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jesseduffield/lazygit/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jesseduffield/lazygit/contents/{+path}") (compare_url . "https://api.github.com/repos/jesseduffield/lazygit/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jesseduffield/lazygit/merges") (archive_url . "https://api.github.com/repos/jesseduffield/lazygit/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jesseduffield/lazygit/downloads") (issues_url . "https://api.github.com/repos/jesseduffield/lazygit/issues{/number}") (pulls_url . "https://api.github.com/repos/jesseduffield/lazygit/pulls{/number}") (milestones_url . "https://api.github.com/repos/jesseduffield/lazygit/milestones{/number}") (notifications_url . "https://api.github.com/repos/jesseduffield/lazygit/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jesseduffield/lazygit/labels{/name}") (releases_url . "https://api.github.com/repos/jesseduffield/lazygit/releases{/id}") (deployments_url . "https://api.github.com/repos/jesseduffield/lazygit/deployments")) (url . "https://api.github.com/notifications/threads/364782020") (subscription_url . "https://api.github.com/notifications/threads/364782020/subscription")) ((id . "363320290") (unread . t) (reason . "subscribed") (updated_at . "2018-08-05T00:29:53Z") (last_read_at) (subject (title . "(evil-make-overriding-map dired-mode-map 'normal) is void") (url . "https://api.github.com/repos/noctuid/evil-guide/issues/10") (latest_comment_url . "https://api.github.com/repos/noctuid/evil-guide/issues/10") (type . "Issue")) (repository (id . 59619085) (node_id . "MDEwOlJlcG9zaXRvcnk1OTYxOTA4NQ==") (name . "evil-guide") (full_name . "noctuid/evil-guide") (owner (login . "noctuid") (id . 4250696) (node_id . "MDQ6VXNlcjQyNTA2OTY=") (avatar_url . "https://avatars1.githubusercontent.com/u/4250696?v=4") (gravatar_id . "") (url . "https://api.github.com/users/noctuid") (html_url . "https://github.com/noctuid") (followers_url . "https://api.github.com/users/noctuid/followers") (following_url . "https://api.github.com/users/noctuid/following{/other_user}") (gists_url . "https://api.github.com/users/noctuid/gists{/gist_id}") (starred_url . "https://api.github.com/users/noctuid/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/noctuid/subscriptions") (organizations_url . "https://api.github.com/users/noctuid/orgs") (repos_url . "https://api.github.com/users/noctuid/repos") (events_url . "https://api.github.com/users/noctuid/events{/privacy}") (received_events_url . "https://api.github.com/users/noctuid/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/noctuid/evil-guide") (description . "Draft of a guide for using emacs with evil") (fork) (url . "https://api.github.com/repos/noctuid/evil-guide") (forks_url . "https://api.github.com/repos/noctuid/evil-guide/forks") (keys_url . "https://api.github.com/repos/noctuid/evil-guide/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/noctuid/evil-guide/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/noctuid/evil-guide/teams") (hooks_url . "https://api.github.com/repos/noctuid/evil-guide/hooks") (issue_events_url . "https://api.github.com/repos/noctuid/evil-guide/issues/events{/number}") (events_url . "https://api.github.com/repos/noctuid/evil-guide/events") (assignees_url . "https://api.github.com/repos/noctuid/evil-guide/assignees{/user}") (branches_url . "https://api.github.com/repos/noctuid/evil-guide/branches{/branch}") (tags_url . "https://api.github.com/repos/noctuid/evil-guide/tags") (blobs_url . "https://api.github.com/repos/noctuid/evil-guide/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/noctuid/evil-guide/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/noctuid/evil-guide/git/refs{/sha}") (trees_url . "https://api.github.com/repos/noctuid/evil-guide/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/noctuid/evil-guide/statuses/{sha}") (languages_url . "https://api.github.com/repos/noctuid/evil-guide/languages") (stargazers_url . "https://api.github.com/repos/noctuid/evil-guide/stargazers") (contributors_url . "https://api.github.com/repos/noctuid/evil-guide/contributors") (subscribers_url . "https://api.github.com/repos/noctuid/evil-guide/subscribers") (subscription_url . "https://api.github.com/repos/noctuid/evil-guide/subscription") (commits_url . "https://api.github.com/repos/noctuid/evil-guide/commits{/sha}") (git_commits_url . "https://api.github.com/repos/noctuid/evil-guide/git/commits{/sha}") (comments_url . "https://api.github.com/repos/noctuid/evil-guide/comments{/number}") (issue_comment_url . "https://api.github.com/repos/noctuid/evil-guide/issues/comments{/number}") (contents_url . "https://api.github.com/repos/noctuid/evil-guide/contents/{+path}") (compare_url . "https://api.github.com/repos/noctuid/evil-guide/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/noctuid/evil-guide/merges") (archive_url . "https://api.github.com/repos/noctuid/evil-guide/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/noctuid/evil-guide/downloads") (issues_url . "https://api.github.com/repos/noctuid/evil-guide/issues{/number}") (pulls_url . "https://api.github.com/repos/noctuid/evil-guide/pulls{/number}") (milestones_url . "https://api.github.com/repos/noctuid/evil-guide/milestones{/number}") (notifications_url . "https://api.github.com/repos/noctuid/evil-guide/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/noctuid/evil-guide/labels{/name}") (releases_url . "https://api.github.com/repos/noctuid/evil-guide/releases{/id}") (deployments_url . "https://api.github.com/repos/noctuid/evil-guide/deployments")) (url . "https://api.github.com/notifications/threads/363320290") (subscription_url . "https://api.github.com/notifications/threads/363320290/subscription")) ((id . "58845134") (unread . t) (reason . "manual") (updated_at . "2018-08-02T13:26:46Z") (last_read_at) (subject (title . "Support retina display on OSX") (url . "https://api.github.com/repos/politza/pdf-tools/issues/51") (latest_comment_url . "https://api.github.com/repos/politza/pdf-tools/issues/comments/409925399") (type . "Issue")) (repository (id . 9309261) (node_id . "MDEwOlJlcG9zaXRvcnk5MzA5MjYx") (name . "pdf-tools") (full_name . "politza/pdf-tools") (owner (login . "politza") (id . 1177857) (node_id . "MDQ6VXNlcjExNzc4NTc=") (avatar_url . "https://avatars1.githubusercontent.com/u/1177857?v=4") (gravatar_id . "") (url . "https://api.github.com/users/politza") (html_url . "https://github.com/politza") (followers_url . "https://api.github.com/users/politza/followers") (following_url . "https://api.github.com/users/politza/following{/other_user}") (gists_url . "https://api.github.com/users/politza/gists{/gist_id}") (starred_url . "https://api.github.com/users/politza/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/politza/subscriptions") (organizations_url . "https://api.github.com/users/politza/orgs") (repos_url . "https://api.github.com/users/politza/repos") (events_url . "https://api.github.com/users/politza/events{/privacy}") (received_events_url . "https://api.github.com/users/politza/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/politza/pdf-tools") (description . "Emacs support library for PDF files.") (fork) (url . "https://api.github.com/repos/politza/pdf-tools") (forks_url . "https://api.github.com/repos/politza/pdf-tools/forks") (keys_url . "https://api.github.com/repos/politza/pdf-tools/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/politza/pdf-tools/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/politza/pdf-tools/teams") (hooks_url . "https://api.github.com/repos/politza/pdf-tools/hooks") (issue_events_url . "https://api.github.com/repos/politza/pdf-tools/issues/events{/number}") (events_url . "https://api.github.com/repos/politza/pdf-tools/events") (assignees_url . "https://api.github.com/repos/politza/pdf-tools/assignees{/user}") (branches_url . "https://api.github.com/repos/politza/pdf-tools/branches{/branch}") (tags_url . "https://api.github.com/repos/politza/pdf-tools/tags") (blobs_url . "https://api.github.com/repos/politza/pdf-tools/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/politza/pdf-tools/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/politza/pdf-tools/git/refs{/sha}") (trees_url . "https://api.github.com/repos/politza/pdf-tools/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/politza/pdf-tools/statuses/{sha}") (languages_url . "https://api.github.com/repos/politza/pdf-tools/languages") (stargazers_url . "https://api.github.com/repos/politza/pdf-tools/stargazers") (contributors_url . "https://api.github.com/repos/politza/pdf-tools/contributors") (subscribers_url . "https://api.github.com/repos/politza/pdf-tools/subscribers") (subscription_url . "https://api.github.com/repos/politza/pdf-tools/subscription") (commits_url . "https://api.github.com/repos/politza/pdf-tools/commits{/sha}") (git_commits_url . "https://api.github.com/repos/politza/pdf-tools/git/commits{/sha}") (comments_url . "https://api.github.com/repos/politza/pdf-tools/comments{/number}") (issue_comment_url . "https://api.github.com/repos/politza/pdf-tools/issues/comments{/number}") (contents_url . "https://api.github.com/repos/politza/pdf-tools/contents/{+path}") (compare_url . "https://api.github.com/repos/politza/pdf-tools/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/politza/pdf-tools/merges") (archive_url . "https://api.github.com/repos/politza/pdf-tools/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/politza/pdf-tools/downloads") (issues_url . "https://api.github.com/repos/politza/pdf-tools/issues{/number}") (pulls_url . "https://api.github.com/repos/politza/pdf-tools/pulls{/number}") (milestones_url . "https://api.github.com/repos/politza/pdf-tools/milestones{/number}") (notifications_url . "https://api.github.com/repos/politza/pdf-tools/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/politza/pdf-tools/labels{/name}") (releases_url . "https://api.github.com/repos/politza/pdf-tools/releases{/id}") (deployments_url . "https://api.github.com/repos/politza/pdf-tools/deployments")) (url . "https://api.github.com/notifications/threads/58845134") (subscription_url . "https://api.github.com/notifications/threads/58845134/subscription")) ((id . "363614678") (unread . t) (reason . "subscribed") (updated_at . "2018-08-01T19:20:41Z") (last_read_at) (subject (title . "error \"Loading file c:/Users/shack/.emacs.d/elpa/org-category-capture-20180601.242/org-category-capture.el failed to provide feature ‘org-category-capture’\"") (url . "https://api.github.com/repos/IvanMalison/org-projectile/issues/40") (latest_comment_url . "https://api.github.com/repos/IvanMalison/org-projectile/issues/40") (type . "Issue")) (repository (id . 27714173) (node_id . "MDEwOlJlcG9zaXRvcnkyNzcxNDE3Mw==") (name . "org-projectile") (full_name . "IvanMalison/org-projectile") (owner (login . "IvanMalison") (id . 1246619) (node_id . "MDQ6VXNlcjEyNDY2MTk=") (avatar_url . "https://avatars3.githubusercontent.com/u/1246619?v=4") (gravatar_id . "") (url . "https://api.github.com/users/IvanMalison") (html_url . "https://github.com/IvanMalison") (followers_url . "https://api.github.com/users/IvanMalison/followers") (following_url . "https://api.github.com/users/IvanMalison/following{/other_user}") (gists_url . "https://api.github.com/users/IvanMalison/gists{/gist_id}") (starred_url . "https://api.github.com/users/IvanMalison/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/IvanMalison/subscriptions") (organizations_url . "https://api.github.com/users/IvanMalison/orgs") (repos_url . "https://api.github.com/users/IvanMalison/repos") (events_url . "https://api.github.com/users/IvanMalison/events{/privacy}") (received_events_url . "https://api.github.com/users/IvanMalison/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/IvanMalison/org-projectile") (description . "Manage org-mode TODOs for your projectile projects") (fork) (url . "https://api.github.com/repos/IvanMalison/org-projectile") (forks_url . "https://api.github.com/repos/IvanMalison/org-projectile/forks") (keys_url . "https://api.github.com/repos/IvanMalison/org-projectile/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/IvanMalison/org-projectile/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/IvanMalison/org-projectile/teams") (hooks_url . "https://api.github.com/repos/IvanMalison/org-projectile/hooks") (issue_events_url . "https://api.github.com/repos/IvanMalison/org-projectile/issues/events{/number}") (events_url . "https://api.github.com/repos/IvanMalison/org-projectile/events") (assignees_url . "https://api.github.com/repos/IvanMalison/org-projectile/assignees{/user}") (branches_url . "https://api.github.com/repos/IvanMalison/org-projectile/branches{/branch}") (tags_url . "https://api.github.com/repos/IvanMalison/org-projectile/tags") (blobs_url . "https://api.github.com/repos/IvanMalison/org-projectile/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/IvanMalison/org-projectile/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/IvanMalison/org-projectile/git/refs{/sha}") (trees_url . "https://api.github.com/repos/IvanMalison/org-projectile/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/IvanMalison/org-projectile/statuses/{sha}") (languages_url . "https://api.github.com/repos/IvanMalison/org-projectile/languages") (stargazers_url . "https://api.github.com/repos/IvanMalison/org-projectile/stargazers") (contributors_url . "https://api.github.com/repos/IvanMalison/org-projectile/contributors") (subscribers_url . "https://api.github.com/repos/IvanMalison/org-projectile/subscribers") (subscription_url . "https://api.github.com/repos/IvanMalison/org-projectile/subscription") (commits_url . "https://api.github.com/repos/IvanMalison/org-projectile/commits{/sha}") (git_commits_url . "https://api.github.com/repos/IvanMalison/org-projectile/git/commits{/sha}") (comments_url . "https://api.github.com/repos/IvanMalison/org-projectile/comments{/number}") (issue_comment_url . "https://api.github.com/repos/IvanMalison/org-projectile/issues/comments{/number}") (contents_url . "https://api.github.com/repos/IvanMalison/org-projectile/contents/{+path}") (compare_url . "https://api.github.com/repos/IvanMalison/org-projectile/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/IvanMalison/org-projectile/merges") (archive_url . "https://api.github.com/repos/IvanMalison/org-projectile/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/IvanMalison/org-projectile/downloads") (issues_url . "https://api.github.com/repos/IvanMalison/org-projectile/issues{/number}") (pulls_url . "https://api.github.com/repos/IvanMalison/org-projectile/pulls{/number}") (milestones_url . "https://api.github.com/repos/IvanMalison/org-projectile/milestones{/number}") (notifications_url . "https://api.github.com/repos/IvanMalison/org-projectile/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/IvanMalison/org-projectile/labels{/name}") (releases_url . "https://api.github.com/repos/IvanMalison/org-projectile/releases{/id}") (deployments_url . "https://api.github.com/repos/IvanMalison/org-projectile/deployments")) (url . "https://api.github.com/notifications/threads/363614678") (subscription_url . "https://api.github.com/notifications/threads/363614678/subscription")) ((id . "363562408") (unread . t) (reason . "subscribed") (updated_at . "2018-08-01T17:02:58Z") (last_read_at) (subject (title . "Not all of sublimity-map is syntax-highlighted") (url . "https://api.github.com/repos/zk-phi/sublimity/issues/51") (latest_comment_url . "https://api.github.com/repos/zk-phi/sublimity/issues/51") (type . "Issue")) (repository (id . 9364764) (node_id . "MDEwOlJlcG9zaXRvcnk5MzY0NzY0") (name . "sublimity") (full_name . "zk-phi/sublimity") (owner (login . "zk-phi") (id . 3530521) (node_id . "MDQ6VXNlcjM1MzA1MjE=") (avatar_url . "https://avatars3.githubusercontent.com/u/3530521?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zk-phi") (html_url . "https://github.com/zk-phi") (followers_url . "https://api.github.com/users/zk-phi/followers") (following_url . "https://api.github.com/users/zk-phi/following{/other_user}") (gists_url . "https://api.github.com/users/zk-phi/gists{/gist_id}") (starred_url . "https://api.github.com/users/zk-phi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zk-phi/subscriptions") (organizations_url . "https://api.github.com/users/zk-phi/orgs") (repos_url . "https://api.github.com/users/zk-phi/repos") (events_url . "https://api.github.com/users/zk-phi/events{/privacy}") (received_events_url . "https://api.github.com/users/zk-phi/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zk-phi/sublimity") (description . "[emacs] smooth-scrolling and minimap like sublime editor") (fork) (url . "https://api.github.com/repos/zk-phi/sublimity") (forks_url . "https://api.github.com/repos/zk-phi/sublimity/forks") (keys_url . "https://api.github.com/repos/zk-phi/sublimity/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zk-phi/sublimity/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zk-phi/sublimity/teams") (hooks_url . "https://api.github.com/repos/zk-phi/sublimity/hooks") (issue_events_url . "https://api.github.com/repos/zk-phi/sublimity/issues/events{/number}") (events_url . "https://api.github.com/repos/zk-phi/sublimity/events") (assignees_url . "https://api.github.com/repos/zk-phi/sublimity/assignees{/user}") (branches_url . "https://api.github.com/repos/zk-phi/sublimity/branches{/branch}") (tags_url . "https://api.github.com/repos/zk-phi/sublimity/tags") (blobs_url . "https://api.github.com/repos/zk-phi/sublimity/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zk-phi/sublimity/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zk-phi/sublimity/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zk-phi/sublimity/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zk-phi/sublimity/statuses/{sha}") (languages_url . "https://api.github.com/repos/zk-phi/sublimity/languages") (stargazers_url . "https://api.github.com/repos/zk-phi/sublimity/stargazers") (contributors_url . "https://api.github.com/repos/zk-phi/sublimity/contributors") (subscribers_url . "https://api.github.com/repos/zk-phi/sublimity/subscribers") (subscription_url . "https://api.github.com/repos/zk-phi/sublimity/subscription") (commits_url . "https://api.github.com/repos/zk-phi/sublimity/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zk-phi/sublimity/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zk-phi/sublimity/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zk-phi/sublimity/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zk-phi/sublimity/contents/{+path}") (compare_url . "https://api.github.com/repos/zk-phi/sublimity/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zk-phi/sublimity/merges") (archive_url . "https://api.github.com/repos/zk-phi/sublimity/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zk-phi/sublimity/downloads") (issues_url . "https://api.github.com/repos/zk-phi/sublimity/issues{/number}") (pulls_url . "https://api.github.com/repos/zk-phi/sublimity/pulls{/number}") (milestones_url . "https://api.github.com/repos/zk-phi/sublimity/milestones{/number}") (notifications_url . "https://api.github.com/repos/zk-phi/sublimity/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zk-phi/sublimity/labels{/name}") (releases_url . "https://api.github.com/repos/zk-phi/sublimity/releases{/id}") (deployments_url . "https://api.github.com/repos/zk-phi/sublimity/deployments")) (url . "https://api.github.com/notifications/threads/363562408") (subscription_url . "https://api.github.com/notifications/threads/363562408/subscription")) ((id . "334909728") (unread . t) (reason . "subscribed") (updated_at . "2018-07-31T08:47:07Z") (last_read_at) (subject (title . "Add dmacs") (url . "https://api.github.com/repos/caisah/emacs.dz/pulls/31") (latest_comment_url . "https://api.github.com/repos/caisah/emacs.dz/issues/comments/409144836") (type . "PullRequest")) (repository (id . 71278156) (node_id . "MDEwOlJlcG9zaXRvcnk3MTI3ODE1Ng==") (name . "emacs.dz") (full_name . "caisah/emacs.dz") (owner (login . "caisah") (id . 1536049) (node_id . "MDQ6VXNlcjE1MzYwNDk=") (avatar_url . "https://avatars2.githubusercontent.com/u/1536049?v=4") (gravatar_id . "") (url . "https://api.github.com/users/caisah") (html_url . "https://github.com/caisah") (followers_url . "https://api.github.com/users/caisah/followers") (following_url . "https://api.github.com/users/caisah/following{/other_user}") (gists_url . "https://api.github.com/users/caisah/gists{/gist_id}") (starred_url . "https://api.github.com/users/caisah/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/caisah/subscriptions") (organizations_url . "https://api.github.com/users/caisah/orgs") (repos_url . "https://api.github.com/users/caisah/repos") (events_url . "https://api.github.com/users/caisah/events{/privacy}") (received_events_url . "https://api.github.com/users/caisah/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/caisah/emacs.dz") (description . "Awesome emacs config files") (fork) (url . "https://api.github.com/repos/caisah/emacs.dz") (forks_url . "https://api.github.com/repos/caisah/emacs.dz/forks") (keys_url . "https://api.github.com/repos/caisah/emacs.dz/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/caisah/emacs.dz/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/caisah/emacs.dz/teams") (hooks_url . "https://api.github.com/repos/caisah/emacs.dz/hooks") (issue_events_url . "https://api.github.com/repos/caisah/emacs.dz/issues/events{/number}") (events_url . "https://api.github.com/repos/caisah/emacs.dz/events") (assignees_url . "https://api.github.com/repos/caisah/emacs.dz/assignees{/user}") (branches_url . "https://api.github.com/repos/caisah/emacs.dz/branches{/branch}") (tags_url . "https://api.github.com/repos/caisah/emacs.dz/tags") (blobs_url . "https://api.github.com/repos/caisah/emacs.dz/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/caisah/emacs.dz/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/caisah/emacs.dz/git/refs{/sha}") (trees_url . "https://api.github.com/repos/caisah/emacs.dz/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/caisah/emacs.dz/statuses/{sha}") (languages_url . "https://api.github.com/repos/caisah/emacs.dz/languages") (stargazers_url . "https://api.github.com/repos/caisah/emacs.dz/stargazers") (contributors_url . "https://api.github.com/repos/caisah/emacs.dz/contributors") (subscribers_url . "https://api.github.com/repos/caisah/emacs.dz/subscribers") (subscription_url . "https://api.github.com/repos/caisah/emacs.dz/subscription") (commits_url . "https://api.github.com/repos/caisah/emacs.dz/commits{/sha}") (git_commits_url . "https://api.github.com/repos/caisah/emacs.dz/git/commits{/sha}") (comments_url . "https://api.github.com/repos/caisah/emacs.dz/comments{/number}") (issue_comment_url . "https://api.github.com/repos/caisah/emacs.dz/issues/comments{/number}") (contents_url . "https://api.github.com/repos/caisah/emacs.dz/contents/{+path}") (compare_url . "https://api.github.com/repos/caisah/emacs.dz/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/caisah/emacs.dz/merges") (archive_url . "https://api.github.com/repos/caisah/emacs.dz/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/caisah/emacs.dz/downloads") (issues_url . "https://api.github.com/repos/caisah/emacs.dz/issues{/number}") (pulls_url . "https://api.github.com/repos/caisah/emacs.dz/pulls{/number}") (milestones_url . "https://api.github.com/repos/caisah/emacs.dz/milestones{/number}") (notifications_url . "https://api.github.com/repos/caisah/emacs.dz/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/caisah/emacs.dz/labels{/name}") (releases_url . "https://api.github.com/repos/caisah/emacs.dz/releases{/id}") (deployments_url . "https://api.github.com/repos/caisah/emacs.dz/deployments")) (url . "https://api.github.com/notifications/threads/334909728") (subscription_url . "https://api.github.com/notifications/threads/334909728/subscription")) ((id . "218700854") (unread . t) (reason . "subscribed") (updated_at . "2018-07-30T21:18:23Z") (last_read_at) (subject (title . "Trying to install with natural bars patch") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/29") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments/409013742") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/218700854") (subscription_url . "https://api.github.com/notifications/threads/218700854/subscription")) ((id . "361382147") (unread . t) (reason . "mention") (updated_at . "2018-07-28T17:45:53Z") (last_read_at) (subject (title . "Add more example sites!") (url . "https://api.github.com/repos/kaushalmodi/ox-hugo/commits/081a4a977a191113127ac56bc0cf33bbc4f41deb") (latest_comment_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/comments/29869751") (type . "Commit")) (repository (id . 81684869) (node_id . "MDEwOlJlcG9zaXRvcnk4MTY4NDg2OQ==") (name . "ox-hugo") (full_name . "kaushalmodi/ox-hugo") (owner (login . "kaushalmodi") (id . 3578197) (node_id . "MDQ6VXNlcjM1NzgxOTc=") (avatar_url . "https://avatars2.githubusercontent.com/u/3578197?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kaushalmodi") (html_url . "https://github.com/kaushalmodi") (followers_url . "https://api.github.com/users/kaushalmodi/followers") (following_url . "https://api.github.com/users/kaushalmodi/following{/other_user}") (gists_url . "https://api.github.com/users/kaushalmodi/gists{/gist_id}") (starred_url . "https://api.github.com/users/kaushalmodi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kaushalmodi/subscriptions") (organizations_url . "https://api.github.com/users/kaushalmodi/orgs") (repos_url . "https://api.github.com/users/kaushalmodi/repos") (events_url . "https://api.github.com/users/kaushalmodi/events{/privacy}") (received_events_url . "https://api.github.com/users/kaushalmodi/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/kaushalmodi/ox-hugo") (description . "A carefully crafted Org exporter back-end for Hugo ") (fork) (url . "https://api.github.com/repos/kaushalmodi/ox-hugo") (forks_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/forks") (keys_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/teams") (hooks_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/hooks") (issue_events_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/issues/events{/number}") (events_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/events") (assignees_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/assignees{/user}") (branches_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/branches{/branch}") (tags_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/tags") (blobs_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/git/refs{/sha}") (trees_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/statuses/{sha}") (languages_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/languages") (stargazers_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/stargazers") (contributors_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/contributors") (subscribers_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/subscribers") (subscription_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/subscription") (commits_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/commits{/sha}") (git_commits_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/git/commits{/sha}") (comments_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/comments{/number}") (issue_comment_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/issues/comments{/number}") (contents_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/contents/{+path}") (compare_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/merges") (archive_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/downloads") (issues_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/issues{/number}") (pulls_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/pulls{/number}") (milestones_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/milestones{/number}") (notifications_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/labels{/name}") (releases_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/releases{/id}") (deployments_url . "https://api.github.com/repos/kaushalmodi/ox-hugo/deployments")) (url . "https://api.github.com/notifications/threads/361382147") (subscription_url . "https://api.github.com/notifications/threads/361382147/subscription")) ((id . "279577061") (unread . t) (reason . "subscribed") (updated_at . "2018-07-27T05:41:25Z") (last_read_at . "2018-07-23T00:50:42Z") (subject (title . "Title bar text color broken") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/55") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments/408317248") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/279577061") (subscription_url . "https://api.github.com/notifications/threads/279577061/subscription")) ((id . "359137683") (unread . t) (reason . "subscribed") (updated_at . "2018-07-23T02:49:27Z") (last_read_at) (subject (title . "Fixed typo") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls/76") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments/406924163") (type . "PullRequest")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/359137683") (subscription_url . "https://api.github.com/notifications/threads/359137683/subscription")) ((id . "358009100") (unread . t) (reason . "subscribed") (updated_at . "2018-07-21T15:54:20Z") (last_read_at) (subject (title . "Got \"A Javascript error occured in the main process\"") (url . "https://api.github.com/repos/blahsd/snwe/issues/42") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments/406805674") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/358009100") (subscription_url . "https://api.github.com/notifications/threads/358009100/subscription")) ((id . "359036248") (unread . t) (reason . "subscribed") (updated_at . "2018-07-21T12:44:49Z") (last_read_at) (subject (title . "Swinsian support") (url . "https://api.github.com/repos/blahsd/snwe/issues/43") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/43") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/359036248") (subscription_url . "https://api.github.com/notifications/threads/359036248/subscription")) ((id . "344623688") (unread . t) (reason . "subscribed") (updated_at . "2018-07-19T23:19:58Z") (last_read_at) (subject (title . "Fixed bug when typing \"s\" or \"d\" + \"any character\"") (url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls/41") (latest_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments/406442824") (type . "PullRequest")) (repository (id . 9118195) (node_id . "MDEwOlJlcG9zaXRvcnk5MTE4MTk1") (name . "keyboard") (full_name . "jasonrudolph/keyboard") (owner (login . "jasonrudolph") (id . 2988) (node_id . "MDQ6VXNlcjI5ODg=") (avatar_url . "https://avatars3.githubusercontent.com/u/2988?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jasonrudolph") (html_url . "https://github.com/jasonrudolph") (followers_url . "https://api.github.com/users/jasonrudolph/followers") (following_url . "https://api.github.com/users/jasonrudolph/following{/other_user}") (gists_url . "https://api.github.com/users/jasonrudolph/gists{/gist_id}") (starred_url . "https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jasonrudolph/subscriptions") (organizations_url . "https://api.github.com/users/jasonrudolph/orgs") (repos_url . "https://api.github.com/users/jasonrudolph/repos") (events_url . "https://api.github.com/users/jasonrudolph/events{/privacy}") (received_events_url . "https://api.github.com/users/jasonrudolph/received_events") (type . "User") (site_admin . t)) (private) (html_url . "https://github.com/jasonrudolph/keyboard") (description . "⌨ Toward a more useful keyboard") (fork) (url . "https://api.github.com/repos/jasonrudolph/keyboard") (forks_url . "https://api.github.com/repos/jasonrudolph/keyboard/forks") (keys_url . "https://api.github.com/repos/jasonrudolph/keyboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jasonrudolph/keyboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jasonrudolph/keyboard/teams") (hooks_url . "https://api.github.com/repos/jasonrudolph/keyboard/hooks") (issue_events_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/events{/number}") (events_url . "https://api.github.com/repos/jasonrudolph/keyboard/events") (assignees_url . "https://api.github.com/repos/jasonrudolph/keyboard/assignees{/user}") (branches_url . "https://api.github.com/repos/jasonrudolph/keyboard/branches{/branch}") (tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/tags") (blobs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jasonrudolph/keyboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/jasonrudolph/keyboard/languages") (stargazers_url . "https://api.github.com/repos/jasonrudolph/keyboard/stargazers") (contributors_url . "https://api.github.com/repos/jasonrudolph/keyboard/contributors") (subscribers_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscribers") (subscription_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscription") (commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jasonrudolph/keyboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jasonrudolph/keyboard/contents/{+path}") (compare_url . "https://api.github.com/repos/jasonrudolph/keyboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jasonrudolph/keyboard/merges") (archive_url . "https://api.github.com/repos/jasonrudolph/keyboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jasonrudolph/keyboard/downloads") (issues_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues{/number}") (pulls_url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/jasonrudolph/keyboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/jasonrudolph/keyboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jasonrudolph/keyboard/labels{/name}") (releases_url . "https://api.github.com/repos/jasonrudolph/keyboard/releases{/id}") (deployments_url . "https://api.github.com/repos/jasonrudolph/keyboard/deployments")) (url . "https://api.github.com/notifications/threads/344623688") (subscription_url . "https://api.github.com/notifications/threads/344623688/subscription")) ((id . "358269260") (unread . t) (reason . "subscribed") (updated_at . "2018-07-19T20:55:18Z") (last_read_at) (subject (title . "\"@ref-id\" form (as opposed to [@ref-id] form) isn't shedding parentheses as expected.") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/343") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/406411391") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/358269260") (subscription_url . "https://api.github.com/notifications/threads/358269260/subscription")) ((id . "355302582") (unread . t) (reason . "subscribed") (updated_at . "2018-07-19T07:14:09Z") (last_read_at) (subject (title . "Not able to change the command tabs ") (url . "https://api.github.com/repos/blahsd/snwe/issues/40") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/40") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/355302582") (subscription_url . "https://api.github.com/notifications/threads/355302582/subscription")) ((id . "356074078") (unread . t) (reason . "subscribed") (updated_at . "2018-07-18T21:52:03Z") (last_read_at) (subject (title . "Cannot do shift+escape") (url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/42") (latest_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments/406085789") (type . "Issue")) (repository (id . 9118195) (node_id . "MDEwOlJlcG9zaXRvcnk5MTE4MTk1") (name . "keyboard") (full_name . "jasonrudolph/keyboard") (owner (login . "jasonrudolph") (id . 2988) (node_id . "MDQ6VXNlcjI5ODg=") (avatar_url . "https://avatars3.githubusercontent.com/u/2988?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jasonrudolph") (html_url . "https://github.com/jasonrudolph") (followers_url . "https://api.github.com/users/jasonrudolph/followers") (following_url . "https://api.github.com/users/jasonrudolph/following{/other_user}") (gists_url . "https://api.github.com/users/jasonrudolph/gists{/gist_id}") (starred_url . "https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jasonrudolph/subscriptions") (organizations_url . "https://api.github.com/users/jasonrudolph/orgs") (repos_url . "https://api.github.com/users/jasonrudolph/repos") (events_url . "https://api.github.com/users/jasonrudolph/events{/privacy}") (received_events_url . "https://api.github.com/users/jasonrudolph/received_events") (type . "User") (site_admin . t)) (private) (html_url . "https://github.com/jasonrudolph/keyboard") (description . "⌨ Toward a more useful keyboard") (fork) (url . "https://api.github.com/repos/jasonrudolph/keyboard") (forks_url . "https://api.github.com/repos/jasonrudolph/keyboard/forks") (keys_url . "https://api.github.com/repos/jasonrudolph/keyboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jasonrudolph/keyboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jasonrudolph/keyboard/teams") (hooks_url . "https://api.github.com/repos/jasonrudolph/keyboard/hooks") (issue_events_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/events{/number}") (events_url . "https://api.github.com/repos/jasonrudolph/keyboard/events") (assignees_url . "https://api.github.com/repos/jasonrudolph/keyboard/assignees{/user}") (branches_url . "https://api.github.com/repos/jasonrudolph/keyboard/branches{/branch}") (tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/tags") (blobs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jasonrudolph/keyboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/jasonrudolph/keyboard/languages") (stargazers_url . "https://api.github.com/repos/jasonrudolph/keyboard/stargazers") (contributors_url . "https://api.github.com/repos/jasonrudolph/keyboard/contributors") (subscribers_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscribers") (subscription_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscription") (commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jasonrudolph/keyboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jasonrudolph/keyboard/contents/{+path}") (compare_url . "https://api.github.com/repos/jasonrudolph/keyboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jasonrudolph/keyboard/merges") (archive_url . "https://api.github.com/repos/jasonrudolph/keyboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jasonrudolph/keyboard/downloads") (issues_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues{/number}") (pulls_url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/jasonrudolph/keyboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/jasonrudolph/keyboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jasonrudolph/keyboard/labels{/name}") (releases_url . "https://api.github.com/repos/jasonrudolph/keyboard/releases{/id}") (deployments_url . "https://api.github.com/repos/jasonrudolph/keyboard/deployments")) (url . "https://api.github.com/notifications/threads/356074078") (subscription_url . "https://api.github.com/notifications/threads/356074078/subscription")) ((id . "281806004") (unread . t) (reason . "subscribed") (updated_at . "2018-07-16T03:48:52Z") (last_read_at . "2017-12-10T13:11:56Z") (subject (title . "Theme not fully loaded on switch") (url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/9") (latest_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments/405143646") (type . "Issue")) (repository (id . 102570101) (node_id . "MDEwOlJlcG9zaXRvcnkxMDI1NzAxMDE=") (name . "circadian.el") (full_name . "guidoschmidt/circadian.el") (owner (login . "guidoschmidt") (id . 463136) (node_id . "MDQ6VXNlcjQ2MzEzNg==") (avatar_url . "https://avatars2.githubusercontent.com/u/463136?v=4") (gravatar_id . "") (url . "https://api.github.com/users/guidoschmidt") (html_url . "https://github.com/guidoschmidt") (followers_url . "https://api.github.com/users/guidoschmidt/followers") (following_url . "https://api.github.com/users/guidoschmidt/following{/other_user}") (gists_url . "https://api.github.com/users/guidoschmidt/gists{/gist_id}") (starred_url . "https://api.github.com/users/guidoschmidt/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/guidoschmidt/subscriptions") (organizations_url . "https://api.github.com/users/guidoschmidt/orgs") (repos_url . "https://api.github.com/users/guidoschmidt/repos") (events_url . "https://api.github.com/users/guidoschmidt/events{/privacy}") (received_events_url . "https://api.github.com/users/guidoschmidt/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/guidoschmidt/circadian.el") (description . "Theme-switching for Emacs based on daytime") (fork) (url . "https://api.github.com/repos/guidoschmidt/circadian.el") (forks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/forks") (keys_url . "https://api.github.com/repos/guidoschmidt/circadian.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/guidoschmidt/circadian.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/guidoschmidt/circadian.el/teams") (hooks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/hooks") (issue_events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/events{/number}") (events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/events") (assignees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/assignees{/user}") (branches_url . "https://api.github.com/repos/guidoschmidt/circadian.el/branches{/branch}") (tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/tags") (blobs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/guidoschmidt/circadian.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/guidoschmidt/circadian.el/languages") (stargazers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/stargazers") (contributors_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contributors") (subscribers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscribers") (subscription_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscription") (commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contents/{+path}") (compare_url . "https://api.github.com/repos/guidoschmidt/circadian.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/guidoschmidt/circadian.el/merges") (archive_url . "https://api.github.com/repos/guidoschmidt/circadian.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/guidoschmidt/circadian.el/downloads") (issues_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues{/number}") (pulls_url . "https://api.github.com/repos/guidoschmidt/circadian.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/guidoschmidt/circadian.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/guidoschmidt/circadian.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/guidoschmidt/circadian.el/labels{/name}") (releases_url . "https://api.github.com/repos/guidoschmidt/circadian.el/releases{/id}") (deployments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/deployments")) (url . "https://api.github.com/notifications/threads/281806004") (subscription_url . "https://api.github.com/notifications/threads/281806004/subscription")) ((id . "356499621") (unread . t) (reason . "subscribed") (updated_at . "2018-07-15T22:07:59Z") (last_read_at) (subject (title . "Update README to include `:ensure` keyword in `use-package` instructions") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls/75") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls/75") (type . "PullRequest")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/356499621") (subscription_url . "https://api.github.com/notifications/threads/356499621/subscription")) ((id . "312628320") (unread . t) (reason . "subscribed") (updated_at . "2018-07-14T19:48:48Z") (last_read_at) (subject (title . "Does we have a way to put GIF image on logo?") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/62") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/62") (type . "Issue")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/312628320") (subscription_url . "https://api.github.com/notifications/threads/312628320/subscription")) ((id . "355978037") (unread . t) (reason . "subscribed") (updated_at . "2018-07-12T22:38:42Z") (last_read_at) (subject (title . "Multi monitor support") (url . "https://api.github.com/repos/blahsd/snwe/issues/41") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/41") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/355978037") (subscription_url . "https://api.github.com/notifications/threads/355978037/subscription")) ((id . "354127564") (unread . t) (reason . "subscribed") (updated_at . "2018-07-11T22:34:10Z") (last_read_at . "2018-07-11T15:24:47Z") (subject (title . "Activating 'taskbar' module crashes the app on launch") (url . "https://api.github.com/repos/blahsd/snwe/issues/39") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/39") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/354127564") (subscription_url . "https://api.github.com/notifications/threads/354127564/subscription")) ((id . "354732178") (unread . t) (reason . "subscribed") (updated_at . "2018-07-10T11:00:49Z") (last_read_at) (subject (title . "yaml 0.8.32 broke tests") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/342") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/342") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/354732178") (subscription_url . "https://api.github.com/notifications/threads/354732178/subscription")) ((id . "325804790") (unread . t) (reason . "subscribed") (updated_at . "2018-07-09T11:04:50Z") (last_read_at) (subject (title . "sunrise-sunset returns string not parseble by Circadian in Germany") (url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/13") (latest_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments/403442196") (type . "Issue")) (repository (id . 102570101) (node_id . "MDEwOlJlcG9zaXRvcnkxMDI1NzAxMDE=") (name . "circadian.el") (full_name . "guidoschmidt/circadian.el") (owner (login . "guidoschmidt") (id . 463136) (node_id . "MDQ6VXNlcjQ2MzEzNg==") (avatar_url . "https://avatars2.githubusercontent.com/u/463136?v=4") (gravatar_id . "") (url . "https://api.github.com/users/guidoschmidt") (html_url . "https://github.com/guidoschmidt") (followers_url . "https://api.github.com/users/guidoschmidt/followers") (following_url . "https://api.github.com/users/guidoschmidt/following{/other_user}") (gists_url . "https://api.github.com/users/guidoschmidt/gists{/gist_id}") (starred_url . "https://api.github.com/users/guidoschmidt/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/guidoschmidt/subscriptions") (organizations_url . "https://api.github.com/users/guidoschmidt/orgs") (repos_url . "https://api.github.com/users/guidoschmidt/repos") (events_url . "https://api.github.com/users/guidoschmidt/events{/privacy}") (received_events_url . "https://api.github.com/users/guidoschmidt/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/guidoschmidt/circadian.el") (description . "Theme-switching for Emacs based on daytime") (fork) (url . "https://api.github.com/repos/guidoschmidt/circadian.el") (forks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/forks") (keys_url . "https://api.github.com/repos/guidoschmidt/circadian.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/guidoschmidt/circadian.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/guidoschmidt/circadian.el/teams") (hooks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/hooks") (issue_events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/events{/number}") (events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/events") (assignees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/assignees{/user}") (branches_url . "https://api.github.com/repos/guidoschmidt/circadian.el/branches{/branch}") (tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/tags") (blobs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/guidoschmidt/circadian.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/guidoschmidt/circadian.el/languages") (stargazers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/stargazers") (contributors_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contributors") (subscribers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscribers") (subscription_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscription") (commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contents/{+path}") (compare_url . "https://api.github.com/repos/guidoschmidt/circadian.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/guidoschmidt/circadian.el/merges") (archive_url . "https://api.github.com/repos/guidoschmidt/circadian.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/guidoschmidt/circadian.el/downloads") (issues_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues{/number}") (pulls_url . "https://api.github.com/repos/guidoschmidt/circadian.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/guidoschmidt/circadian.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/guidoschmidt/circadian.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/guidoschmidt/circadian.el/labels{/name}") (releases_url . "https://api.github.com/repos/guidoschmidt/circadian.el/releases{/id}") (deployments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/deployments")) (url . "https://api.github.com/notifications/threads/325804790") (subscription_url . "https://api.github.com/notifications/threads/325804790/subscription")) ((id . "354070509") (unread . t) (reason . "subscribed") (updated_at . "2018-07-08T16:22:17Z") (last_read_at) (subject (title . "Use `solar-sunrise-sunset` to avoid dealing with strings.") (url . "https://api.github.com/repos/guidoschmidt/circadian.el/pulls/17") (latest_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments/403298927") (type . "PullRequest")) (repository (id . 102570101) (node_id . "MDEwOlJlcG9zaXRvcnkxMDI1NzAxMDE=") (name . "circadian.el") (full_name . "guidoschmidt/circadian.el") (owner (login . "guidoschmidt") (id . 463136) (node_id . "MDQ6VXNlcjQ2MzEzNg==") (avatar_url . "https://avatars2.githubusercontent.com/u/463136?v=4") (gravatar_id . "") (url . "https://api.github.com/users/guidoschmidt") (html_url . "https://github.com/guidoschmidt") (followers_url . "https://api.github.com/users/guidoschmidt/followers") (following_url . "https://api.github.com/users/guidoschmidt/following{/other_user}") (gists_url . "https://api.github.com/users/guidoschmidt/gists{/gist_id}") (starred_url . "https://api.github.com/users/guidoschmidt/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/guidoschmidt/subscriptions") (organizations_url . "https://api.github.com/users/guidoschmidt/orgs") (repos_url . "https://api.github.com/users/guidoschmidt/repos") (events_url . "https://api.github.com/users/guidoschmidt/events{/privacy}") (received_events_url . "https://api.github.com/users/guidoschmidt/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/guidoschmidt/circadian.el") (description . "Theme-switching for Emacs based on daytime") (fork) (url . "https://api.github.com/repos/guidoschmidt/circadian.el") (forks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/forks") (keys_url . "https://api.github.com/repos/guidoschmidt/circadian.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/guidoschmidt/circadian.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/guidoschmidt/circadian.el/teams") (hooks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/hooks") (issue_events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/events{/number}") (events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/events") (assignees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/assignees{/user}") (branches_url . "https://api.github.com/repos/guidoschmidt/circadian.el/branches{/branch}") (tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/tags") (blobs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/guidoschmidt/circadian.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/guidoschmidt/circadian.el/languages") (stargazers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/stargazers") (contributors_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contributors") (subscribers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscribers") (subscription_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscription") (commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contents/{+path}") (compare_url . "https://api.github.com/repos/guidoschmidt/circadian.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/guidoschmidt/circadian.el/merges") (archive_url . "https://api.github.com/repos/guidoschmidt/circadian.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/guidoschmidt/circadian.el/downloads") (issues_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues{/number}") (pulls_url . "https://api.github.com/repos/guidoschmidt/circadian.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/guidoschmidt/circadian.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/guidoschmidt/circadian.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/guidoschmidt/circadian.el/labels{/name}") (releases_url . "https://api.github.com/repos/guidoschmidt/circadian.el/releases{/id}") (deployments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/deployments")) (url . "https://api.github.com/notifications/threads/354070509") (subscription_url . "https://api.github.com/notifications/threads/354070509/subscription")) ((id . "354086232") (unread . t) (reason . "subscribed") (updated_at . "2018-07-08T13:47:21Z") (last_read_at) (subject (title . "0.3.2") (url . "https://api.github.com/repos/guidoschmidt/circadian.el/releases/11827235") (latest_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/releases/11827235") (type . "Release")) (repository (id . 102570101) (node_id . "MDEwOlJlcG9zaXRvcnkxMDI1NzAxMDE=") (name . "circadian.el") (full_name . "guidoschmidt/circadian.el") (owner (login . "guidoschmidt") (id . 463136) (node_id . "MDQ6VXNlcjQ2MzEzNg==") (avatar_url . "https://avatars2.githubusercontent.com/u/463136?v=4") (gravatar_id . "") (url . "https://api.github.com/users/guidoschmidt") (html_url . "https://github.com/guidoschmidt") (followers_url . "https://api.github.com/users/guidoschmidt/followers") (following_url . "https://api.github.com/users/guidoschmidt/following{/other_user}") (gists_url . "https://api.github.com/users/guidoschmidt/gists{/gist_id}") (starred_url . "https://api.github.com/users/guidoschmidt/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/guidoschmidt/subscriptions") (organizations_url . "https://api.github.com/users/guidoschmidt/orgs") (repos_url . "https://api.github.com/users/guidoschmidt/repos") (events_url . "https://api.github.com/users/guidoschmidt/events{/privacy}") (received_events_url . "https://api.github.com/users/guidoschmidt/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/guidoschmidt/circadian.el") (description . "Theme-switching for Emacs based on daytime") (fork) (url . "https://api.github.com/repos/guidoschmidt/circadian.el") (forks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/forks") (keys_url . "https://api.github.com/repos/guidoschmidt/circadian.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/guidoschmidt/circadian.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/guidoschmidt/circadian.el/teams") (hooks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/hooks") (issue_events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/events{/number}") (events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/events") (assignees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/assignees{/user}") (branches_url . "https://api.github.com/repos/guidoschmidt/circadian.el/branches{/branch}") (tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/tags") (blobs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/guidoschmidt/circadian.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/guidoschmidt/circadian.el/languages") (stargazers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/stargazers") (contributors_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contributors") (subscribers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscribers") (subscription_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscription") (commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contents/{+path}") (compare_url . "https://api.github.com/repos/guidoschmidt/circadian.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/guidoschmidt/circadian.el/merges") (archive_url . "https://api.github.com/repos/guidoschmidt/circadian.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/guidoschmidt/circadian.el/downloads") (issues_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues{/number}") (pulls_url . "https://api.github.com/repos/guidoschmidt/circadian.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/guidoschmidt/circadian.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/guidoschmidt/circadian.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/guidoschmidt/circadian.el/labels{/name}") (releases_url . "https://api.github.com/repos/guidoschmidt/circadian.el/releases{/id}") (deployments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/deployments")) (url . "https://api.github.com/notifications/threads/354086232") (subscription_url . "https://api.github.com/notifications/threads/354086232/subscription")) ((id . "284351738") (unread . t) (reason . "subscribed") (updated_at . "2018-07-08T09:14:18Z") (last_read_at) (subject (title . "capture into sub heading") (url . "https://api.github.com/repos/IvanMalison/org-projectile/issues/36") (latest_comment_url . "https://api.github.com/repos/IvanMalison/org-projectile/issues/comments/403274116") (type . "Issue")) (repository (id . 27714173) (node_id . "MDEwOlJlcG9zaXRvcnkyNzcxNDE3Mw==") (name . "org-projectile") (full_name . "IvanMalison/org-projectile") (owner (login . "IvanMalison") (id . 1246619) (node_id . "MDQ6VXNlcjEyNDY2MTk=") (avatar_url . "https://avatars3.githubusercontent.com/u/1246619?v=4") (gravatar_id . "") (url . "https://api.github.com/users/IvanMalison") (html_url . "https://github.com/IvanMalison") (followers_url . "https://api.github.com/users/IvanMalison/followers") (following_url . "https://api.github.com/users/IvanMalison/following{/other_user}") (gists_url . "https://api.github.com/users/IvanMalison/gists{/gist_id}") (starred_url . "https://api.github.com/users/IvanMalison/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/IvanMalison/subscriptions") (organizations_url . "https://api.github.com/users/IvanMalison/orgs") (repos_url . "https://api.github.com/users/IvanMalison/repos") (events_url . "https://api.github.com/users/IvanMalison/events{/privacy}") (received_events_url . "https://api.github.com/users/IvanMalison/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/IvanMalison/org-projectile") (description . "Manage org-mode TODOs for your projectile projects") (fork) (url . "https://api.github.com/repos/IvanMalison/org-projectile") (forks_url . "https://api.github.com/repos/IvanMalison/org-projectile/forks") (keys_url . "https://api.github.com/repos/IvanMalison/org-projectile/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/IvanMalison/org-projectile/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/IvanMalison/org-projectile/teams") (hooks_url . "https://api.github.com/repos/IvanMalison/org-projectile/hooks") (issue_events_url . "https://api.github.com/repos/IvanMalison/org-projectile/issues/events{/number}") (events_url . "https://api.github.com/repos/IvanMalison/org-projectile/events") (assignees_url . "https://api.github.com/repos/IvanMalison/org-projectile/assignees{/user}") (branches_url . "https://api.github.com/repos/IvanMalison/org-projectile/branches{/branch}") (tags_url . "https://api.github.com/repos/IvanMalison/org-projectile/tags") (blobs_url . "https://api.github.com/repos/IvanMalison/org-projectile/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/IvanMalison/org-projectile/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/IvanMalison/org-projectile/git/refs{/sha}") (trees_url . "https://api.github.com/repos/IvanMalison/org-projectile/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/IvanMalison/org-projectile/statuses/{sha}") (languages_url . "https://api.github.com/repos/IvanMalison/org-projectile/languages") (stargazers_url . "https://api.github.com/repos/IvanMalison/org-projectile/stargazers") (contributors_url . "https://api.github.com/repos/IvanMalison/org-projectile/contributors") (subscribers_url . "https://api.github.com/repos/IvanMalison/org-projectile/subscribers") (subscription_url . "https://api.github.com/repos/IvanMalison/org-projectile/subscription") (commits_url . "https://api.github.com/repos/IvanMalison/org-projectile/commits{/sha}") (git_commits_url . "https://api.github.com/repos/IvanMalison/org-projectile/git/commits{/sha}") (comments_url . "https://api.github.com/repos/IvanMalison/org-projectile/comments{/number}") (issue_comment_url . "https://api.github.com/repos/IvanMalison/org-projectile/issues/comments{/number}") (contents_url . "https://api.github.com/repos/IvanMalison/org-projectile/contents/{+path}") (compare_url . "https://api.github.com/repos/IvanMalison/org-projectile/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/IvanMalison/org-projectile/merges") (archive_url . "https://api.github.com/repos/IvanMalison/org-projectile/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/IvanMalison/org-projectile/downloads") (issues_url . "https://api.github.com/repos/IvanMalison/org-projectile/issues{/number}") (pulls_url . "https://api.github.com/repos/IvanMalison/org-projectile/pulls{/number}") (milestones_url . "https://api.github.com/repos/IvanMalison/org-projectile/milestones{/number}") (notifications_url . "https://api.github.com/repos/IvanMalison/org-projectile/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/IvanMalison/org-projectile/labels{/name}") (releases_url . "https://api.github.com/repos/IvanMalison/org-projectile/releases{/id}") (deployments_url . "https://api.github.com/repos/IvanMalison/org-projectile/deployments")) (url . "https://api.github.com/notifications/threads/284351738") (subscription_url . "https://api.github.com/notifications/threads/284351738/subscription")) ((id . "351945610") (unread . t) (reason . "subscribed") (updated_at . "2018-07-06T20:02:01Z") (last_read_at) (subject (title . "Really stupid question but how do you start it") (url . "https://api.github.com/repos/blahsd/snwe/issues/37") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments/403132699") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/351945610") (subscription_url . "https://api.github.com/notifications/threads/351945610/subscription")) ((id . "353883670") (unread . t) (reason . "subscribed") (updated_at . "2018-07-06T20:01:14Z") (last_read_at) (subject (title . "0.1.0") (url . "https://api.github.com/repos/blahsd/snwe/releases/11817496") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/releases/11817496") (type . "Release")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/353883670") (subscription_url . "https://api.github.com/notifications/threads/353883670/subscription")) ((id . "353879374") (unread . t) (reason . "subscribed") (updated_at . "2018-07-06T19:44:05Z") (last_read_at) (subject (title . "Scan for custom themes") (url . "https://api.github.com/repos/blahsd/snwe/issues/38") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/38") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/353879374") (subscription_url . "https://api.github.com/notifications/threads/353879374/subscription")) ((id . "237830633") (unread . t) (reason . "manual") (updated_at . "2018-07-05T20:04:57Z") (last_read_at) (subject (title . "doom-modeline on its own package") (url . "https://api.github.com/repos/hlissner/doom-emacs/issues/136") (latest_comment_url . "https://api.github.com/repos/hlissner/doom-emacs/issues/comments/402837261") (type . "Issue")) (repository (id . 21763822) (node_id . "MDEwOlJlcG9zaXRvcnkyMTc2MzgyMg==") (name . "doom-emacs") (full_name . "hlissner/doom-emacs") (owner (login . "hlissner") (id . 510883) (node_id . "MDQ6VXNlcjUxMDg4Mw==") (avatar_url . "https://avatars2.githubusercontent.com/u/510883?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hlissner") (html_url . "https://github.com/hlissner") (followers_url . "https://api.github.com/users/hlissner/followers") (following_url . "https://api.github.com/users/hlissner/following{/other_user}") (gists_url . "https://api.github.com/users/hlissner/gists{/gist_id}") (starred_url . "https://api.github.com/users/hlissner/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hlissner/subscriptions") (organizations_url . "https://api.github.com/users/hlissner/orgs") (repos_url . "https://api.github.com/users/hlissner/repos") (events_url . "https://api.github.com/users/hlissner/events{/privacy}") (received_events_url . "https://api.github.com/users/hlissner/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/hlissner/doom-emacs") (description . "An Emacs configuration for the stubborn martian vimmer") (fork) (url . "https://api.github.com/repos/hlissner/doom-emacs") (forks_url . "https://api.github.com/repos/hlissner/doom-emacs/forks") (keys_url . "https://api.github.com/repos/hlissner/doom-emacs/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/hlissner/doom-emacs/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/hlissner/doom-emacs/teams") (hooks_url . "https://api.github.com/repos/hlissner/doom-emacs/hooks") (issue_events_url . "https://api.github.com/repos/hlissner/doom-emacs/issues/events{/number}") (events_url . "https://api.github.com/repos/hlissner/doom-emacs/events") (assignees_url . "https://api.github.com/repos/hlissner/doom-emacs/assignees{/user}") (branches_url . "https://api.github.com/repos/hlissner/doom-emacs/branches{/branch}") (tags_url . "https://api.github.com/repos/hlissner/doom-emacs/tags") (blobs_url . "https://api.github.com/repos/hlissner/doom-emacs/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/hlissner/doom-emacs/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/hlissner/doom-emacs/git/refs{/sha}") (trees_url . "https://api.github.com/repos/hlissner/doom-emacs/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/hlissner/doom-emacs/statuses/{sha}") (languages_url . "https://api.github.com/repos/hlissner/doom-emacs/languages") (stargazers_url . "https://api.github.com/repos/hlissner/doom-emacs/stargazers") (contributors_url . "https://api.github.com/repos/hlissner/doom-emacs/contributors") (subscribers_url . "https://api.github.com/repos/hlissner/doom-emacs/subscribers") (subscription_url . "https://api.github.com/repos/hlissner/doom-emacs/subscription") (commits_url . "https://api.github.com/repos/hlissner/doom-emacs/commits{/sha}") (git_commits_url . "https://api.github.com/repos/hlissner/doom-emacs/git/commits{/sha}") (comments_url . "https://api.github.com/repos/hlissner/doom-emacs/comments{/number}") (issue_comment_url . "https://api.github.com/repos/hlissner/doom-emacs/issues/comments{/number}") (contents_url . "https://api.github.com/repos/hlissner/doom-emacs/contents/{+path}") (compare_url . "https://api.github.com/repos/hlissner/doom-emacs/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/hlissner/doom-emacs/merges") (archive_url . "https://api.github.com/repos/hlissner/doom-emacs/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/hlissner/doom-emacs/downloads") (issues_url . "https://api.github.com/repos/hlissner/doom-emacs/issues{/number}") (pulls_url . "https://api.github.com/repos/hlissner/doom-emacs/pulls{/number}") (milestones_url . "https://api.github.com/repos/hlissner/doom-emacs/milestones{/number}") (notifications_url . "https://api.github.com/repos/hlissner/doom-emacs/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/hlissner/doom-emacs/labels{/name}") (releases_url . "https://api.github.com/repos/hlissner/doom-emacs/releases{/id}") (deployments_url . "https://api.github.com/repos/hlissner/doom-emacs/deployments")) (url . "https://api.github.com/notifications/threads/237830633") (subscription_url . "https://api.github.com/notifications/threads/237830633/subscription")) ((id . "341077016") (unread . t) (reason . "subscribed") (updated_at . "2018-07-05T06:27:21Z") (last_read_at) (subject (title . "window-configuration-change-hook is deprecated") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/71") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/71") (type . "Issue")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/341077016") (subscription_url . "https://api.github.com/notifications/threads/341077016/subscription")) ((id . "340650582") (unread . t) (reason . "subscribed") (updated_at . "2018-06-01T20:07:07Z") (last_read_at . "2018-05-30T15:13:52Z") (subject (title . "Created an option to show a weekly org-agenda") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls/70") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments/393995098") (type . "PullRequest")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/340650582") (subscription_url . "https://api.github.com/notifications/threads/340650582/subscription")) ((id . "341101971") (unread . t) (reason . "subscribed") (updated_at . "2018-06-04T08:49:04Z") (last_read_at) (subject (title . "Fix deprecated window-configuraton-change-hook") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls/72") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments/394280857") (type . "PullRequest")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/341101971") (subscription_url . "https://api.github.com/notifications/threads/341101971/subscription")) ((id . "353023774") (unread . t) (reason . "subscribed") (updated_at . "2018-07-04T14:29:27Z") (last_read_at) (subject (title . "Separate suffix with colon in inline citation") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/341") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/341") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/353023774") (subscription_url . "https://api.github.com/notifications/threads/353023774/subscription")) ((id . "352073404") (unread . t) (reason . "subscribed") (updated_at . "2018-07-02T21:56:44Z") (last_read_at) (subject (title . "bibtex with relative path in YAML block not found. Only absolute paths work...") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/340") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/401950194") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/352073404") (subscription_url . "https://api.github.com/notifications/threads/352073404/subscription")) ((id . "180572266") (unread . t) (reason . "subscribed") (updated_at . "2018-07-02T16:51:45Z") (last_read_at) (subject (title . "Adding option to color the entire citation, not only the year?") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/268") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/401866968") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/180572266") (subscription_url . "https://api.github.com/notifications/threads/180572266/subscription")) ((id . "351561060") (unread . t) (reason . "subscribed") (updated_at . "2018-07-02T14:02:32Z") (last_read_at) (subject (title . "Requiring \":\" in magit-todos-search-regexp should be optional") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/21") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments/401815215") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/351561060") (subscription_url . "https://api.github.com/notifications/threads/351561060/subscription")) ((id . "351297516") (unread . t) (reason . "subscribed") (updated_at . "2018-07-02T10:24:59Z") (last_read_at) (subject (title . "Set mode / Disable bindings possible ?") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/74") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments/401754320") (type . "Issue")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/351297516") (subscription_url . "https://api.github.com/notifications/threads/351297516/subscription")) ((id . "351938865") (unread . t) (reason . "subscribed") (updated_at . "2018-07-17T05:51:52Z") (last_read_at) (subject (title . "magit-todo-keywords incompatible with use-package :custom") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/24") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments/405467462") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/351938865") (subscription_url . "https://api.github.com/notifications/threads/351938865/subscription")) ((id . "351806768") (unread . t) (reason . "subscribed") (updated_at . "2018-07-02T04:52:27Z") (last_read_at) (subject (title . "Lints for MELPA") (url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/22") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/22") (type . "PullRequest")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/351806768") (subscription_url . "https://api.github.com/notifications/threads/351806768/subscription")) ((id . "349499418") (unread . t) (reason . "subscribed") (updated_at . "2018-07-02T04:31:53Z") (last_read_at) (subject (title . "Feature request: avoid rescans in certain magit workflows?") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/11") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments/401669756") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/349499418") (subscription_url . "https://api.github.com/notifications/threads/349499418/subscription")) ((id . "351936470") (unread . t) (reason . "subscribed") (updated_at . "2018-07-02T04:23:43Z") (last_read_at) (subject (title . "RET and SPC not working on TODO items") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/23") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/23") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/351936470") (subscription_url . "https://api.github.com/notifications/threads/351936470/subscription")) ((id . "336117017") (unread . t) (reason . "subscribed") (updated_at . "2018-07-01T14:49:50Z") (last_read_at) (subject (title . "Run on startup") (url . "https://api.github.com/repos/blahsd/snwe/issues/11") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments/401611618") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/336117017") (subscription_url . "https://api.github.com/notifications/threads/336117017/subscription")) ((id . "349502577") (unread . t) (reason . "subscribed") (updated_at . "2018-07-01T06:12:07Z") (last_read_at) (subject (title . "Feature request: visit the containing file in another window") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/13") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/13") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/349502577") (subscription_url . "https://api.github.com/notifications/threads/349502577/subscription")) ((id . "350962074") (unread . t) (reason . "subscribed") (updated_at . "2018-06-30T04:37:27Z") (last_read_at) (subject (title . "package-lint") (url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/19") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/19") (type . "PullRequest")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/350962074") (subscription_url . "https://api.github.com/notifications/threads/350962074/subscription")) ((id . "350261914") (unread . t) (reason . "subscribed") (updated_at . "2018-06-30T03:10:49Z") (last_read_at) (subject (title . "Add an option to allow configuring the target window of goto-item") (url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/15") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/15") (type . "PullRequest")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/350261914") (subscription_url . "https://api.github.com/notifications/threads/350261914/subscription")) ((id . "350297146") (unread . t) (reason . "subscribed") (updated_at . "2018-06-28T15:58:41Z") (last_read_at) (subject (title . "Add: magit-todos--git-grep-scan-async") (url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/16") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments/401085010") (type . "PullRequest")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/350297146") (subscription_url . "https://api.github.com/notifications/threads/350297146/subscription")) ((id . "350970035") (unread . t) (reason . "subscribed") (updated_at . "2018-06-28T09:18:33Z") (last_read_at) (subject (title . "error at startup: some issue with magit-todos-keywords") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/20") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/20") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/350970035") (subscription_url . "https://api.github.com/notifications/threads/350970035/subscription")) ((id . "350581516") (unread . t) (reason . "subscribed") (updated_at . "2018-06-28T00:46:34Z") (last_read_at) (subject (title . "Add: Call org-show-entry when displaying an Org todo") (url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/18") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/comments/198719370") (type . "PullRequest")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/350581516") (subscription_url . "https://api.github.com/notifications/threads/350581516/subscription")) ((id . "350577906") (unread . t) (reason . "subscribed") (updated_at . "2018-06-28T00:39:36Z") (last_read_at) (subject (title . "Fix: Function name") (url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/17") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments/400874127") (type . "PullRequest")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/350577906") (subscription_url . "https://api.github.com/notifications/threads/350577906/subscription")) ((id . "349469604") (unread . t) (reason . "subscribed") (updated_at . "2018-06-27T20:38:35Z") (last_read_at) (subject (title . "How can I apply that theme?") (url . "https://api.github.com/repos/blahsd/snwe/issues/36") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments/400821177") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/349469604") (subscription_url . "https://api.github.com/notifications/threads/349469604/subscription")) ((id . "349144953") (unread . t) (reason . "subscribed") (updated_at . "2018-06-27T20:30:11Z") (last_read_at . "2018-06-22T14:28:52Z") (subject (title . "npm install fails on master build on linux") (url . "https://api.github.com/repos/blahsd/snwe/issues/34") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments/400818587") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/349144953") (subscription_url . "https://api.github.com/notifications/threads/349144953/subscription")) ((id . "350348868") (unread . t) (reason . "subscribed") (updated_at . "2018-06-27T09:02:55Z") (last_read_at) (subject (title . "Update no title bars flag") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/93") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments/400598672") (type . "PullRequest")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/350348868") (subscription_url . "https://api.github.com/notifications/threads/350348868/subscription")) ((id . "333912611") (unread . t) (reason . "subscribed") (updated_at . "2018-06-26T23:31:21Z") (last_read_at) (subject (title . "circadian-setup is very heavy") (url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/14") (latest_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments/400495101") (type . "Issue")) (repository (id . 102570101) (node_id . "MDEwOlJlcG9zaXRvcnkxMDI1NzAxMDE=") (name . "circadian.el") (full_name . "guidoschmidt/circadian.el") (owner (login . "guidoschmidt") (id . 463136) (node_id . "MDQ6VXNlcjQ2MzEzNg==") (avatar_url . "https://avatars2.githubusercontent.com/u/463136?v=4") (gravatar_id . "") (url . "https://api.github.com/users/guidoschmidt") (html_url . "https://github.com/guidoschmidt") (followers_url . "https://api.github.com/users/guidoschmidt/followers") (following_url . "https://api.github.com/users/guidoschmidt/following{/other_user}") (gists_url . "https://api.github.com/users/guidoschmidt/gists{/gist_id}") (starred_url . "https://api.github.com/users/guidoschmidt/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/guidoschmidt/subscriptions") (organizations_url . "https://api.github.com/users/guidoschmidt/orgs") (repos_url . "https://api.github.com/users/guidoschmidt/repos") (events_url . "https://api.github.com/users/guidoschmidt/events{/privacy}") (received_events_url . "https://api.github.com/users/guidoschmidt/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/guidoschmidt/circadian.el") (description . "Theme-switching for Emacs based on daytime") (fork) (url . "https://api.github.com/repos/guidoschmidt/circadian.el") (forks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/forks") (keys_url . "https://api.github.com/repos/guidoschmidt/circadian.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/guidoschmidt/circadian.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/guidoschmidt/circadian.el/teams") (hooks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/hooks") (issue_events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/events{/number}") (events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/events") (assignees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/assignees{/user}") (branches_url . "https://api.github.com/repos/guidoschmidt/circadian.el/branches{/branch}") (tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/tags") (blobs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/guidoschmidt/circadian.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/guidoschmidt/circadian.el/languages") (stargazers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/stargazers") (contributors_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contributors") (subscribers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscribers") (subscription_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscription") (commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contents/{+path}") (compare_url . "https://api.github.com/repos/guidoschmidt/circadian.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/guidoschmidt/circadian.el/merges") (archive_url . "https://api.github.com/repos/guidoschmidt/circadian.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/guidoschmidt/circadian.el/downloads") (issues_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues{/number}") (pulls_url . "https://api.github.com/repos/guidoschmidt/circadian.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/guidoschmidt/circadian.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/guidoschmidt/circadian.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/guidoschmidt/circadian.el/labels{/name}") (releases_url . "https://api.github.com/repos/guidoschmidt/circadian.el/releases{/id}") (deployments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/deployments")) (url . "https://api.github.com/notifications/threads/333912611") (subscription_url . "https://api.github.com/notifications/threads/333912611/subscription")) ((id . "349949140") (unread . t) (reason . "subscribed") (updated_at . "2018-06-26T18:49:28Z") (last_read_at) (subject (title . "Remove the `evil-org-set-key-theme` call on load") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/46") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments/400423092") (type . "Issue")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/349949140") (subscription_url . "https://api.github.com/notifications/threads/349949140/subscription")) ((id . "349546781") (unread . t) (reason . "subscribed") (updated_at . "2018-06-26T16:34:25Z") (last_read_at . "2018-06-25T12:45:31Z") (subject (title . "For #13: option to visit containing buffer in other window.") (url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/14") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/14") (type . "PullRequest")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/349546781") (subscription_url . "https://api.github.com/notifications/threads/349546781/subscription")) ((id . "311624243") (unread . t) (reason . "subscribed") (updated_at . "2018-06-26T08:54:42Z") (last_read_at) (subject (title . "Can't sensibly cite more than one unpublished manuscript by same author") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/325") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/400233189") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/311624243") (subscription_url . "https://api.github.com/notifications/threads/311624243/subscription")) ((id . "345573396") (unread . t) (reason . "subscribed") (updated_at . "2018-06-26T07:11:09Z") (last_read_at . "2018-06-24T04:00:24Z") (subject (title . "Search for recursive is too slow (unusable).  Look at helm-projectile-ag or ripgrep-regexp for fast search samples") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/2") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments/400203653") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/345573396") (subscription_url . "https://api.github.com/notifications/threads/345573396/subscription")) ((id . "45262150") (unread . t) (reason . "subscribed") (updated_at . "2018-06-25T16:40:38Z") (last_read_at) (subject (title . "Allow multiple/sectioned bibliographies") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/89") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/400017104") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/45262150") (subscription_url . "https://api.github.com/notifications/threads/45262150/subscription")) ((id . "349735449") (unread . t) (reason . "subscribed") (updated_at . "2018-06-25T13:18:33Z") (last_read_at) (subject (title . "Fix recenter error when displaying buffer from emacsclient") (url . "https://api.github.com/repos/zk-phi/sublimity/pulls/50") (latest_comment_url . "https://api.github.com/repos/zk-phi/sublimity/pulls/50") (type . "PullRequest")) (repository (id . 9364764) (node_id . "MDEwOlJlcG9zaXRvcnk5MzY0NzY0") (name . "sublimity") (full_name . "zk-phi/sublimity") (owner (login . "zk-phi") (id . 3530521) (node_id . "MDQ6VXNlcjM1MzA1MjE=") (avatar_url . "https://avatars3.githubusercontent.com/u/3530521?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zk-phi") (html_url . "https://github.com/zk-phi") (followers_url . "https://api.github.com/users/zk-phi/followers") (following_url . "https://api.github.com/users/zk-phi/following{/other_user}") (gists_url . "https://api.github.com/users/zk-phi/gists{/gist_id}") (starred_url . "https://api.github.com/users/zk-phi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zk-phi/subscriptions") (organizations_url . "https://api.github.com/users/zk-phi/orgs") (repos_url . "https://api.github.com/users/zk-phi/repos") (events_url . "https://api.github.com/users/zk-phi/events{/privacy}") (received_events_url . "https://api.github.com/users/zk-phi/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zk-phi/sublimity") (description . "[emacs] smooth-scrolling and minimap like sublime editor") (fork) (url . "https://api.github.com/repos/zk-phi/sublimity") (forks_url . "https://api.github.com/repos/zk-phi/sublimity/forks") (keys_url . "https://api.github.com/repos/zk-phi/sublimity/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zk-phi/sublimity/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zk-phi/sublimity/teams") (hooks_url . "https://api.github.com/repos/zk-phi/sublimity/hooks") (issue_events_url . "https://api.github.com/repos/zk-phi/sublimity/issues/events{/number}") (events_url . "https://api.github.com/repos/zk-phi/sublimity/events") (assignees_url . "https://api.github.com/repos/zk-phi/sublimity/assignees{/user}") (branches_url . "https://api.github.com/repos/zk-phi/sublimity/branches{/branch}") (tags_url . "https://api.github.com/repos/zk-phi/sublimity/tags") (blobs_url . "https://api.github.com/repos/zk-phi/sublimity/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zk-phi/sublimity/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zk-phi/sublimity/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zk-phi/sublimity/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zk-phi/sublimity/statuses/{sha}") (languages_url . "https://api.github.com/repos/zk-phi/sublimity/languages") (stargazers_url . "https://api.github.com/repos/zk-phi/sublimity/stargazers") (contributors_url . "https://api.github.com/repos/zk-phi/sublimity/contributors") (subscribers_url . "https://api.github.com/repos/zk-phi/sublimity/subscribers") (subscription_url . "https://api.github.com/repos/zk-phi/sublimity/subscription") (commits_url . "https://api.github.com/repos/zk-phi/sublimity/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zk-phi/sublimity/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zk-phi/sublimity/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zk-phi/sublimity/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zk-phi/sublimity/contents/{+path}") (compare_url . "https://api.github.com/repos/zk-phi/sublimity/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zk-phi/sublimity/merges") (archive_url . "https://api.github.com/repos/zk-phi/sublimity/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zk-phi/sublimity/downloads") (issues_url . "https://api.github.com/repos/zk-phi/sublimity/issues{/number}") (pulls_url . "https://api.github.com/repos/zk-phi/sublimity/pulls{/number}") (milestones_url . "https://api.github.com/repos/zk-phi/sublimity/milestones{/number}") (notifications_url . "https://api.github.com/repos/zk-phi/sublimity/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zk-phi/sublimity/labels{/name}") (releases_url . "https://api.github.com/repos/zk-phi/sublimity/releases{/id}") (deployments_url . "https://api.github.com/repos/zk-phi/sublimity/deployments")) (url . "https://api.github.com/notifications/threads/349735449") (subscription_url . "https://api.github.com/notifications/threads/349735449/subscription")) ((id . "349499555") (unread . t) (reason . "subscribed") (updated_at . "2018-06-25T00:28:41Z") (last_read_at) (subject (title . "Feature request: key to jump to the section?") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/12") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/12") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/349499555") (subscription_url . "https://api.github.com/notifications/threads/349499555/subscription")) ((id . "349422001") (unread . t) (reason . "subscribed") (updated_at . "2018-06-24T14:47:44Z") (last_read_at) (subject (title . "Problem with citing chapters of online documentation") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/339") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/339") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/349422001") (subscription_url . "https://api.github.com/notifications/threads/349422001/subscription")) ((id . "349275079") (unread . t) (reason . "subscribed") (updated_at . "2018-06-24T10:52:15Z") (last_read_at) (subject (title . "Error while npm install on osx") (url . "https://api.github.com/repos/blahsd/snwe/issues/35") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/35") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/349275079") (subscription_url . "https://api.github.com/notifications/threads/349275079/subscription")) ((id . "348550033") (unread . t) (reason . "subscribed") (updated_at . "2018-06-23T17:41:54Z") (last_read_at) (subject (title . "Incorrect handling of group with only empty variables") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/338") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/399696216") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/348550033") (subscription_url . "https://api.github.com/notifications/threads/348550033/subscription")) ((id . "349299049") (unread . t) (reason . "subscribed") (updated_at . "2018-06-22T21:50:25Z") (last_read_at) (subject (title . "v4.0.0 Hammerspoon Double Down 🔨🔨🥄🥄") (url . "https://api.github.com/repos/jasonrudolph/keyboard/releases/11614188") (latest_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/releases/11614188") (type . "Release")) (repository (id . 9118195) (node_id . "MDEwOlJlcG9zaXRvcnk5MTE4MTk1") (name . "keyboard") (full_name . "jasonrudolph/keyboard") (owner (login . "jasonrudolph") (id . 2988) (node_id . "MDQ6VXNlcjI5ODg=") (avatar_url . "https://avatars3.githubusercontent.com/u/2988?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jasonrudolph") (html_url . "https://github.com/jasonrudolph") (followers_url . "https://api.github.com/users/jasonrudolph/followers") (following_url . "https://api.github.com/users/jasonrudolph/following{/other_user}") (gists_url . "https://api.github.com/users/jasonrudolph/gists{/gist_id}") (starred_url . "https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jasonrudolph/subscriptions") (organizations_url . "https://api.github.com/users/jasonrudolph/orgs") (repos_url . "https://api.github.com/users/jasonrudolph/repos") (events_url . "https://api.github.com/users/jasonrudolph/events{/privacy}") (received_events_url . "https://api.github.com/users/jasonrudolph/received_events") (type . "User") (site_admin . t)) (private) (html_url . "https://github.com/jasonrudolph/keyboard") (description . "⌨ Toward a more useful keyboard") (fork) (url . "https://api.github.com/repos/jasonrudolph/keyboard") (forks_url . "https://api.github.com/repos/jasonrudolph/keyboard/forks") (keys_url . "https://api.github.com/repos/jasonrudolph/keyboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jasonrudolph/keyboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jasonrudolph/keyboard/teams") (hooks_url . "https://api.github.com/repos/jasonrudolph/keyboard/hooks") (issue_events_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/events{/number}") (events_url . "https://api.github.com/repos/jasonrudolph/keyboard/events") (assignees_url . "https://api.github.com/repos/jasonrudolph/keyboard/assignees{/user}") (branches_url . "https://api.github.com/repos/jasonrudolph/keyboard/branches{/branch}") (tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/tags") (blobs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jasonrudolph/keyboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/jasonrudolph/keyboard/languages") (stargazers_url . "https://api.github.com/repos/jasonrudolph/keyboard/stargazers") (contributors_url . "https://api.github.com/repos/jasonrudolph/keyboard/contributors") (subscribers_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscribers") (subscription_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscription") (commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jasonrudolph/keyboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jasonrudolph/keyboard/contents/{+path}") (compare_url . "https://api.github.com/repos/jasonrudolph/keyboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jasonrudolph/keyboard/merges") (archive_url . "https://api.github.com/repos/jasonrudolph/keyboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jasonrudolph/keyboard/downloads") (issues_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues{/number}") (pulls_url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/jasonrudolph/keyboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/jasonrudolph/keyboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jasonrudolph/keyboard/labels{/name}") (releases_url . "https://api.github.com/repos/jasonrudolph/keyboard/releases{/id}") (deployments_url . "https://api.github.com/repos/jasonrudolph/keyboard/deployments")) (url . "https://api.github.com/notifications/threads/349299049") (subscription_url . "https://api.github.com/notifications/threads/349299049/subscription")) ((id . "332414172") (unread . t) (reason . "subscribed") (updated_at . "2018-06-22T20:43:22Z") (last_read_at) (subject (title . "Remove dependency on Karabiner-Elements") (url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls/38") (latest_comment_url) (type . "PullRequest")) (repository (id . 9118195) (node_id . "MDEwOlJlcG9zaXRvcnk5MTE4MTk1") (name . "keyboard") (full_name . "jasonrudolph/keyboard") (owner (login . "jasonrudolph") (id . 2988) (node_id . "MDQ6VXNlcjI5ODg=") (avatar_url . "https://avatars3.githubusercontent.com/u/2988?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jasonrudolph") (html_url . "https://github.com/jasonrudolph") (followers_url . "https://api.github.com/users/jasonrudolph/followers") (following_url . "https://api.github.com/users/jasonrudolph/following{/other_user}") (gists_url . "https://api.github.com/users/jasonrudolph/gists{/gist_id}") (starred_url . "https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jasonrudolph/subscriptions") (organizations_url . "https://api.github.com/users/jasonrudolph/orgs") (repos_url . "https://api.github.com/users/jasonrudolph/repos") (events_url . "https://api.github.com/users/jasonrudolph/events{/privacy}") (received_events_url . "https://api.github.com/users/jasonrudolph/received_events") (type . "User") (site_admin . t)) (private) (html_url . "https://github.com/jasonrudolph/keyboard") (description . "⌨ Toward a more useful keyboard") (fork) (url . "https://api.github.com/repos/jasonrudolph/keyboard") (forks_url . "https://api.github.com/repos/jasonrudolph/keyboard/forks") (keys_url . "https://api.github.com/repos/jasonrudolph/keyboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jasonrudolph/keyboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jasonrudolph/keyboard/teams") (hooks_url . "https://api.github.com/repos/jasonrudolph/keyboard/hooks") (issue_events_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/events{/number}") (events_url . "https://api.github.com/repos/jasonrudolph/keyboard/events") (assignees_url . "https://api.github.com/repos/jasonrudolph/keyboard/assignees{/user}") (branches_url . "https://api.github.com/repos/jasonrudolph/keyboard/branches{/branch}") (tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/tags") (blobs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jasonrudolph/keyboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/jasonrudolph/keyboard/languages") (stargazers_url . "https://api.github.com/repos/jasonrudolph/keyboard/stargazers") (contributors_url . "https://api.github.com/repos/jasonrudolph/keyboard/contributors") (subscribers_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscribers") (subscription_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscription") (commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jasonrudolph/keyboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jasonrudolph/keyboard/contents/{+path}") (compare_url . "https://api.github.com/repos/jasonrudolph/keyboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jasonrudolph/keyboard/merges") (archive_url . "https://api.github.com/repos/jasonrudolph/keyboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jasonrudolph/keyboard/downloads") (issues_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues{/number}") (pulls_url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/jasonrudolph/keyboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/jasonrudolph/keyboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jasonrudolph/keyboard/labels{/name}") (releases_url . "https://api.github.com/repos/jasonrudolph/keyboard/releases{/id}") (deployments_url . "https://api.github.com/repos/jasonrudolph/keyboard/deployments")) (url . "https://api.github.com/notifications/threads/332414172") (subscription_url . "https://api.github.com/notifications/threads/332414172/subscription")) ((id . "344305436") (unread . t) (reason . "subscribed") (updated_at . "2018-06-22T20:59:08Z") (last_read_at) (subject (title . "Running with Spotify selected if Spotify is not installed may crash") (url . "https://api.github.com/repos/blahsd/snwe/issues/28") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/28") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/344305436") (subscription_url . "https://api.github.com/notifications/threads/344305436/subscription")) ((id . "345669295") (unread . t) (reason . "subscribed") (updated_at . "2018-06-22T20:58:02Z") (last_read_at) (subject (title . "Closing preference window manually and later trying to close it with the appropriate button causes an error") (url . "https://api.github.com/repos/blahsd/snwe/issues/31") (latest_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/31") (type . "Issue")) (repository (id . 132384989) (node_id . "MDEwOlJlcG9zaXRvcnkxMzIzODQ5ODk=") (name . "snwe") (full_name . "blahsd/snwe") (owner (login . "blahsd") (id . 7347353) (node_id . "MDQ6VXNlcjczNDczNTM=") (avatar_url . "https://avatars0.githubusercontent.com/u/7347353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/blahsd") (html_url . "https://github.com/blahsd") (followers_url . "https://api.github.com/users/blahsd/followers") (following_url . "https://api.github.com/users/blahsd/following{/other_user}") (gists_url . "https://api.github.com/users/blahsd/gists{/gist_id}") (starred_url . "https://api.github.com/users/blahsd/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/blahsd/subscriptions") (organizations_url . "https://api.github.com/users/blahsd/orgs") (repos_url . "https://api.github.com/users/blahsd/repos") (events_url . "https://api.github.com/users/blahsd/events{/privacy}") (received_events_url . "https://api.github.com/users/blahsd/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/blahsd/snwe") (description . "🚀 Extensible, customisable, menubar replacement for macOS/UNIX.") (fork) (url . "https://api.github.com/repos/blahsd/snwe") (forks_url . "https://api.github.com/repos/blahsd/snwe/forks") (keys_url . "https://api.github.com/repos/blahsd/snwe/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/blahsd/snwe/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/blahsd/snwe/teams") (hooks_url . "https://api.github.com/repos/blahsd/snwe/hooks") (issue_events_url . "https://api.github.com/repos/blahsd/snwe/issues/events{/number}") (events_url . "https://api.github.com/repos/blahsd/snwe/events") (assignees_url . "https://api.github.com/repos/blahsd/snwe/assignees{/user}") (branches_url . "https://api.github.com/repos/blahsd/snwe/branches{/branch}") (tags_url . "https://api.github.com/repos/blahsd/snwe/tags") (blobs_url . "https://api.github.com/repos/blahsd/snwe/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/blahsd/snwe/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/blahsd/snwe/git/refs{/sha}") (trees_url . "https://api.github.com/repos/blahsd/snwe/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/blahsd/snwe/statuses/{sha}") (languages_url . "https://api.github.com/repos/blahsd/snwe/languages") (stargazers_url . "https://api.github.com/repos/blahsd/snwe/stargazers") (contributors_url . "https://api.github.com/repos/blahsd/snwe/contributors") (subscribers_url . "https://api.github.com/repos/blahsd/snwe/subscribers") (subscription_url . "https://api.github.com/repos/blahsd/snwe/subscription") (commits_url . "https://api.github.com/repos/blahsd/snwe/commits{/sha}") (git_commits_url . "https://api.github.com/repos/blahsd/snwe/git/commits{/sha}") (comments_url . "https://api.github.com/repos/blahsd/snwe/comments{/number}") (issue_comment_url . "https://api.github.com/repos/blahsd/snwe/issues/comments{/number}") (contents_url . "https://api.github.com/repos/blahsd/snwe/contents/{+path}") (compare_url . "https://api.github.com/repos/blahsd/snwe/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/blahsd/snwe/merges") (archive_url . "https://api.github.com/repos/blahsd/snwe/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/blahsd/snwe/downloads") (issues_url . "https://api.github.com/repos/blahsd/snwe/issues{/number}") (pulls_url . "https://api.github.com/repos/blahsd/snwe/pulls{/number}") (milestones_url . "https://api.github.com/repos/blahsd/snwe/milestones{/number}") (notifications_url . "https://api.github.com/repos/blahsd/snwe/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/blahsd/snwe/labels{/name}") (releases_url . "https://api.github.com/repos/blahsd/snwe/releases{/id}") (deployments_url . "https://api.github.com/repos/blahsd/snwe/deployments")) (url . "https://api.github.com/notifications/threads/345669295") (subscription_url . "https://api.github.com/notifications/threads/345669295/subscription")) ((id . "344360330") (unread . t) (reason . "subscribed") (updated_at . "2018-06-22T18:10:21Z") (last_read_at) (subject (title . "Installation with icu4c v61 fails") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/334") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/399530947") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/344360330") (subscription_url . "https://api.github.com/notifications/threads/344360330/subscription")) ((id . "347490574") (unread . t) (reason . "subscribed") (updated_at . "2018-06-22T11:55:17Z") (last_read_at) (subject (title . "libjpeg version problem") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/92") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments/399417655") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/347490574") (subscription_url . "https://api.github.com/notifications/threads/347490574/subscription")) ((id . "345616466") (unread . t) (reason . "subscribed") (updated_at . "2018-06-21T04:32:54Z") (last_read_at) (subject (title . "Make search much faster") (url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/3") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments/398973024") (type . "PullRequest")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/345616466") (subscription_url . "https://api.github.com/notifications/threads/345616466/subscription")) ((id . "344622222") (unread . t) (reason . "subscribed") (updated_at . "2018-06-21T00:53:57Z") (last_read_at) (subject (title . "Bug when typing \"s\"/\"d\" with another character in rapid succession") (url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/40") (latest_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments/398942551") (type . "Issue")) (repository (id . 9118195) (node_id . "MDEwOlJlcG9zaXRvcnk5MTE4MTk1") (name . "keyboard") (full_name . "jasonrudolph/keyboard") (owner (login . "jasonrudolph") (id . 2988) (node_id . "MDQ6VXNlcjI5ODg=") (avatar_url . "https://avatars3.githubusercontent.com/u/2988?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jasonrudolph") (html_url . "https://github.com/jasonrudolph") (followers_url . "https://api.github.com/users/jasonrudolph/followers") (following_url . "https://api.github.com/users/jasonrudolph/following{/other_user}") (gists_url . "https://api.github.com/users/jasonrudolph/gists{/gist_id}") (starred_url . "https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jasonrudolph/subscriptions") (organizations_url . "https://api.github.com/users/jasonrudolph/orgs") (repos_url . "https://api.github.com/users/jasonrudolph/repos") (events_url . "https://api.github.com/users/jasonrudolph/events{/privacy}") (received_events_url . "https://api.github.com/users/jasonrudolph/received_events") (type . "User") (site_admin . t)) (private) (html_url . "https://github.com/jasonrudolph/keyboard") (description . "⌨ Toward a more useful keyboard") (fork) (url . "https://api.github.com/repos/jasonrudolph/keyboard") (forks_url . "https://api.github.com/repos/jasonrudolph/keyboard/forks") (keys_url . "https://api.github.com/repos/jasonrudolph/keyboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jasonrudolph/keyboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jasonrudolph/keyboard/teams") (hooks_url . "https://api.github.com/repos/jasonrudolph/keyboard/hooks") (issue_events_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/events{/number}") (events_url . "https://api.github.com/repos/jasonrudolph/keyboard/events") (assignees_url . "https://api.github.com/repos/jasonrudolph/keyboard/assignees{/user}") (branches_url . "https://api.github.com/repos/jasonrudolph/keyboard/branches{/branch}") (tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/tags") (blobs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jasonrudolph/keyboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/jasonrudolph/keyboard/languages") (stargazers_url . "https://api.github.com/repos/jasonrudolph/keyboard/stargazers") (contributors_url . "https://api.github.com/repos/jasonrudolph/keyboard/contributors") (subscribers_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscribers") (subscription_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscription") (commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jasonrudolph/keyboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jasonrudolph/keyboard/contents/{+path}") (compare_url . "https://api.github.com/repos/jasonrudolph/keyboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jasonrudolph/keyboard/merges") (archive_url . "https://api.github.com/repos/jasonrudolph/keyboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jasonrudolph/keyboard/downloads") (issues_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues{/number}") (pulls_url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/jasonrudolph/keyboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/jasonrudolph/keyboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jasonrudolph/keyboard/labels{/name}") (releases_url . "https://api.github.com/repos/jasonrudolph/keyboard/releases{/id}") (deployments_url . "https://api.github.com/repos/jasonrudolph/keyboard/deployments")) (url . "https://api.github.com/notifications/threads/344622222") (subscription_url . "https://api.github.com/notifications/threads/344622222/subscription")) ((id . "294994293") (unread . t) (reason . "subscribed") (updated_at . "2018-06-20T22:29:45Z") (last_read_at) (subject (title . "Link Citations Without Dates When Using CSL") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/317") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/317") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/294994293") (subscription_url . "https://api.github.com/notifications/threads/294994293/subscription")) ((id . "346591183") (unread . t) (reason . "subscribed") (updated_at . "2018-06-20T09:30:46Z") (last_read_at) (subject (title . "Using more than one punctuation char in BibTeX key") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/335") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/335") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/346591183") (subscription_url . "https://api.github.com/notifications/threads/346591183/subscription")) ((id . "346646596") (unread . t) (reason . "subscribed") (updated_at . "2018-06-20T05:12:34Z") (last_read_at) (subject (title . "Option to show hidden files") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/7") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/7") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/346646596") (subscription_url . "https://api.github.com/notifications/threads/346646596/subscription")) ((id . "346713778") (unread . t) (reason . "subscribed") (updated_at . "2018-06-20T05:00:42Z") (last_read_at) (subject (title . "Configurable magit-status section position") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/8") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/8") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/346713778") (subscription_url . "https://api.github.com/notifications/threads/346713778/subscription")) ((id . "347643301") (unread . t) (reason . "subscribed") (updated_at . "2018-06-20T03:55:07Z") (last_read_at) (subject (title . "doesn't work on windows") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/10") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments/398616477") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/347643301") (subscription_url . "https://api.github.com/notifications/threads/347643301/subscription")) ((id . "347478515") (unread . t) (reason . "subscribed") (updated_at . "2018-06-20T02:43:08Z") (last_read_at) (subject (title . "dependency not listed in readme") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/9") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments/398606566") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/347478515") (subscription_url . "https://api.github.com/notifications/threads/347478515/subscription")) ((id . "347308037") (unread . t) (reason . "subscribed") (updated_at . "2018-06-19T05:39:49Z") (last_read_at) (subject (title . "Update Centaur Emacs: support 25+.") (url . "https://api.github.com/repos/caisah/emacs.dz/pulls/32") (latest_comment_url . "https://api.github.com/repos/caisah/emacs.dz/pulls/32") (type . "PullRequest")) (repository (id . 71278156) (node_id . "MDEwOlJlcG9zaXRvcnk3MTI3ODE1Ng==") (name . "emacs.dz") (full_name . "caisah/emacs.dz") (owner (login . "caisah") (id . 1536049) (node_id . "MDQ6VXNlcjE1MzYwNDk=") (avatar_url . "https://avatars2.githubusercontent.com/u/1536049?v=4") (gravatar_id . "") (url . "https://api.github.com/users/caisah") (html_url . "https://github.com/caisah") (followers_url . "https://api.github.com/users/caisah/followers") (following_url . "https://api.github.com/users/caisah/following{/other_user}") (gists_url . "https://api.github.com/users/caisah/gists{/gist_id}") (starred_url . "https://api.github.com/users/caisah/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/caisah/subscriptions") (organizations_url . "https://api.github.com/users/caisah/orgs") (repos_url . "https://api.github.com/users/caisah/repos") (events_url . "https://api.github.com/users/caisah/events{/privacy}") (received_events_url . "https://api.github.com/users/caisah/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/caisah/emacs.dz") (description . "Awesome emacs config files") (fork) (url . "https://api.github.com/repos/caisah/emacs.dz") (forks_url . "https://api.github.com/repos/caisah/emacs.dz/forks") (keys_url . "https://api.github.com/repos/caisah/emacs.dz/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/caisah/emacs.dz/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/caisah/emacs.dz/teams") (hooks_url . "https://api.github.com/repos/caisah/emacs.dz/hooks") (issue_events_url . "https://api.github.com/repos/caisah/emacs.dz/issues/events{/number}") (events_url . "https://api.github.com/repos/caisah/emacs.dz/events") (assignees_url . "https://api.github.com/repos/caisah/emacs.dz/assignees{/user}") (branches_url . "https://api.github.com/repos/caisah/emacs.dz/branches{/branch}") (tags_url . "https://api.github.com/repos/caisah/emacs.dz/tags") (blobs_url . "https://api.github.com/repos/caisah/emacs.dz/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/caisah/emacs.dz/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/caisah/emacs.dz/git/refs{/sha}") (trees_url . "https://api.github.com/repos/caisah/emacs.dz/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/caisah/emacs.dz/statuses/{sha}") (languages_url . "https://api.github.com/repos/caisah/emacs.dz/languages") (stargazers_url . "https://api.github.com/repos/caisah/emacs.dz/stargazers") (contributors_url . "https://api.github.com/repos/caisah/emacs.dz/contributors") (subscribers_url . "https://api.github.com/repos/caisah/emacs.dz/subscribers") (subscription_url . "https://api.github.com/repos/caisah/emacs.dz/subscription") (commits_url . "https://api.github.com/repos/caisah/emacs.dz/commits{/sha}") (git_commits_url . "https://api.github.com/repos/caisah/emacs.dz/git/commits{/sha}") (comments_url . "https://api.github.com/repos/caisah/emacs.dz/comments{/number}") (issue_comment_url . "https://api.github.com/repos/caisah/emacs.dz/issues/comments{/number}") (contents_url . "https://api.github.com/repos/caisah/emacs.dz/contents/{+path}") (compare_url . "https://api.github.com/repos/caisah/emacs.dz/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/caisah/emacs.dz/merges") (archive_url . "https://api.github.com/repos/caisah/emacs.dz/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/caisah/emacs.dz/downloads") (issues_url . "https://api.github.com/repos/caisah/emacs.dz/issues{/number}") (pulls_url . "https://api.github.com/repos/caisah/emacs.dz/pulls{/number}") (milestones_url . "https://api.github.com/repos/caisah/emacs.dz/milestones{/number}") (notifications_url . "https://api.github.com/repos/caisah/emacs.dz/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/caisah/emacs.dz/labels{/name}") (releases_url . "https://api.github.com/repos/caisah/emacs.dz/releases{/id}") (deployments_url . "https://api.github.com/repos/caisah/emacs.dz/deployments")) (url . "https://api.github.com/notifications/threads/347308037") (subscription_url . "https://api.github.com/notifications/threads/347308037/subscription")) ((id . "347158959") (unread . t) (reason . "subscribed") (updated_at . "2018-06-19T03:56:08Z") (last_read_at) (subject (title . "Fix spelling in warning messages") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/91") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments/398266758") (type . "PullRequest")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/347158959") (subscription_url . "https://api.github.com/notifications/threads/347158959/subscription")) ((id . "346824432") (unread . t) (reason . "subscribed") (updated_at . "2018-06-18T20:44:13Z") (last_read_at) (subject (title . "Allow aeson 1.4.*") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls/336") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls/336") (type . "PullRequest")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/346824432") (subscription_url . "https://api.github.com/notifications/threads/346824432/subscription")) ((id . "347135503") (unread . t) (reason . "subscribed") (updated_at . "2018-06-18T18:00:17Z") (last_read_at) (subject (title . "Telling \"number\" from \"issue\" in bibtex entries") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/337") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/337") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/347135503") (subscription_url . "https://api.github.com/notifications/threads/347135503/subscription")) ((id . "314313619") (unread . t) (reason . "subscribed") (updated_at . "2018-06-17T09:50:08Z") (last_read_at) (subject (title . "Dashboard not seen in emacs25") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/63") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments/397867405") (type . "Issue")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/314313619") (subscription_url . "https://api.github.com/notifications/threads/314313619/subscription")) ((id . "346650250") (unread . t) (reason . "subscribed") (updated_at . "2018-06-20T12:18:18Z") (last_read_at) (subject (title . "No icon for .rst extension") (url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/116") (latest_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments/398728622") (type . "Issue")) (repository (id . 60958378) (node_id . "MDEwOlJlcG9zaXRvcnk2MDk1ODM3OA==") (name . "all-the-icons.el") (full_name . "domtronn/all-the-icons.el") (owner (login . "domtronn") (id . 5881414) (node_id . "MDQ6VXNlcjU4ODE0MTQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/5881414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/domtronn") (html_url . "https://github.com/domtronn") (followers_url . "https://api.github.com/users/domtronn/followers") (following_url . "https://api.github.com/users/domtronn/following{/other_user}") (gists_url . "https://api.github.com/users/domtronn/gists{/gist_id}") (starred_url . "https://api.github.com/users/domtronn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/domtronn/subscriptions") (organizations_url . "https://api.github.com/users/domtronn/orgs") (repos_url . "https://api.github.com/users/domtronn/repos") (events_url . "https://api.github.com/users/domtronn/events{/privacy}") (received_events_url . "https://api.github.com/users/domtronn/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/domtronn/all-the-icons.el") (description . "A utility package to collect various Icon Fonts and propertize them within Emacs.") (fork) (url . "https://api.github.com/repos/domtronn/all-the-icons.el") (forks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/forks") (keys_url . "https://api.github.com/repos/domtronn/all-the-icons.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/domtronn/all-the-icons.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/domtronn/all-the-icons.el/teams") (hooks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/hooks") (issue_events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/events{/number}") (events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/events") (assignees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/assignees{/user}") (branches_url . "https://api.github.com/repos/domtronn/all-the-icons.el/branches{/branch}") (tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/tags") (blobs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/domtronn/all-the-icons.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/domtronn/all-the-icons.el/languages") (stargazers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/stargazers") (contributors_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contributors") (subscribers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscribers") (subscription_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscription") (commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contents/{+path}") (compare_url . "https://api.github.com/repos/domtronn/all-the-icons.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/domtronn/all-the-icons.el/merges") (archive_url . "https://api.github.com/repos/domtronn/all-the-icons.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/domtronn/all-the-icons.el/downloads") (issues_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues{/number}") (pulls_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/domtronn/all-the-icons.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/domtronn/all-the-icons.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/domtronn/all-the-icons.el/labels{/name}") (releases_url . "https://api.github.com/repos/domtronn/all-the-icons.el/releases{/id}") (deployments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/deployments")) (url . "https://api.github.com/notifications/threads/346650250") (subscription_url . "https://api.github.com/notifications/threads/346650250/subscription")) ((id . "346642419") (unread . t) (reason . "subscribed") (updated_at . "2018-06-16T04:11:43Z") (last_read_at) (subject (title . "Create autoloads") (url . "https://api.github.com/repos/alphapapa/magit-todos/issues/6") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments/397785144") (type . "Issue")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/346642419") (subscription_url . "https://api.github.com/notifications/threads/346642419/subscription")) ((id . "346625721") (unread . t) (reason . "subscribed") (updated_at . "2018-06-16T01:03:55Z") (last_read_at) (subject (title . "chore: typo in package-requires") (url . "https://api.github.com/repos/alphapapa/magit-todos/pulls/5") (latest_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments/397775351") (type . "PullRequest")) (repository (id . 137162713) (node_id . "MDEwOlJlcG9zaXRvcnkxMzcxNjI3MTM=") (name . "magit-todos") (full_name . "alphapapa/magit-todos") (owner (login . "alphapapa") (id . 601365) (node_id . "MDQ6VXNlcjYwMTM2NQ==") (avatar_url . "https://avatars2.githubusercontent.com/u/601365?v=4") (gravatar_id . "") (url . "https://api.github.com/users/alphapapa") (html_url . "https://github.com/alphapapa") (followers_url . "https://api.github.com/users/alphapapa/followers") (following_url . "https://api.github.com/users/alphapapa/following{/other_user}") (gists_url . "https://api.github.com/users/alphapapa/gists{/gist_id}") (starred_url . "https://api.github.com/users/alphapapa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/alphapapa/subscriptions") (organizations_url . "https://api.github.com/users/alphapapa/orgs") (repos_url . "https://api.github.com/users/alphapapa/repos") (events_url . "https://api.github.com/users/alphapapa/events{/privacy}") (received_events_url . "https://api.github.com/users/alphapapa/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/alphapapa/magit-todos") (description . "Show source files' TODOs (and FIXMEs, etc) in Magit status buffer") (fork) (url . "https://api.github.com/repos/alphapapa/magit-todos") (forks_url . "https://api.github.com/repos/alphapapa/magit-todos/forks") (keys_url . "https://api.github.com/repos/alphapapa/magit-todos/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/alphapapa/magit-todos/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/alphapapa/magit-todos/teams") (hooks_url . "https://api.github.com/repos/alphapapa/magit-todos/hooks") (issue_events_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/events{/number}") (events_url . "https://api.github.com/repos/alphapapa/magit-todos/events") (assignees_url . "https://api.github.com/repos/alphapapa/magit-todos/assignees{/user}") (branches_url . "https://api.github.com/repos/alphapapa/magit-todos/branches{/branch}") (tags_url . "https://api.github.com/repos/alphapapa/magit-todos/tags") (blobs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/alphapapa/magit-todos/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/alphapapa/magit-todos/git/refs{/sha}") (trees_url . "https://api.github.com/repos/alphapapa/magit-todos/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/alphapapa/magit-todos/statuses/{sha}") (languages_url . "https://api.github.com/repos/alphapapa/magit-todos/languages") (stargazers_url . "https://api.github.com/repos/alphapapa/magit-todos/stargazers") (contributors_url . "https://api.github.com/repos/alphapapa/magit-todos/contributors") (subscribers_url . "https://api.github.com/repos/alphapapa/magit-todos/subscribers") (subscription_url . "https://api.github.com/repos/alphapapa/magit-todos/subscription") (commits_url . "https://api.github.com/repos/alphapapa/magit-todos/commits{/sha}") (git_commits_url . "https://api.github.com/repos/alphapapa/magit-todos/git/commits{/sha}") (comments_url . "https://api.github.com/repos/alphapapa/magit-todos/comments{/number}") (issue_comment_url . "https://api.github.com/repos/alphapapa/magit-todos/issues/comments{/number}") (contents_url . "https://api.github.com/repos/alphapapa/magit-todos/contents/{+path}") (compare_url . "https://api.github.com/repos/alphapapa/magit-todos/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/alphapapa/magit-todos/merges") (archive_url . "https://api.github.com/repos/alphapapa/magit-todos/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/alphapapa/magit-todos/downloads") (issues_url . "https://api.github.com/repos/alphapapa/magit-todos/issues{/number}") (pulls_url . "https://api.github.com/repos/alphapapa/magit-todos/pulls{/number}") (milestones_url . "https://api.github.com/repos/alphapapa/magit-todos/milestones{/number}") (notifications_url . "https://api.github.com/repos/alphapapa/magit-todos/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/alphapapa/magit-todos/labels{/name}") (releases_url . "https://api.github.com/repos/alphapapa/magit-todos/releases{/id}") (deployments_url . "https://api.github.com/repos/alphapapa/magit-todos/deployments")) (url . "https://api.github.com/notifications/threads/346625721") (subscription_url . "https://api.github.com/notifications/threads/346625721/subscription")) ((id . "345634405") (unread . t) (reason . "subscribed") (updated_at . "2018-06-15T03:44:41Z") (last_read_at) (subject (title . "Add option with-xwidgets which brings xwidget webkit for cocoa") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/90") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments/397505128") (type . "PullRequest")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/345634405") (subscription_url . "https://api.github.com/notifications/threads/345634405/subscription")) ((id . "198812731") (unread . t) (reason . "subscribed") (updated_at . "2018-06-14T18:32:15Z") (last_read_at) (subject (title . "Is it possible to enable xwidgets?") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/17") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/17") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/198812731") (subscription_url . "https://api.github.com/notifications/threads/198812731/subscription")) ((id . "340730727") (unread . t) (reason . "subscribed") (updated_at . "2018-06-14T03:14:35Z") (last_read_at) (subject (title . "Interactive codes exclusive to Evil") (url . "https://api.github.com/repos/noctuid/evil-guide/pulls/9") (latest_comment_url) (type . "PullRequest")) (repository (id . 59619085) (node_id . "MDEwOlJlcG9zaXRvcnk1OTYxOTA4NQ==") (name . "evil-guide") (full_name . "noctuid/evil-guide") (owner (login . "noctuid") (id . 4250696) (node_id . "MDQ6VXNlcjQyNTA2OTY=") (avatar_url . "https://avatars1.githubusercontent.com/u/4250696?v=4") (gravatar_id . "") (url . "https://api.github.com/users/noctuid") (html_url . "https://github.com/noctuid") (followers_url . "https://api.github.com/users/noctuid/followers") (following_url . "https://api.github.com/users/noctuid/following{/other_user}") (gists_url . "https://api.github.com/users/noctuid/gists{/gist_id}") (starred_url . "https://api.github.com/users/noctuid/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/noctuid/subscriptions") (organizations_url . "https://api.github.com/users/noctuid/orgs") (repos_url . "https://api.github.com/users/noctuid/repos") (events_url . "https://api.github.com/users/noctuid/events{/privacy}") (received_events_url . "https://api.github.com/users/noctuid/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/noctuid/evil-guide") (description . "Draft of a guide for using emacs with evil") (fork) (url . "https://api.github.com/repos/noctuid/evil-guide") (forks_url . "https://api.github.com/repos/noctuid/evil-guide/forks") (keys_url . "https://api.github.com/repos/noctuid/evil-guide/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/noctuid/evil-guide/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/noctuid/evil-guide/teams") (hooks_url . "https://api.github.com/repos/noctuid/evil-guide/hooks") (issue_events_url . "https://api.github.com/repos/noctuid/evil-guide/issues/events{/number}") (events_url . "https://api.github.com/repos/noctuid/evil-guide/events") (assignees_url . "https://api.github.com/repos/noctuid/evil-guide/assignees{/user}") (branches_url . "https://api.github.com/repos/noctuid/evil-guide/branches{/branch}") (tags_url . "https://api.github.com/repos/noctuid/evil-guide/tags") (blobs_url . "https://api.github.com/repos/noctuid/evil-guide/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/noctuid/evil-guide/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/noctuid/evil-guide/git/refs{/sha}") (trees_url . "https://api.github.com/repos/noctuid/evil-guide/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/noctuid/evil-guide/statuses/{sha}") (languages_url . "https://api.github.com/repos/noctuid/evil-guide/languages") (stargazers_url . "https://api.github.com/repos/noctuid/evil-guide/stargazers") (contributors_url . "https://api.github.com/repos/noctuid/evil-guide/contributors") (subscribers_url . "https://api.github.com/repos/noctuid/evil-guide/subscribers") (subscription_url . "https://api.github.com/repos/noctuid/evil-guide/subscription") (commits_url . "https://api.github.com/repos/noctuid/evil-guide/commits{/sha}") (git_commits_url . "https://api.github.com/repos/noctuid/evil-guide/git/commits{/sha}") (comments_url . "https://api.github.com/repos/noctuid/evil-guide/comments{/number}") (issue_comment_url . "https://api.github.com/repos/noctuid/evil-guide/issues/comments{/number}") (contents_url . "https://api.github.com/repos/noctuid/evil-guide/contents/{+path}") (compare_url . "https://api.github.com/repos/noctuid/evil-guide/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/noctuid/evil-guide/merges") (archive_url . "https://api.github.com/repos/noctuid/evil-guide/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/noctuid/evil-guide/downloads") (issues_url . "https://api.github.com/repos/noctuid/evil-guide/issues{/number}") (pulls_url . "https://api.github.com/repos/noctuid/evil-guide/pulls{/number}") (milestones_url . "https://api.github.com/repos/noctuid/evil-guide/milestones{/number}") (notifications_url . "https://api.github.com/repos/noctuid/evil-guide/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/noctuid/evil-guide/labels{/name}") (releases_url . "https://api.github.com/repos/noctuid/evil-guide/releases{/id}") (deployments_url . "https://api.github.com/repos/noctuid/evil-guide/deployments")) (url . "https://api.github.com/notifications/threads/340730727") (subscription_url . "https://api.github.com/notifications/threads/340730727/subscription")) ((id . "345642771") (unread . t) (reason . "subscribed") (updated_at . "2018-06-13T16:22:49Z") (last_read_at) (subject (title . "Replace focus-in-hook with new hook [emacs 27.x]") (url . "https://api.github.com/repos/kaushalmodi/.emacs.d/issues/31") (latest_comment_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/issues/31") (type . "Issue")) (repository (id . 16516614) (node_id . "MDEwOlJlcG9zaXRvcnkxNjUxNjYxNA==") (name . ".emacs.d") (full_name . "kaushalmodi/.emacs.d") (owner (login . "kaushalmodi") (id . 3578197) (node_id . "MDQ6VXNlcjM1NzgxOTc=") (avatar_url . "https://avatars2.githubusercontent.com/u/3578197?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kaushalmodi") (html_url . "https://github.com/kaushalmodi") (followers_url . "https://api.github.com/users/kaushalmodi/followers") (following_url . "https://api.github.com/users/kaushalmodi/following{/other_user}") (gists_url . "https://api.github.com/users/kaushalmodi/gists{/gist_id}") (starred_url . "https://api.github.com/users/kaushalmodi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kaushalmodi/subscriptions") (organizations_url . "https://api.github.com/users/kaushalmodi/orgs") (repos_url . "https://api.github.com/users/kaushalmodi/repos") (events_url . "https://api.github.com/users/kaushalmodi/events{/privacy}") (received_events_url . "https://api.github.com/users/kaushalmodi/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/kaushalmodi/.emacs.d") (description . "My emacs configuration") (fork) (url . "https://api.github.com/repos/kaushalmodi/.emacs.d") (forks_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/forks") (keys_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/teams") (hooks_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/hooks") (issue_events_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/issues/events{/number}") (events_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/events") (assignees_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/assignees{/user}") (branches_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/branches{/branch}") (tags_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/tags") (blobs_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/git/refs{/sha}") (trees_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/statuses/{sha}") (languages_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/languages") (stargazers_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/stargazers") (contributors_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/contributors") (subscribers_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/subscribers") (subscription_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/subscription") (commits_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/commits{/sha}") (git_commits_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/git/commits{/sha}") (comments_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/comments{/number}") (issue_comment_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/issues/comments{/number}") (contents_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/contents/{+path}") (compare_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/merges") (archive_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/downloads") (issues_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/issues{/number}") (pulls_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/pulls{/number}") (milestones_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/milestones{/number}") (notifications_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/labels{/name}") (releases_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/releases{/id}") (deployments_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/deployments")) (url . "https://api.github.com/notifications/threads/345642771") (subscription_url . "https://api.github.com/notifications/threads/345642771/subscription")) ((id . "343078857") (unread . t) (reason . "subscribed") (updated_at . "2018-06-13T02:23:39Z") (last_read_at) (subject (title . "Colour profile?") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/89") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/89") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/343078857") (subscription_url . "https://api.github.com/notifications/threads/343078857/subscription")) ((id . "342868122") (unread . t) (reason . "subscribed") (updated_at . "2018-06-12T05:35:55Z") (last_read_at) (subject (title . "Logs for `brew services restart emacs-plus`") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/88") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments/396471020") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/342868122") (subscription_url . "https://api.github.com/notifications/threads/342868122/subscription")) ((id . "322346161") (unread . t) (reason . "subscribed") (updated_at . "2018-06-12T04:29:25Z") (last_read_at) (subject (title . "Emacs 26.1") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/73") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/73") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/322346161") (subscription_url . "https://api.github.com/notifications/threads/322346161/subscription")) ((id . "344442007") (unread . t) (reason . "subscribed") (updated_at . "2018-06-11T00:56:37Z") (last_read_at) (subject (title . "Old persp-mode and eyebrowse--multiple workspaces in a perspective") (url . "https://api.github.com/repos/gilbertw1/bmacs/issues/2") (latest_comment_url . "https://api.github.com/repos/gilbertw1/bmacs/issues/2") (type . "Issue")) (repository (id . 109317809) (node_id . "MDEwOlJlcG9zaXRvcnkxMDkzMTc4MDk=") (name . "bmacs") (full_name . "gilbertw1/bmacs") (owner (login . "gilbertw1") (id . 142303) (node_id . "MDQ6VXNlcjE0MjMwMw==") (avatar_url . "https://avatars1.githubusercontent.com/u/142303?v=4") (gravatar_id . "") (url . "https://api.github.com/users/gilbertw1") (html_url . "https://github.com/gilbertw1") (followers_url . "https://api.github.com/users/gilbertw1/followers") (following_url . "https://api.github.com/users/gilbertw1/following{/other_user}") (gists_url . "https://api.github.com/users/gilbertw1/gists{/gist_id}") (starred_url . "https://api.github.com/users/gilbertw1/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/gilbertw1/subscriptions") (organizations_url . "https://api.github.com/users/gilbertw1/orgs") (repos_url . "https://api.github.com/users/gilbertw1/repos") (events_url . "https://api.github.com/users/gilbertw1/events{/privacy}") (received_events_url . "https://api.github.com/users/gilbertw1/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/gilbertw1/bmacs") (description . "Bryan's Emacs Configuration") (fork) (url . "https://api.github.com/repos/gilbertw1/bmacs") (forks_url . "https://api.github.com/repos/gilbertw1/bmacs/forks") (keys_url . "https://api.github.com/repos/gilbertw1/bmacs/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/gilbertw1/bmacs/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/gilbertw1/bmacs/teams") (hooks_url . "https://api.github.com/repos/gilbertw1/bmacs/hooks") (issue_events_url . "https://api.github.com/repos/gilbertw1/bmacs/issues/events{/number}") (events_url . "https://api.github.com/repos/gilbertw1/bmacs/events") (assignees_url . "https://api.github.com/repos/gilbertw1/bmacs/assignees{/user}") (branches_url . "https://api.github.com/repos/gilbertw1/bmacs/branches{/branch}") (tags_url . "https://api.github.com/repos/gilbertw1/bmacs/tags") (blobs_url . "https://api.github.com/repos/gilbertw1/bmacs/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/gilbertw1/bmacs/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/gilbertw1/bmacs/git/refs{/sha}") (trees_url . "https://api.github.com/repos/gilbertw1/bmacs/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/gilbertw1/bmacs/statuses/{sha}") (languages_url . "https://api.github.com/repos/gilbertw1/bmacs/languages") (stargazers_url . "https://api.github.com/repos/gilbertw1/bmacs/stargazers") (contributors_url . "https://api.github.com/repos/gilbertw1/bmacs/contributors") (subscribers_url . "https://api.github.com/repos/gilbertw1/bmacs/subscribers") (subscription_url . "https://api.github.com/repos/gilbertw1/bmacs/subscription") (commits_url . "https://api.github.com/repos/gilbertw1/bmacs/commits{/sha}") (git_commits_url . "https://api.github.com/repos/gilbertw1/bmacs/git/commits{/sha}") (comments_url . "https://api.github.com/repos/gilbertw1/bmacs/comments{/number}") (issue_comment_url . "https://api.github.com/repos/gilbertw1/bmacs/issues/comments{/number}") (contents_url . "https://api.github.com/repos/gilbertw1/bmacs/contents/{+path}") (compare_url . "https://api.github.com/repos/gilbertw1/bmacs/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/gilbertw1/bmacs/merges") (archive_url . "https://api.github.com/repos/gilbertw1/bmacs/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/gilbertw1/bmacs/downloads") (issues_url . "https://api.github.com/repos/gilbertw1/bmacs/issues{/number}") (pulls_url . "https://api.github.com/repos/gilbertw1/bmacs/pulls{/number}") (milestones_url . "https://api.github.com/repos/gilbertw1/bmacs/milestones{/number}") (notifications_url . "https://api.github.com/repos/gilbertw1/bmacs/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/gilbertw1/bmacs/labels{/name}") (releases_url . "https://api.github.com/repos/gilbertw1/bmacs/releases{/id}") (deployments_url . "https://api.github.com/repos/gilbertw1/bmacs/deployments")) (url . "https://api.github.com/notifications/threads/344442007") (subscription_url . "https://api.github.com/notifications/threads/344442007/subscription")) ((id . "335952927") (unread . t) (reason . "subscribed") (updated_at . "2018-06-08T12:46:50Z") (last_read_at) (subject (title . "Some fonts don't show up correctly(windows)") (url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/114") (latest_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments/395750148") (type . "Issue")) (repository (id . 60958378) (node_id . "MDEwOlJlcG9zaXRvcnk2MDk1ODM3OA==") (name . "all-the-icons.el") (full_name . "domtronn/all-the-icons.el") (owner (login . "domtronn") (id . 5881414) (node_id . "MDQ6VXNlcjU4ODE0MTQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/5881414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/domtronn") (html_url . "https://github.com/domtronn") (followers_url . "https://api.github.com/users/domtronn/followers") (following_url . "https://api.github.com/users/domtronn/following{/other_user}") (gists_url . "https://api.github.com/users/domtronn/gists{/gist_id}") (starred_url . "https://api.github.com/users/domtronn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/domtronn/subscriptions") (organizations_url . "https://api.github.com/users/domtronn/orgs") (repos_url . "https://api.github.com/users/domtronn/repos") (events_url . "https://api.github.com/users/domtronn/events{/privacy}") (received_events_url . "https://api.github.com/users/domtronn/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/domtronn/all-the-icons.el") (description . "A utility package to collect various Icon Fonts and propertize them within Emacs.") (fork) (url . "https://api.github.com/repos/domtronn/all-the-icons.el") (forks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/forks") (keys_url . "https://api.github.com/repos/domtronn/all-the-icons.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/domtronn/all-the-icons.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/domtronn/all-the-icons.el/teams") (hooks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/hooks") (issue_events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/events{/number}") (events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/events") (assignees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/assignees{/user}") (branches_url . "https://api.github.com/repos/domtronn/all-the-icons.el/branches{/branch}") (tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/tags") (blobs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/domtronn/all-the-icons.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/domtronn/all-the-icons.el/languages") (stargazers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/stargazers") (contributors_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contributors") (subscribers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscribers") (subscription_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscription") (commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contents/{+path}") (compare_url . "https://api.github.com/repos/domtronn/all-the-icons.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/domtronn/all-the-icons.el/merges") (archive_url . "https://api.github.com/repos/domtronn/all-the-icons.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/domtronn/all-the-icons.el/downloads") (issues_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues{/number}") (pulls_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/domtronn/all-the-icons.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/domtronn/all-the-icons.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/domtronn/all-the-icons.el/labels{/name}") (releases_url . "https://api.github.com/repos/domtronn/all-the-icons.el/releases{/id}") (deployments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/deployments")) (url . "https://api.github.com/notifications/threads/335952927") (subscription_url . "https://api.github.com/notifications/threads/335952927/subscription")) ((id . "189610221") (unread . t) (reason . "manual") (updated_at . "2018-06-07T13:59:41Z") (last_read_at . "2018-05-31T02:05:22Z") (subject (title . "FYI: Emacs 26 will remove frame-local variables") (url . "https://api.github.com/repos/nex3/perspective-el/issues/64") (latest_comment_url . "https://api.github.com/repos/nex3/perspective-el/issues/64") (type . "Issue")) (repository (id . 3045) (node_id . "MDEwOlJlcG9zaXRvcnkzMDQ1") (name . "perspective-el") (full_name . "nex3/perspective-el") (owner (login . "nex3") (id . 188) (node_id . "MDQ6VXNlcjE4OA==") (avatar_url . "https://avatars0.githubusercontent.com/u/188?v=4") (gravatar_id . "") (url . "https://api.github.com/users/nex3") (html_url . "https://github.com/nex3") (followers_url . "https://api.github.com/users/nex3/followers") (following_url . "https://api.github.com/users/nex3/following{/other_user}") (gists_url . "https://api.github.com/users/nex3/gists{/gist_id}") (starred_url . "https://api.github.com/users/nex3/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/nex3/subscriptions") (organizations_url . "https://api.github.com/users/nex3/orgs") (repos_url . "https://api.github.com/users/nex3/repos") (events_url . "https://api.github.com/users/nex3/events{/privacy}") (received_events_url . "https://api.github.com/users/nex3/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/nex3/perspective-el") (description . "Perspectives for Emacs.") (fork) (url . "https://api.github.com/repos/nex3/perspective-el") (forks_url . "https://api.github.com/repos/nex3/perspective-el/forks") (keys_url . "https://api.github.com/repos/nex3/perspective-el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/nex3/perspective-el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/nex3/perspective-el/teams") (hooks_url . "https://api.github.com/repos/nex3/perspective-el/hooks") (issue_events_url . "https://api.github.com/repos/nex3/perspective-el/issues/events{/number}") (events_url . "https://api.github.com/repos/nex3/perspective-el/events") (assignees_url . "https://api.github.com/repos/nex3/perspective-el/assignees{/user}") (branches_url . "https://api.github.com/repos/nex3/perspective-el/branches{/branch}") (tags_url . "https://api.github.com/repos/nex3/perspective-el/tags") (blobs_url . "https://api.github.com/repos/nex3/perspective-el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/nex3/perspective-el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/nex3/perspective-el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/nex3/perspective-el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/nex3/perspective-el/statuses/{sha}") (languages_url . "https://api.github.com/repos/nex3/perspective-el/languages") (stargazers_url . "https://api.github.com/repos/nex3/perspective-el/stargazers") (contributors_url . "https://api.github.com/repos/nex3/perspective-el/contributors") (subscribers_url . "https://api.github.com/repos/nex3/perspective-el/subscribers") (subscription_url . "https://api.github.com/repos/nex3/perspective-el/subscription") (commits_url . "https://api.github.com/repos/nex3/perspective-el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/nex3/perspective-el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/nex3/perspective-el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/nex3/perspective-el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/nex3/perspective-el/contents/{+path}") (compare_url . "https://api.github.com/repos/nex3/perspective-el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/nex3/perspective-el/merges") (archive_url . "https://api.github.com/repos/nex3/perspective-el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/nex3/perspective-el/downloads") (issues_url . "https://api.github.com/repos/nex3/perspective-el/issues{/number}") (pulls_url . "https://api.github.com/repos/nex3/perspective-el/pulls{/number}") (milestones_url . "https://api.github.com/repos/nex3/perspective-el/milestones{/number}") (notifications_url . "https://api.github.com/repos/nex3/perspective-el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/nex3/perspective-el/labels{/name}") (releases_url . "https://api.github.com/repos/nex3/perspective-el/releases{/id}") (deployments_url . "https://api.github.com/repos/nex3/perspective-el/deployments")) (url . "https://api.github.com/notifications/threads/189610221") (subscription_url . "https://api.github.com/notifications/threads/189610221/subscription")) ((id . "343155577") (unread . t) (reason . "subscribed") (updated_at . "2018-06-06T23:35:26Z") (last_read_at) (subject (title . "NBIB support.") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls/333") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/395246472") (type . "PullRequest")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/343155577") (subscription_url . "https://api.github.com/notifications/threads/343155577/subscription")) ((id . "339921158") (unread . t) (reason . "comment") (updated_at . "2018-06-06T21:39:43Z") (last_read_at . "2018-06-05T04:08:24Z") (subject (title . "org agenda view on startup") (url . "https://api.github.com/repos/mclear-tools/dotemacs/issues/1") (latest_comment_url . "https://api.github.com/repos/mclear-tools/dotemacs/issues/1") (type . "Issue")) (repository (id . 60934121) (node_id . "MDEwOlJlcG9zaXRvcnk2MDkzNDEyMQ==") (name . "dotemacs") (full_name . "mclear-tools/dotemacs") (owner (login . "mclear-tools") (id . 19655968) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjU1OTY4") (avatar_url . "https://avatars1.githubusercontent.com/u/19655968?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-tools") (html_url . "https://github.com/mclear-tools") (followers_url . "https://api.github.com/users/mclear-tools/followers") (following_url . "https://api.github.com/users/mclear-tools/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-tools/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-tools/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-tools/subscriptions") (organizations_url . "https://api.github.com/users/mclear-tools/orgs") (repos_url . "https://api.github.com/users/mclear-tools/repos") (events_url . "https://api.github.com/users/mclear-tools/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-tools/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/mclear-tools/dotemacs") (description . "My literate emacs configuration. Look at config.org to see how it all is put together.") (fork) (url . "https://api.github.com/repos/mclear-tools/dotemacs") (forks_url . "https://api.github.com/repos/mclear-tools/dotemacs/forks") (keys_url . "https://api.github.com/repos/mclear-tools/dotemacs/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mclear-tools/dotemacs/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mclear-tools/dotemacs/teams") (hooks_url . "https://api.github.com/repos/mclear-tools/dotemacs/hooks") (issue_events_url . "https://api.github.com/repos/mclear-tools/dotemacs/issues/events{/number}") (events_url . "https://api.github.com/repos/mclear-tools/dotemacs/events") (assignees_url . "https://api.github.com/repos/mclear-tools/dotemacs/assignees{/user}") (branches_url . "https://api.github.com/repos/mclear-tools/dotemacs/branches{/branch}") (tags_url . "https://api.github.com/repos/mclear-tools/dotemacs/tags") (blobs_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mclear-tools/dotemacs/statuses/{sha}") (languages_url . "https://api.github.com/repos/mclear-tools/dotemacs/languages") (stargazers_url . "https://api.github.com/repos/mclear-tools/dotemacs/stargazers") (contributors_url . "https://api.github.com/repos/mclear-tools/dotemacs/contributors") (subscribers_url . "https://api.github.com/repos/mclear-tools/dotemacs/subscribers") (subscription_url . "https://api.github.com/repos/mclear-tools/dotemacs/subscription") (commits_url . "https://api.github.com/repos/mclear-tools/dotemacs/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mclear-tools/dotemacs/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mclear-tools/dotemacs/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mclear-tools/dotemacs/contents/{+path}") (compare_url . "https://api.github.com/repos/mclear-tools/dotemacs/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mclear-tools/dotemacs/merges") (archive_url . "https://api.github.com/repos/mclear-tools/dotemacs/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mclear-tools/dotemacs/downloads") (issues_url . "https://api.github.com/repos/mclear-tools/dotemacs/issues{/number}") (pulls_url . "https://api.github.com/repos/mclear-tools/dotemacs/pulls{/number}") (milestones_url . "https://api.github.com/repos/mclear-tools/dotemacs/milestones{/number}") (notifications_url . "https://api.github.com/repos/mclear-tools/dotemacs/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mclear-tools/dotemacs/labels{/name}") (releases_url . "https://api.github.com/repos/mclear-tools/dotemacs/releases{/id}") (deployments_url . "https://api.github.com/repos/mclear-tools/dotemacs/deployments")) (url . "https://api.github.com/notifications/threads/339921158") (subscription_url . "https://api.github.com/notifications/threads/339921158/subscription")) ((id . "343069519") (unread . t) (reason . "subscribed") (updated_at . "2018-06-06T14:07:55Z") (last_read_at) (subject (title . "Symlink permission issue") (url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/39") (latest_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/39") (type . "Issue")) (repository (id . 9118195) (node_id . "MDEwOlJlcG9zaXRvcnk5MTE4MTk1") (name . "keyboard") (full_name . "jasonrudolph/keyboard") (owner (login . "jasonrudolph") (id . 2988) (node_id . "MDQ6VXNlcjI5ODg=") (avatar_url . "https://avatars3.githubusercontent.com/u/2988?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jasonrudolph") (html_url . "https://github.com/jasonrudolph") (followers_url . "https://api.github.com/users/jasonrudolph/followers") (following_url . "https://api.github.com/users/jasonrudolph/following{/other_user}") (gists_url . "https://api.github.com/users/jasonrudolph/gists{/gist_id}") (starred_url . "https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jasonrudolph/subscriptions") (organizations_url . "https://api.github.com/users/jasonrudolph/orgs") (repos_url . "https://api.github.com/users/jasonrudolph/repos") (events_url . "https://api.github.com/users/jasonrudolph/events{/privacy}") (received_events_url . "https://api.github.com/users/jasonrudolph/received_events") (type . "User") (site_admin . t)) (private) (html_url . "https://github.com/jasonrudolph/keyboard") (description . "⌨ Toward a more useful keyboard") (fork) (url . "https://api.github.com/repos/jasonrudolph/keyboard") (forks_url . "https://api.github.com/repos/jasonrudolph/keyboard/forks") (keys_url . "https://api.github.com/repos/jasonrudolph/keyboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jasonrudolph/keyboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jasonrudolph/keyboard/teams") (hooks_url . "https://api.github.com/repos/jasonrudolph/keyboard/hooks") (issue_events_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/events{/number}") (events_url . "https://api.github.com/repos/jasonrudolph/keyboard/events") (assignees_url . "https://api.github.com/repos/jasonrudolph/keyboard/assignees{/user}") (branches_url . "https://api.github.com/repos/jasonrudolph/keyboard/branches{/branch}") (tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/tags") (blobs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jasonrudolph/keyboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/jasonrudolph/keyboard/languages") (stargazers_url . "https://api.github.com/repos/jasonrudolph/keyboard/stargazers") (contributors_url . "https://api.github.com/repos/jasonrudolph/keyboard/contributors") (subscribers_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscribers") (subscription_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscription") (commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jasonrudolph/keyboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jasonrudolph/keyboard/contents/{+path}") (compare_url . "https://api.github.com/repos/jasonrudolph/keyboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jasonrudolph/keyboard/merges") (archive_url . "https://api.github.com/repos/jasonrudolph/keyboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jasonrudolph/keyboard/downloads") (issues_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues{/number}") (pulls_url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/jasonrudolph/keyboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/jasonrudolph/keyboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jasonrudolph/keyboard/labels{/name}") (releases_url . "https://api.github.com/repos/jasonrudolph/keyboard/releases{/id}") (deployments_url . "https://api.github.com/repos/jasonrudolph/keyboard/deployments")) (url . "https://api.github.com/notifications/threads/343069519") (subscription_url . "https://api.github.com/notifications/threads/343069519/subscription")) ((id . "342042342") (unread . t) (reason . "subscribed") (updated_at . "2018-06-06T07:44:51Z") (last_read_at . "2018-06-05T19:32:20Z") (subject (title . "Setup environment for building bottles") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/87") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments/394973509") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/342042342") (subscription_url . "https://api.github.com/notifications/threads/342042342/subscription")) ((id . "342824867") (unread . t) (reason . "subscribed") (updated_at . "2018-06-16T08:33:02Z") (last_read_at) (subject (title . "A decentralized repository of repositories") (url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/issues/78") (latest_comment_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/issues/comments/397797690") (type . "Issue")) (repository (id . 135785971) (node_id . "MDEwOlJlcG9zaXRvcnkxMzU3ODU5NzE=") (name . "IF_MS_BUYS_GITHUB_IMMA_OUT") (full_name . "upend/IF_MS_BUYS_GITHUB_IMMA_OUT") (owner (login . "upend") (id . 14874695) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE0ODc0Njk1") (avatar_url . "https://avatars0.githubusercontent.com/u/14874695?v=4") (gravatar_id . "") (url . "https://api.github.com/users/upend") (html_url . "https://github.com/upend") (followers_url . "https://api.github.com/users/upend/followers") (following_url . "https://api.github.com/users/upend/following{/other_user}") (gists_url . "https://api.github.com/users/upend/gists{/gist_id}") (starred_url . "https://api.github.com/users/upend/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/upend/subscriptions") (organizations_url . "https://api.github.com/users/upend/orgs") (repos_url . "https://api.github.com/users/upend/repos") (events_url . "https://api.github.com/users/upend/events{/privacy}") (received_events_url . "https://api.github.com/users/upend/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/upend/IF_MS_BUYS_GITHUB_IMMA_OUT") (description . "GitHub has sold us out. Time to get out.") (fork) (url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT") (forks_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/forks") (keys_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/teams") (hooks_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/hooks") (issue_events_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/issues/events{/number}") (events_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/events") (assignees_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/assignees{/user}") (branches_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/branches{/branch}") (tags_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/tags") (blobs_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/git/refs{/sha}") (trees_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/statuses/{sha}") (languages_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/languages") (stargazers_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/stargazers") (contributors_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/contributors") (subscribers_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/subscribers") (subscription_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/subscription") (commits_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/commits{/sha}") (git_commits_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/git/commits{/sha}") (comments_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/comments{/number}") (issue_comment_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/issues/comments{/number}") (contents_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/contents/{+path}") (compare_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/merges") (archive_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/downloads") (issues_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/issues{/number}") (pulls_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/pulls{/number}") (milestones_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/milestones{/number}") (notifications_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/labels{/name}") (releases_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/releases{/id}") (deployments_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/deployments")) (url . "https://api.github.com/notifications/threads/342824867") (subscription_url . "https://api.github.com/notifications/threads/342824867/subscription")) ((id . "342863626") (unread . t) (reason . "subscribed") (updated_at . "2018-06-16T08:42:51Z") (last_read_at) (subject (title . "Decentralized (federated) git service using the ActivityPub standard") (url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/issues/84") (latest_comment_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/issues/comments/397798165") (type . "Issue")) (repository (id . 135785971) (node_id . "MDEwOlJlcG9zaXRvcnkxMzU3ODU5NzE=") (name . "IF_MS_BUYS_GITHUB_IMMA_OUT") (full_name . "upend/IF_MS_BUYS_GITHUB_IMMA_OUT") (owner (login . "upend") (id . 14874695) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE0ODc0Njk1") (avatar_url . "https://avatars0.githubusercontent.com/u/14874695?v=4") (gravatar_id . "") (url . "https://api.github.com/users/upend") (html_url . "https://github.com/upend") (followers_url . "https://api.github.com/users/upend/followers") (following_url . "https://api.github.com/users/upend/following{/other_user}") (gists_url . "https://api.github.com/users/upend/gists{/gist_id}") (starred_url . "https://api.github.com/users/upend/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/upend/subscriptions") (organizations_url . "https://api.github.com/users/upend/orgs") (repos_url . "https://api.github.com/users/upend/repos") (events_url . "https://api.github.com/users/upend/events{/privacy}") (received_events_url . "https://api.github.com/users/upend/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/upend/IF_MS_BUYS_GITHUB_IMMA_OUT") (description . "GitHub has sold us out. Time to get out.") (fork) (url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT") (forks_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/forks") (keys_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/teams") (hooks_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/hooks") (issue_events_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/issues/events{/number}") (events_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/events") (assignees_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/assignees{/user}") (branches_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/branches{/branch}") (tags_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/tags") (blobs_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/git/refs{/sha}") (trees_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/statuses/{sha}") (languages_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/languages") (stargazers_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/stargazers") (contributors_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/contributors") (subscribers_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/subscribers") (subscription_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/subscription") (commits_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/commits{/sha}") (git_commits_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/git/commits{/sha}") (comments_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/comments{/number}") (issue_comment_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/issues/comments{/number}") (contents_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/contents/{+path}") (compare_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/merges") (archive_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/downloads") (issues_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/issues{/number}") (pulls_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/pulls{/number}") (milestones_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/milestones{/number}") (notifications_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/labels{/name}") (releases_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/releases{/id}") (deployments_url . "https://api.github.com/repos/upend/IF_MS_BUYS_GITHUB_IMMA_OUT/deployments")) (url . "https://api.github.com/notifications/threads/342863626") (subscription_url . "https://api.github.com/notifications/threads/342863626/subscription")) ((id . "328069328") (unread . t) (reason . "subscribed") (updated_at . "2018-06-05T18:49:44Z") (last_read_at) (subject (title . ":wq doesn't do the right thing from org src buffers") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/43") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments/394819722") (type . "Issue")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/328069328") (subscription_url . "https://api.github.com/notifications/threads/328069328/subscription")) ((id . "299212841") (unread . t) (reason . "subscribed") (updated_at . "2018-06-21T04:01:52Z") (last_read_at . "2018-06-02T03:43:18Z") (subject (title . "Icons have wrong name") (url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/99") (latest_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments/398969160") (type . "Issue")) (repository (id . 60958378) (node_id . "MDEwOlJlcG9zaXRvcnk2MDk1ODM3OA==") (name . "all-the-icons.el") (full_name . "domtronn/all-the-icons.el") (owner (login . "domtronn") (id . 5881414) (node_id . "MDQ6VXNlcjU4ODE0MTQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/5881414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/domtronn") (html_url . "https://github.com/domtronn") (followers_url . "https://api.github.com/users/domtronn/followers") (following_url . "https://api.github.com/users/domtronn/following{/other_user}") (gists_url . "https://api.github.com/users/domtronn/gists{/gist_id}") (starred_url . "https://api.github.com/users/domtronn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/domtronn/subscriptions") (organizations_url . "https://api.github.com/users/domtronn/orgs") (repos_url . "https://api.github.com/users/domtronn/repos") (events_url . "https://api.github.com/users/domtronn/events{/privacy}") (received_events_url . "https://api.github.com/users/domtronn/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/domtronn/all-the-icons.el") (description . "A utility package to collect various Icon Fonts and propertize them within Emacs.") (fork) (url . "https://api.github.com/repos/domtronn/all-the-icons.el") (forks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/forks") (keys_url . "https://api.github.com/repos/domtronn/all-the-icons.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/domtronn/all-the-icons.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/domtronn/all-the-icons.el/teams") (hooks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/hooks") (issue_events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/events{/number}") (events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/events") (assignees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/assignees{/user}") (branches_url . "https://api.github.com/repos/domtronn/all-the-icons.el/branches{/branch}") (tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/tags") (blobs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/domtronn/all-the-icons.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/domtronn/all-the-icons.el/languages") (stargazers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/stargazers") (contributors_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contributors") (subscribers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscribers") (subscription_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscription") (commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contents/{+path}") (compare_url . "https://api.github.com/repos/domtronn/all-the-icons.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/domtronn/all-the-icons.el/merges") (archive_url . "https://api.github.com/repos/domtronn/all-the-icons.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/domtronn/all-the-icons.el/downloads") (issues_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues{/number}") (pulls_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/domtronn/all-the-icons.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/domtronn/all-the-icons.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/domtronn/all-the-icons.el/labels{/name}") (releases_url . "https://api.github.com/repos/domtronn/all-the-icons.el/releases{/id}") (deployments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/deployments")) (url . "https://api.github.com/notifications/threads/299212841") (subscription_url . "https://api.github.com/notifications/threads/299212841/subscription")) ((id . "341870812") (unread . t) (reason . "subscribed") (updated_at . "2018-06-04T16:34:26Z") (last_read_at) (subject (title . "Emacs depends on little-cms2") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/85") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/85") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/341870812") (subscription_url . "https://api.github.com/notifications/threads/341870812/subscription")) ((id . "339972417") (unread . t) (reason . "subscribed") (updated_at . "2018-06-04T16:17:28Z") (last_read_at) (subject (title . "fix build on travis") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/84") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/84") (type . "PullRequest")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/339972417") (subscription_url . "https://api.github.com/notifications/threads/339972417/subscription")) ((id . "342026468") (unread . t) (reason . "subscribed") (updated_at . "2018-06-04T09:16:36Z") (last_read_at) (subject (title . "Error - Emacs cannot be opened because of the problem") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/86") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/86") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/342026468") (subscription_url . "https://api.github.com/notifications/threads/342026468/subscription")) ((id . "331693990") (unread . t) (reason . "subscribed") (updated_at . "2018-06-04T09:14:09Z") (last_read_at) (subject (title . "update bottle") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits/56fc46c2e7a0f4f8925cbab4c9730be5d6b45367") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments/29229976") (type . "Commit")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/331693990") (subscription_url . "https://api.github.com/notifications/threads/331693990/subscription")) ((id . "341153944") (unread . t) (reason . "subscribed") (updated_at . "2018-06-01T20:10:18Z") (last_read_at) (subject (title . "Flickering on Emacs 25.3.1") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/73") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments/393995847") (type . "Issue")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/341153944") (subscription_url . "https://api.github.com/notifications/threads/341153944/subscription")) ((id . "340473774") (unread . t) (reason . "subscribed") (updated_at . "2018-05-30T08:15:55Z") (last_read_at) (subject (title . "Provide list of themes for sunset/sunrise/timeslot") (url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/16") (latest_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/16") (type . "Issue")) (repository (id . 102570101) (node_id . "MDEwOlJlcG9zaXRvcnkxMDI1NzAxMDE=") (name . "circadian.el") (full_name . "guidoschmidt/circadian.el") (owner (login . "guidoschmidt") (id . 463136) (node_id . "MDQ6VXNlcjQ2MzEzNg==") (avatar_url . "https://avatars2.githubusercontent.com/u/463136?v=4") (gravatar_id . "") (url . "https://api.github.com/users/guidoschmidt") (html_url . "https://github.com/guidoschmidt") (followers_url . "https://api.github.com/users/guidoschmidt/followers") (following_url . "https://api.github.com/users/guidoschmidt/following{/other_user}") (gists_url . "https://api.github.com/users/guidoschmidt/gists{/gist_id}") (starred_url . "https://api.github.com/users/guidoschmidt/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/guidoschmidt/subscriptions") (organizations_url . "https://api.github.com/users/guidoschmidt/orgs") (repos_url . "https://api.github.com/users/guidoschmidt/repos") (events_url . "https://api.github.com/users/guidoschmidt/events{/privacy}") (received_events_url . "https://api.github.com/users/guidoschmidt/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/guidoschmidt/circadian.el") (description . "Theme-switching for Emacs based on daytime") (fork) (url . "https://api.github.com/repos/guidoschmidt/circadian.el") (forks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/forks") (keys_url . "https://api.github.com/repos/guidoschmidt/circadian.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/guidoschmidt/circadian.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/guidoschmidt/circadian.el/teams") (hooks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/hooks") (issue_events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/events{/number}") (events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/events") (assignees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/assignees{/user}") (branches_url . "https://api.github.com/repos/guidoschmidt/circadian.el/branches{/branch}") (tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/tags") (blobs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/guidoschmidt/circadian.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/guidoschmidt/circadian.el/languages") (stargazers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/stargazers") (contributors_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contributors") (subscribers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscribers") (subscription_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscription") (commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contents/{+path}") (compare_url . "https://api.github.com/repos/guidoschmidt/circadian.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/guidoschmidt/circadian.el/merges") (archive_url . "https://api.github.com/repos/guidoschmidt/circadian.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/guidoschmidt/circadian.el/downloads") (issues_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues{/number}") (pulls_url . "https://api.github.com/repos/guidoschmidt/circadian.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/guidoschmidt/circadian.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/guidoschmidt/circadian.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/guidoschmidt/circadian.el/labels{/name}") (releases_url . "https://api.github.com/repos/guidoschmidt/circadian.el/releases{/id}") (deployments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/deployments")) (url . "https://api.github.com/notifications/threads/340473774") (subscription_url . "https://api.github.com/notifications/threads/340473774/subscription")) ((id . "340033586") (unread . t) (reason . "subscribed") (updated_at . "2018-05-29T09:19:59Z") (last_read_at) (subject (title . "#331: Explicitly use Text.XML.def in Parser.hs.") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls/332") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls/332") (type . "PullRequest")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/340033586") (subscription_url . "https://api.github.com/notifications/threads/340033586/subscription")) ((id . "340032148") (unread . t) (reason . "subscribed") (updated_at . "2018-05-29T09:16:24Z") (last_read_at) (subject (title . "src/Text/CSL/Parser.hs:66:40: No instance for (Default X.ParseSettings)") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/331") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/331") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/340032148") (subscription_url . "https://api.github.com/notifications/threads/340032148/subscription")) ((id . "339938524") (unread . t) (reason . "subscribed") (updated_at . "2018-05-29T05:45:53Z") (last_read_at . "2018-05-29T04:29:57Z") (subject (title . "Emacs 26.1 's formula has  no option to disapear natural title bars ") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/83") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/83") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/339938524") (subscription_url . "https://api.github.com/notifications/threads/339938524/subscription")) ((id . "308545199") (unread . t) (reason . "subscribed") (updated_at . "2018-05-29T00:18:15Z") (last_read_at) (subject (title . "inverse pandoc-citeproc to get back to markdown citations") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/323") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/392620958") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/308545199") (subscription_url . "https://api.github.com/notifications/threads/308545199/subscription")) ((id . "338913394") (unread . t) (reason . "subscribed") (updated_at . "2018-05-28T20:17:44Z") (last_read_at) (subject (title . "add --with-pdumper build option") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/79") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments/392597385") (type . "PullRequest")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/338913394") (subscription_url . "https://api.github.com/notifications/threads/338913394/subscription")) ((id . "330996445") (unread . t) (reason . "subscribed") (updated_at . "2018-05-28T19:53:59Z") (last_read_at) (subject (title . "V26.1 debugger hang - high CPU cycles") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/76") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/76") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/330996445") (subscription_url . "https://api.github.com/notifications/threads/330996445/subscription")) ((id . "337193372") (unread . t) (reason . "subscribed") (updated_at . "2018-05-28T19:51:06Z") (last_read_at) (subject (title . "Portable Dumper flag") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/77") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/77") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/337193372") (subscription_url . "https://api.github.com/notifications/threads/337193372/subscription")) ((id . "316723815") (unread . t) (reason . "subscribed") (updated_at . "2018-05-28T19:49:33Z") (last_read_at . "2018-05-28T16:08:05Z") (subject (title . "brew services stop doesn't work") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/72") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/72") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/316723815") (subscription_url . "https://api.github.com/notifications/threads/316723815/subscription")) ((id . "294486015") (unread . t) (reason . "subscribed") (updated_at . "2018-05-28T19:21:10Z") (last_read_at) (subject (title . "Known issue note about rust dependency and compile time") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/62") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/62") (type . "PullRequest")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/294486015") (subscription_url . "https://api.github.com/notifications/threads/294486015/subscription")) ((id . "193878895") (unread . t) (reason . "subscribed") (updated_at . "2018-05-28T19:20:08Z") (last_read_at) (subject (title . "Borderless feature") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/13") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/13") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/193878895") (subscription_url . "https://api.github.com/notifications/threads/193878895/subscription")) ((id . "218782194") (unread . t) (reason . "subscribed") (updated_at . "2018-05-28T19:19:40Z") (last_read_at) (subject (title . "Adding white title bar option for ns build") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/30") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/30") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/218782194") (subscription_url . "https://api.github.com/notifications/threads/218782194/subscription")) ((id . "274287963") (unread . t) (reason . "subscribed") (updated_at . "2018-05-28T18:30:35Z") (last_read_at) (subject (title . "Removing deprecated --with-natural-title-bar option.") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/54") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/54") (type . "PullRequest")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/274287963") (subscription_url . "https://api.github.com/notifications/threads/274287963/subscription")) ((id . "339581191") (unread . t) (reason . "subscribed") (updated_at . "2018-05-27T19:21:34Z") (last_read_at) (subject (title . "Make :wq do the right thing for org-src-buffers") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls/45") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls/45") (type . "PullRequest")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/339581191") (subscription_url . "https://api.github.com/notifications/threads/339581191/subscription")) ((id . "338745377") (unread . t) (reason . "subscribed") (updated_at . "2018-05-25T19:33:37Z") (last_read_at) (subject (title . "Starting Emacs from the command line with a file name doesn't open the file after setting initial-buffer-choice") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/69") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments/392158686") (type . "Issue")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/338745377") (subscription_url . "https://api.github.com/notifications/threads/338745377/subscription")) ((id . "339071272") (unread . t) (reason . "subscribed") (updated_at . "2018-05-25T07:55:57Z") (last_read_at) (subject (title . "add more icons options") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/80") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/80") (type . "PullRequest")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/339071272") (subscription_url . "https://api.github.com/notifications/threads/339071272/subscription")) ((id . "337357030") (unread . t) (reason . "subscribed") (updated_at . "2018-05-24T22:30:14Z") (last_read_at) (subject (title . "pdf-tools") (url . "https://api.github.com/repos/zamansky/using-emacs/commits/b71f825c437871858f1c6008bc78e6546b7cb92b") (latest_comment_url . "https://api.github.com/repos/zamansky/using-emacs/comments/29121649") (type . "Commit")) (repository (id . 58067297) (node_id . "MDEwOlJlcG9zaXRvcnk1ODA2NzI5Nw==") (name . "using-emacs") (full_name . "zamansky/using-emacs") (owner (login . "zamansky") (id . 636927) (node_id . "MDQ6VXNlcjYzNjkyNw==") (avatar_url . "https://avatars2.githubusercontent.com/u/636927?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zamansky") (html_url . "https://github.com/zamansky") (followers_url . "https://api.github.com/users/zamansky/followers") (following_url . "https://api.github.com/users/zamansky/following{/other_user}") (gists_url . "https://api.github.com/users/zamansky/gists{/gist_id}") (starred_url . "https://api.github.com/users/zamansky/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zamansky/subscriptions") (organizations_url . "https://api.github.com/users/zamansky/orgs") (repos_url . "https://api.github.com/users/zamansky/repos") (events_url . "https://api.github.com/users/zamansky/events{/privacy}") (received_events_url . "https://api.github.com/users/zamansky/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zamansky/using-emacs") (description) (fork) (url . "https://api.github.com/repos/zamansky/using-emacs") (forks_url . "https://api.github.com/repos/zamansky/using-emacs/forks") (keys_url . "https://api.github.com/repos/zamansky/using-emacs/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zamansky/using-emacs/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zamansky/using-emacs/teams") (hooks_url . "https://api.github.com/repos/zamansky/using-emacs/hooks") (issue_events_url . "https://api.github.com/repos/zamansky/using-emacs/issues/events{/number}") (events_url . "https://api.github.com/repos/zamansky/using-emacs/events") (assignees_url . "https://api.github.com/repos/zamansky/using-emacs/assignees{/user}") (branches_url . "https://api.github.com/repos/zamansky/using-emacs/branches{/branch}") (tags_url . "https://api.github.com/repos/zamansky/using-emacs/tags") (blobs_url . "https://api.github.com/repos/zamansky/using-emacs/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zamansky/using-emacs/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zamansky/using-emacs/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zamansky/using-emacs/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zamansky/using-emacs/statuses/{sha}") (languages_url . "https://api.github.com/repos/zamansky/using-emacs/languages") (stargazers_url . "https://api.github.com/repos/zamansky/using-emacs/stargazers") (contributors_url . "https://api.github.com/repos/zamansky/using-emacs/contributors") (subscribers_url . "https://api.github.com/repos/zamansky/using-emacs/subscribers") (subscription_url . "https://api.github.com/repos/zamansky/using-emacs/subscription") (commits_url . "https://api.github.com/repos/zamansky/using-emacs/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zamansky/using-emacs/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zamansky/using-emacs/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zamansky/using-emacs/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zamansky/using-emacs/contents/{+path}") (compare_url . "https://api.github.com/repos/zamansky/using-emacs/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zamansky/using-emacs/merges") (archive_url . "https://api.github.com/repos/zamansky/using-emacs/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zamansky/using-emacs/downloads") (issues_url . "https://api.github.com/repos/zamansky/using-emacs/issues{/number}") (pulls_url . "https://api.github.com/repos/zamansky/using-emacs/pulls{/number}") (milestones_url . "https://api.github.com/repos/zamansky/using-emacs/milestones{/number}") (notifications_url . "https://api.github.com/repos/zamansky/using-emacs/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zamansky/using-emacs/labels{/name}") (releases_url . "https://api.github.com/repos/zamansky/using-emacs/releases{/id}") (deployments_url . "https://api.github.com/repos/zamansky/using-emacs/deployments")) (url . "https://api.github.com/notifications/threads/337357030") (subscription_url . "https://api.github.com/notifications/threads/337357030/subscription")) ((id . "294878745") (unread . t) (reason . "subscribed") (updated_at . "2018-05-24T17:31:06Z") (last_read_at) (subject (title . "Compilation fails on fresh High Sierra install") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/63") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/63") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/294878745") (subscription_url . "https://api.github.com/notifications/threads/294878745/subscription")) ((id . "338666029") (unread . t) (reason . "subscribed") (updated_at . "2018-05-24T11:42:44Z") (last_read_at) (subject (title . "apply wait_reading_process_ouput patch") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls/78") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments/391684097") (type . "PullRequest")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/338666029") (subscription_url . "https://api.github.com/notifications/threads/338666029/subscription")) ((id . "337082516") (unread . t) (reason . "subscribed") (updated_at . "2018-05-20T18:17:31Z") (last_read_at) (subject (title . "Fix dashboard-setup-startup-hook") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls/68") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments/390500817") (type . "PullRequest")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/337082516") (subscription_url . "https://api.github.com/notifications/threads/337082516/subscription")) ((id . "56934867") (unread . t) (reason . "subscribed") (updated_at . "2018-05-18T07:21:44Z") (last_read_at) (subject (title . "citing a bibliographic entry that has two years (e.g., Laplace 1814/1995)") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/103") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/390118685") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/56934867") (subscription_url . "https://api.github.com/notifications/threads/56934867/subscription")) ((id . "296443061") (unread . t) (reason . "subscribed") (updated_at . "2018-05-16T23:36:08Z") (last_read_at) (subject (title . "add advice on `load-theme' to apply `circadian-enable-theme'") (url . "https://api.github.com/repos/guidoschmidt/circadian.el/pulls/12") (latest_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments/389698593") (type . "PullRequest")) (repository (id . 102570101) (node_id . "MDEwOlJlcG9zaXRvcnkxMDI1NzAxMDE=") (name . "circadian.el") (full_name . "guidoschmidt/circadian.el") (owner (login . "guidoschmidt") (id . 463136) (node_id . "MDQ6VXNlcjQ2MzEzNg==") (avatar_url . "https://avatars2.githubusercontent.com/u/463136?v=4") (gravatar_id . "") (url . "https://api.github.com/users/guidoschmidt") (html_url . "https://github.com/guidoschmidt") (followers_url . "https://api.github.com/users/guidoschmidt/followers") (following_url . "https://api.github.com/users/guidoschmidt/following{/other_user}") (gists_url . "https://api.github.com/users/guidoschmidt/gists{/gist_id}") (starred_url . "https://api.github.com/users/guidoschmidt/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/guidoschmidt/subscriptions") (organizations_url . "https://api.github.com/users/guidoschmidt/orgs") (repos_url . "https://api.github.com/users/guidoschmidt/repos") (events_url . "https://api.github.com/users/guidoschmidt/events{/privacy}") (received_events_url . "https://api.github.com/users/guidoschmidt/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/guidoschmidt/circadian.el") (description . "Theme-switching for Emacs based on daytime") (fork) (url . "https://api.github.com/repos/guidoschmidt/circadian.el") (forks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/forks") (keys_url . "https://api.github.com/repos/guidoschmidt/circadian.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/guidoschmidt/circadian.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/guidoschmidt/circadian.el/teams") (hooks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/hooks") (issue_events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/events{/number}") (events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/events") (assignees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/assignees{/user}") (branches_url . "https://api.github.com/repos/guidoschmidt/circadian.el/branches{/branch}") (tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/tags") (blobs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/guidoschmidt/circadian.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/guidoschmidt/circadian.el/languages") (stargazers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/stargazers") (contributors_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contributors") (subscribers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscribers") (subscription_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscription") (commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contents/{+path}") (compare_url . "https://api.github.com/repos/guidoschmidt/circadian.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/guidoschmidt/circadian.el/merges") (archive_url . "https://api.github.com/repos/guidoschmidt/circadian.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/guidoschmidt/circadian.el/downloads") (issues_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues{/number}") (pulls_url . "https://api.github.com/repos/guidoschmidt/circadian.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/guidoschmidt/circadian.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/guidoschmidt/circadian.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/guidoschmidt/circadian.el/labels{/name}") (releases_url . "https://api.github.com/repos/guidoschmidt/circadian.el/releases{/id}") (deployments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/deployments")) (url . "https://api.github.com/notifications/threads/296443061") (subscription_url . "https://api.github.com/notifications/threads/296443061/subscription")) ((id . "336094292") (unread . t) (reason . "subscribed") (updated_at . "2018-05-16T21:52:38Z") (last_read_at) (subject (title . "Use `enable-theme` in favor of `load-theme`") (url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/15") (latest_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/15") (type . "Issue")) (repository (id . 102570101) (node_id . "MDEwOlJlcG9zaXRvcnkxMDI1NzAxMDE=") (name . "circadian.el") (full_name . "guidoschmidt/circadian.el") (owner (login . "guidoschmidt") (id . 463136) (node_id . "MDQ6VXNlcjQ2MzEzNg==") (avatar_url . "https://avatars2.githubusercontent.com/u/463136?v=4") (gravatar_id . "") (url . "https://api.github.com/users/guidoschmidt") (html_url . "https://github.com/guidoschmidt") (followers_url . "https://api.github.com/users/guidoschmidt/followers") (following_url . "https://api.github.com/users/guidoschmidt/following{/other_user}") (gists_url . "https://api.github.com/users/guidoschmidt/gists{/gist_id}") (starred_url . "https://api.github.com/users/guidoschmidt/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/guidoschmidt/subscriptions") (organizations_url . "https://api.github.com/users/guidoschmidt/orgs") (repos_url . "https://api.github.com/users/guidoschmidt/repos") (events_url . "https://api.github.com/users/guidoschmidt/events{/privacy}") (received_events_url . "https://api.github.com/users/guidoschmidt/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/guidoschmidt/circadian.el") (description . "Theme-switching for Emacs based on daytime") (fork) (url . "https://api.github.com/repos/guidoschmidt/circadian.el") (forks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/forks") (keys_url . "https://api.github.com/repos/guidoschmidt/circadian.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/guidoschmidt/circadian.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/guidoschmidt/circadian.el/teams") (hooks_url . "https://api.github.com/repos/guidoschmidt/circadian.el/hooks") (issue_events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/events{/number}") (events_url . "https://api.github.com/repos/guidoschmidt/circadian.el/events") (assignees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/assignees{/user}") (branches_url . "https://api.github.com/repos/guidoschmidt/circadian.el/branches{/branch}") (tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/tags") (blobs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/guidoschmidt/circadian.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/guidoschmidt/circadian.el/languages") (stargazers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/stargazers") (contributors_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contributors") (subscribers_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscribers") (subscription_url . "https://api.github.com/repos/guidoschmidt/circadian.el/subscription") (commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/guidoschmidt/circadian.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/guidoschmidt/circadian.el/contents/{+path}") (compare_url . "https://api.github.com/repos/guidoschmidt/circadian.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/guidoschmidt/circadian.el/merges") (archive_url . "https://api.github.com/repos/guidoschmidt/circadian.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/guidoschmidt/circadian.el/downloads") (issues_url . "https://api.github.com/repos/guidoschmidt/circadian.el/issues{/number}") (pulls_url . "https://api.github.com/repos/guidoschmidt/circadian.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/guidoschmidt/circadian.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/guidoschmidt/circadian.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/guidoschmidt/circadian.el/labels{/name}") (releases_url . "https://api.github.com/repos/guidoschmidt/circadian.el/releases{/id}") (deployments_url . "https://api.github.com/repos/guidoschmidt/circadian.el/deployments")) (url . "https://api.github.com/notifications/threads/336094292") (subscription_url . "https://api.github.com/notifications/threads/336094292/subscription")) ((id . "334156343") (unread . t) (reason . "subscribed") (updated_at . "2018-05-15T19:40:25Z") (last_read_at) (subject (title . "Suggestion: Move configuration variables into Emacs customize framework") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/67") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments/389288698") (type . "Issue")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/334156343") (subscription_url . "https://api.github.com/notifications/threads/334156343/subscription")) ((id . "218793286") (unread . t) (reason . "subscribed") (updated_at . "2018-05-13T09:12:24Z") (last_read_at) (subject (title . "Fail to install without cocoa") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/31") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments/388612567") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/218793286") (subscription_url . "https://api.github.com/notifications/threads/218793286/subscription")) ((id . "299120629") (unread . t) (reason . "subscribed") (updated_at . "2018-05-12T22:19:30Z") (last_read_at) (subject (title . "Sorting bibliographies with special characters") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/320") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/388587291") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/299120629") (subscription_url . "https://api.github.com/notifications/threads/299120629/subscription")) ((id . "299309066") (unread . t) (reason . "subscribed") (updated_at . "2018-05-12T03:25:57Z") (last_read_at) (subject (title . "Error after install running org-wiki-index") (url . "https://api.github.com/repos/caiorss/org-wiki/issues/17") (latest_comment_url . "https://api.github.com/repos/caiorss/org-wiki/issues/comments/388526491") (type . "Issue")) (repository (id . 68140809) (node_id . "MDEwOlJlcG9zaXRvcnk2ODE0MDgwOQ==") (name . "org-wiki") (full_name . "caiorss/org-wiki") (owner (login . "caiorss") (id . 10691257) (node_id . "MDQ6VXNlcjEwNjkxMjU3") (avatar_url . "https://avatars3.githubusercontent.com/u/10691257?v=4") (gravatar_id . "") (url . "https://api.github.com/users/caiorss") (html_url . "https://github.com/caiorss") (followers_url . "https://api.github.com/users/caiorss/followers") (following_url . "https://api.github.com/users/caiorss/following{/other_user}") (gists_url . "https://api.github.com/users/caiorss/gists{/gist_id}") (starred_url . "https://api.github.com/users/caiorss/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/caiorss/subscriptions") (organizations_url . "https://api.github.com/users/caiorss/orgs") (repos_url . "https://api.github.com/users/caiorss/repos") (events_url . "https://api.github.com/users/caiorss/events{/privacy}") (received_events_url . "https://api.github.com/users/caiorss/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/caiorss/org-wiki") (description . "Wiki for Emacs org-mode built on top of Emacs org-mode.") (fork) (url . "https://api.github.com/repos/caiorss/org-wiki") (forks_url . "https://api.github.com/repos/caiorss/org-wiki/forks") (keys_url . "https://api.github.com/repos/caiorss/org-wiki/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/caiorss/org-wiki/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/caiorss/org-wiki/teams") (hooks_url . "https://api.github.com/repos/caiorss/org-wiki/hooks") (issue_events_url . "https://api.github.com/repos/caiorss/org-wiki/issues/events{/number}") (events_url . "https://api.github.com/repos/caiorss/org-wiki/events") (assignees_url . "https://api.github.com/repos/caiorss/org-wiki/assignees{/user}") (branches_url . "https://api.github.com/repos/caiorss/org-wiki/branches{/branch}") (tags_url . "https://api.github.com/repos/caiorss/org-wiki/tags") (blobs_url . "https://api.github.com/repos/caiorss/org-wiki/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/caiorss/org-wiki/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/caiorss/org-wiki/git/refs{/sha}") (trees_url . "https://api.github.com/repos/caiorss/org-wiki/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/caiorss/org-wiki/statuses/{sha}") (languages_url . "https://api.github.com/repos/caiorss/org-wiki/languages") (stargazers_url . "https://api.github.com/repos/caiorss/org-wiki/stargazers") (contributors_url . "https://api.github.com/repos/caiorss/org-wiki/contributors") (subscribers_url . "https://api.github.com/repos/caiorss/org-wiki/subscribers") (subscription_url . "https://api.github.com/repos/caiorss/org-wiki/subscription") (commits_url . "https://api.github.com/repos/caiorss/org-wiki/commits{/sha}") (git_commits_url . "https://api.github.com/repos/caiorss/org-wiki/git/commits{/sha}") (comments_url . "https://api.github.com/repos/caiorss/org-wiki/comments{/number}") (issue_comment_url . "https://api.github.com/repos/caiorss/org-wiki/issues/comments{/number}") (contents_url . "https://api.github.com/repos/caiorss/org-wiki/contents/{+path}") (compare_url . "https://api.github.com/repos/caiorss/org-wiki/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/caiorss/org-wiki/merges") (archive_url . "https://api.github.com/repos/caiorss/org-wiki/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/caiorss/org-wiki/downloads") (issues_url . "https://api.github.com/repos/caiorss/org-wiki/issues{/number}") (pulls_url . "https://api.github.com/repos/caiorss/org-wiki/pulls{/number}") (milestones_url . "https://api.github.com/repos/caiorss/org-wiki/milestones{/number}") (notifications_url . "https://api.github.com/repos/caiorss/org-wiki/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/caiorss/org-wiki/labels{/name}") (releases_url . "https://api.github.com/repos/caiorss/org-wiki/releases{/id}") (deployments_url . "https://api.github.com/repos/caiorss/org-wiki/deployments")) (url . "https://api.github.com/notifications/threads/299309066") (subscription_url . "https://api.github.com/notifications/threads/299309066/subscription")) ((id . "287213627") (unread . t) (reason . "subscribed") (updated_at . "2018-05-11T20:10:42Z") (last_read_at) (subject (title . "<f20> keypress registers as C-p") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/60") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/60") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/287213627") (subscription_url . "https://api.github.com/notifications/threads/287213627/subscription")) ((id . "334133210") (unread . t) (reason . "subscribed") (updated_at . "2018-05-10T22:44:59Z") (last_read_at) (subject (title . "Document how to set up with emacs daemon") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls/66") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls/66") (type . "PullRequest")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/334133210") (subscription_url . "https://api.github.com/notifications/threads/334133210/subscription")) ((id . "318292480") (unread . t) (reason . "subscribed") (updated_at . "2018-05-10T12:58:07Z") (last_read_at) (subject (title . "Different bibliography output to zotero using the same csl and .bib") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/327") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/388045659") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/318292480") (subscription_url . "https://api.github.com/notifications/threads/318292480/subscription")) ((id . "323239914") (unread . t) (reason . "subscribed") (updated_at . "2018-05-09T04:18:17Z") (last_read_at) (subject (title . "emacs binding") (url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/35") (latest_comment_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/35") (type . "Issue")) (repository (id . 94173064) (node_id . "MDEwOlJlcG9zaXRvcnk5NDE3MzA2NA==") (name . "nuage") (full_name . "mickael-kerjean/nuage") (owner (login . "mickael-kerjean") (id . 13233076) (node_id . "MDQ6VXNlcjEzMjMzMDc2") (avatar_url . "https://avatars1.githubusercontent.com/u/13233076?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mickael-kerjean") (html_url . "https://github.com/mickael-kerjean") (followers_url . "https://api.github.com/users/mickael-kerjean/followers") (following_url . "https://api.github.com/users/mickael-kerjean/following{/other_user}") (gists_url . "https://api.github.com/users/mickael-kerjean/gists{/gist_id}") (starred_url . "https://api.github.com/users/mickael-kerjean/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mickael-kerjean/subscriptions") (organizations_url . "https://api.github.com/users/mickael-kerjean/orgs") (repos_url . "https://api.github.com/users/mickael-kerjean/repos") (events_url . "https://api.github.com/users/mickael-kerjean/events{/privacy}") (received_events_url . "https://api.github.com/users/mickael-kerjean/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/mickael-kerjean/nuage") (description . "FTP, SFTP, WebDAV, Git, S3, Minio, Dropbox and Google Drive Client") (fork) (url . "https://api.github.com/repos/mickael-kerjean/nuage") (forks_url . "https://api.github.com/repos/mickael-kerjean/nuage/forks") (keys_url . "https://api.github.com/repos/mickael-kerjean/nuage/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mickael-kerjean/nuage/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mickael-kerjean/nuage/teams") (hooks_url . "https://api.github.com/repos/mickael-kerjean/nuage/hooks") (issue_events_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/events{/number}") (events_url . "https://api.github.com/repos/mickael-kerjean/nuage/events") (assignees_url . "https://api.github.com/repos/mickael-kerjean/nuage/assignees{/user}") (branches_url . "https://api.github.com/repos/mickael-kerjean/nuage/branches{/branch}") (tags_url . "https://api.github.com/repos/mickael-kerjean/nuage/tags") (blobs_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mickael-kerjean/nuage/statuses/{sha}") (languages_url . "https://api.github.com/repos/mickael-kerjean/nuage/languages") (stargazers_url . "https://api.github.com/repos/mickael-kerjean/nuage/stargazers") (contributors_url . "https://api.github.com/repos/mickael-kerjean/nuage/contributors") (subscribers_url . "https://api.github.com/repos/mickael-kerjean/nuage/subscribers") (subscription_url . "https://api.github.com/repos/mickael-kerjean/nuage/subscription") (commits_url . "https://api.github.com/repos/mickael-kerjean/nuage/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mickael-kerjean/nuage/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mickael-kerjean/nuage/contents/{+path}") (compare_url . "https://api.github.com/repos/mickael-kerjean/nuage/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mickael-kerjean/nuage/merges") (archive_url . "https://api.github.com/repos/mickael-kerjean/nuage/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mickael-kerjean/nuage/downloads") (issues_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues{/number}") (pulls_url . "https://api.github.com/repos/mickael-kerjean/nuage/pulls{/number}") (milestones_url . "https://api.github.com/repos/mickael-kerjean/nuage/milestones{/number}") (notifications_url . "https://api.github.com/repos/mickael-kerjean/nuage/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mickael-kerjean/nuage/labels{/name}") (releases_url . "https://api.github.com/repos/mickael-kerjean/nuage/releases{/id}") (deployments_url . "https://api.github.com/repos/mickael-kerjean/nuage/deployments")) (url . "https://api.github.com/notifications/threads/323239914") (subscription_url . "https://api.github.com/notifications/threads/323239914/subscription")) ((id . "325878201") (unread . t) (reason . "subscribed") (updated_at . "2018-05-09T04:18:05Z") (last_read_at) (subject (title . "emacs org mode") (url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/50") (latest_comment_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/50") (type . "Issue")) (repository (id . 94173064) (node_id . "MDEwOlJlcG9zaXRvcnk5NDE3MzA2NA==") (name . "nuage") (full_name . "mickael-kerjean/nuage") (owner (login . "mickael-kerjean") (id . 13233076) (node_id . "MDQ6VXNlcjEzMjMzMDc2") (avatar_url . "https://avatars1.githubusercontent.com/u/13233076?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mickael-kerjean") (html_url . "https://github.com/mickael-kerjean") (followers_url . "https://api.github.com/users/mickael-kerjean/followers") (following_url . "https://api.github.com/users/mickael-kerjean/following{/other_user}") (gists_url . "https://api.github.com/users/mickael-kerjean/gists{/gist_id}") (starred_url . "https://api.github.com/users/mickael-kerjean/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mickael-kerjean/subscriptions") (organizations_url . "https://api.github.com/users/mickael-kerjean/orgs") (repos_url . "https://api.github.com/users/mickael-kerjean/repos") (events_url . "https://api.github.com/users/mickael-kerjean/events{/privacy}") (received_events_url . "https://api.github.com/users/mickael-kerjean/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/mickael-kerjean/nuage") (description . "FTP, SFTP, WebDAV, Git, S3, Minio, Dropbox and Google Drive Client") (fork) (url . "https://api.github.com/repos/mickael-kerjean/nuage") (forks_url . "https://api.github.com/repos/mickael-kerjean/nuage/forks") (keys_url . "https://api.github.com/repos/mickael-kerjean/nuage/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mickael-kerjean/nuage/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mickael-kerjean/nuage/teams") (hooks_url . "https://api.github.com/repos/mickael-kerjean/nuage/hooks") (issue_events_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/events{/number}") (events_url . "https://api.github.com/repos/mickael-kerjean/nuage/events") (assignees_url . "https://api.github.com/repos/mickael-kerjean/nuage/assignees{/user}") (branches_url . "https://api.github.com/repos/mickael-kerjean/nuage/branches{/branch}") (tags_url . "https://api.github.com/repos/mickael-kerjean/nuage/tags") (blobs_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mickael-kerjean/nuage/statuses/{sha}") (languages_url . "https://api.github.com/repos/mickael-kerjean/nuage/languages") (stargazers_url . "https://api.github.com/repos/mickael-kerjean/nuage/stargazers") (contributors_url . "https://api.github.com/repos/mickael-kerjean/nuage/contributors") (subscribers_url . "https://api.github.com/repos/mickael-kerjean/nuage/subscribers") (subscription_url . "https://api.github.com/repos/mickael-kerjean/nuage/subscription") (commits_url . "https://api.github.com/repos/mickael-kerjean/nuage/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mickael-kerjean/nuage/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mickael-kerjean/nuage/contents/{+path}") (compare_url . "https://api.github.com/repos/mickael-kerjean/nuage/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mickael-kerjean/nuage/merges") (archive_url . "https://api.github.com/repos/mickael-kerjean/nuage/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mickael-kerjean/nuage/downloads") (issues_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues{/number}") (pulls_url . "https://api.github.com/repos/mickael-kerjean/nuage/pulls{/number}") (milestones_url . "https://api.github.com/repos/mickael-kerjean/nuage/milestones{/number}") (notifications_url . "https://api.github.com/repos/mickael-kerjean/nuage/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mickael-kerjean/nuage/labels{/name}") (releases_url . "https://api.github.com/repos/mickael-kerjean/nuage/releases{/id}") (deployments_url . "https://api.github.com/repos/mickael-kerjean/nuage/deployments")) (url . "https://api.github.com/notifications/threads/325878201") (subscription_url . "https://api.github.com/notifications/threads/325878201/subscription")) ((id . "332979583") (unread . t) (reason . "subscribed") (updated_at . "2018-05-09T23:38:08Z") (last_read_at) (subject (title . "SFTP: \"Unknown path\" error for any path") (url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/53") (latest_comment_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/53") (type . "Issue")) (repository (id . 94173064) (node_id . "MDEwOlJlcG9zaXRvcnk5NDE3MzA2NA==") (name . "nuage") (full_name . "mickael-kerjean/nuage") (owner (login . "mickael-kerjean") (id . 13233076) (node_id . "MDQ6VXNlcjEzMjMzMDc2") (avatar_url . "https://avatars1.githubusercontent.com/u/13233076?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mickael-kerjean") (html_url . "https://github.com/mickael-kerjean") (followers_url . "https://api.github.com/users/mickael-kerjean/followers") (following_url . "https://api.github.com/users/mickael-kerjean/following{/other_user}") (gists_url . "https://api.github.com/users/mickael-kerjean/gists{/gist_id}") (starred_url . "https://api.github.com/users/mickael-kerjean/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mickael-kerjean/subscriptions") (organizations_url . "https://api.github.com/users/mickael-kerjean/orgs") (repos_url . "https://api.github.com/users/mickael-kerjean/repos") (events_url . "https://api.github.com/users/mickael-kerjean/events{/privacy}") (received_events_url . "https://api.github.com/users/mickael-kerjean/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/mickael-kerjean/nuage") (description . "FTP, SFTP, WebDAV, Git, S3, Minio, Dropbox and Google Drive Client") (fork) (url . "https://api.github.com/repos/mickael-kerjean/nuage") (forks_url . "https://api.github.com/repos/mickael-kerjean/nuage/forks") (keys_url . "https://api.github.com/repos/mickael-kerjean/nuage/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mickael-kerjean/nuage/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mickael-kerjean/nuage/teams") (hooks_url . "https://api.github.com/repos/mickael-kerjean/nuage/hooks") (issue_events_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/events{/number}") (events_url . "https://api.github.com/repos/mickael-kerjean/nuage/events") (assignees_url . "https://api.github.com/repos/mickael-kerjean/nuage/assignees{/user}") (branches_url . "https://api.github.com/repos/mickael-kerjean/nuage/branches{/branch}") (tags_url . "https://api.github.com/repos/mickael-kerjean/nuage/tags") (blobs_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mickael-kerjean/nuage/statuses/{sha}") (languages_url . "https://api.github.com/repos/mickael-kerjean/nuage/languages") (stargazers_url . "https://api.github.com/repos/mickael-kerjean/nuage/stargazers") (contributors_url . "https://api.github.com/repos/mickael-kerjean/nuage/contributors") (subscribers_url . "https://api.github.com/repos/mickael-kerjean/nuage/subscribers") (subscription_url . "https://api.github.com/repos/mickael-kerjean/nuage/subscription") (commits_url . "https://api.github.com/repos/mickael-kerjean/nuage/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mickael-kerjean/nuage/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mickael-kerjean/nuage/contents/{+path}") (compare_url . "https://api.github.com/repos/mickael-kerjean/nuage/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mickael-kerjean/nuage/merges") (archive_url . "https://api.github.com/repos/mickael-kerjean/nuage/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mickael-kerjean/nuage/downloads") (issues_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues{/number}") (pulls_url . "https://api.github.com/repos/mickael-kerjean/nuage/pulls{/number}") (milestones_url . "https://api.github.com/repos/mickael-kerjean/nuage/milestones{/number}") (notifications_url . "https://api.github.com/repos/mickael-kerjean/nuage/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mickael-kerjean/nuage/labels{/name}") (releases_url . "https://api.github.com/repos/mickael-kerjean/nuage/releases{/id}") (deployments_url . "https://api.github.com/repos/mickael-kerjean/nuage/deployments")) (url . "https://api.github.com/notifications/threads/332979583") (subscription_url . "https://api.github.com/notifications/threads/332979583/subscription")) ((id . "333189621") (unread . t) (reason . "subscribed") (updated_at . "2018-05-09T23:53:34Z") (last_read_at) (subject (title . "https://nuage.kerjean.me leads to a redirect loop") (url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/55") (latest_comment_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/comments/387909229") (type . "Issue")) (repository (id . 94173064) (node_id . "MDEwOlJlcG9zaXRvcnk5NDE3MzA2NA==") (name . "nuage") (full_name . "mickael-kerjean/nuage") (owner (login . "mickael-kerjean") (id . 13233076) (node_id . "MDQ6VXNlcjEzMjMzMDc2") (avatar_url . "https://avatars1.githubusercontent.com/u/13233076?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mickael-kerjean") (html_url . "https://github.com/mickael-kerjean") (followers_url . "https://api.github.com/users/mickael-kerjean/followers") (following_url . "https://api.github.com/users/mickael-kerjean/following{/other_user}") (gists_url . "https://api.github.com/users/mickael-kerjean/gists{/gist_id}") (starred_url . "https://api.github.com/users/mickael-kerjean/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mickael-kerjean/subscriptions") (organizations_url . "https://api.github.com/users/mickael-kerjean/orgs") (repos_url . "https://api.github.com/users/mickael-kerjean/repos") (events_url . "https://api.github.com/users/mickael-kerjean/events{/privacy}") (received_events_url . "https://api.github.com/users/mickael-kerjean/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/mickael-kerjean/nuage") (description . "FTP, SFTP, WebDAV, Git, S3, Minio, Dropbox and Google Drive Client") (fork) (url . "https://api.github.com/repos/mickael-kerjean/nuage") (forks_url . "https://api.github.com/repos/mickael-kerjean/nuage/forks") (keys_url . "https://api.github.com/repos/mickael-kerjean/nuage/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mickael-kerjean/nuage/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mickael-kerjean/nuage/teams") (hooks_url . "https://api.github.com/repos/mickael-kerjean/nuage/hooks") (issue_events_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/events{/number}") (events_url . "https://api.github.com/repos/mickael-kerjean/nuage/events") (assignees_url . "https://api.github.com/repos/mickael-kerjean/nuage/assignees{/user}") (branches_url . "https://api.github.com/repos/mickael-kerjean/nuage/branches{/branch}") (tags_url . "https://api.github.com/repos/mickael-kerjean/nuage/tags") (blobs_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mickael-kerjean/nuage/statuses/{sha}") (languages_url . "https://api.github.com/repos/mickael-kerjean/nuage/languages") (stargazers_url . "https://api.github.com/repos/mickael-kerjean/nuage/stargazers") (contributors_url . "https://api.github.com/repos/mickael-kerjean/nuage/contributors") (subscribers_url . "https://api.github.com/repos/mickael-kerjean/nuage/subscribers") (subscription_url . "https://api.github.com/repos/mickael-kerjean/nuage/subscription") (commits_url . "https://api.github.com/repos/mickael-kerjean/nuage/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mickael-kerjean/nuage/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mickael-kerjean/nuage/contents/{+path}") (compare_url . "https://api.github.com/repos/mickael-kerjean/nuage/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mickael-kerjean/nuage/merges") (archive_url . "https://api.github.com/repos/mickael-kerjean/nuage/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mickael-kerjean/nuage/downloads") (issues_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues{/number}") (pulls_url . "https://api.github.com/repos/mickael-kerjean/nuage/pulls{/number}") (milestones_url . "https://api.github.com/repos/mickael-kerjean/nuage/milestones{/number}") (notifications_url . "https://api.github.com/repos/mickael-kerjean/nuage/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mickael-kerjean/nuage/labels{/name}") (releases_url . "https://api.github.com/repos/mickael-kerjean/nuage/releases{/id}") (deployments_url . "https://api.github.com/repos/mickael-kerjean/nuage/deployments")) (url . "https://api.github.com/notifications/threads/333189621") (subscription_url . "https://api.github.com/notifications/threads/333189621/subscription")) ((id . "333118705") (unread . t) (reason . "subscribed") (updated_at . "2018-05-09T02:58:09Z") (last_read_at) (subject (title . "Fix \"lambda\" typo in README") (url . "https://api.github.com/repos/mickael-kerjean/nuage/pulls/54") (latest_comment_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/comments/387605077") (type . "PullRequest")) (repository (id . 94173064) (node_id . "MDEwOlJlcG9zaXRvcnk5NDE3MzA2NA==") (name . "nuage") (full_name . "mickael-kerjean/nuage") (owner (login . "mickael-kerjean") (id . 13233076) (node_id . "MDQ6VXNlcjEzMjMzMDc2") (avatar_url . "https://avatars1.githubusercontent.com/u/13233076?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mickael-kerjean") (html_url . "https://github.com/mickael-kerjean") (followers_url . "https://api.github.com/users/mickael-kerjean/followers") (following_url . "https://api.github.com/users/mickael-kerjean/following{/other_user}") (gists_url . "https://api.github.com/users/mickael-kerjean/gists{/gist_id}") (starred_url . "https://api.github.com/users/mickael-kerjean/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mickael-kerjean/subscriptions") (organizations_url . "https://api.github.com/users/mickael-kerjean/orgs") (repos_url . "https://api.github.com/users/mickael-kerjean/repos") (events_url . "https://api.github.com/users/mickael-kerjean/events{/privacy}") (received_events_url . "https://api.github.com/users/mickael-kerjean/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/mickael-kerjean/nuage") (description . "FTP, SFTP, WebDAV, Git, S3, Minio, Dropbox and Google Drive Client") (fork) (url . "https://api.github.com/repos/mickael-kerjean/nuage") (forks_url . "https://api.github.com/repos/mickael-kerjean/nuage/forks") (keys_url . "https://api.github.com/repos/mickael-kerjean/nuage/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mickael-kerjean/nuage/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mickael-kerjean/nuage/teams") (hooks_url . "https://api.github.com/repos/mickael-kerjean/nuage/hooks") (issue_events_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/events{/number}") (events_url . "https://api.github.com/repos/mickael-kerjean/nuage/events") (assignees_url . "https://api.github.com/repos/mickael-kerjean/nuage/assignees{/user}") (branches_url . "https://api.github.com/repos/mickael-kerjean/nuage/branches{/branch}") (tags_url . "https://api.github.com/repos/mickael-kerjean/nuage/tags") (blobs_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mickael-kerjean/nuage/statuses/{sha}") (languages_url . "https://api.github.com/repos/mickael-kerjean/nuage/languages") (stargazers_url . "https://api.github.com/repos/mickael-kerjean/nuage/stargazers") (contributors_url . "https://api.github.com/repos/mickael-kerjean/nuage/contributors") (subscribers_url . "https://api.github.com/repos/mickael-kerjean/nuage/subscribers") (subscription_url . "https://api.github.com/repos/mickael-kerjean/nuage/subscription") (commits_url . "https://api.github.com/repos/mickael-kerjean/nuage/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mickael-kerjean/nuage/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mickael-kerjean/nuage/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mickael-kerjean/nuage/contents/{+path}") (compare_url . "https://api.github.com/repos/mickael-kerjean/nuage/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mickael-kerjean/nuage/merges") (archive_url . "https://api.github.com/repos/mickael-kerjean/nuage/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mickael-kerjean/nuage/downloads") (issues_url . "https://api.github.com/repos/mickael-kerjean/nuage/issues{/number}") (pulls_url . "https://api.github.com/repos/mickael-kerjean/nuage/pulls{/number}") (milestones_url . "https://api.github.com/repos/mickael-kerjean/nuage/milestones{/number}") (notifications_url . "https://api.github.com/repos/mickael-kerjean/nuage/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mickael-kerjean/nuage/labels{/name}") (releases_url . "https://api.github.com/repos/mickael-kerjean/nuage/releases{/id}") (deployments_url . "https://api.github.com/repos/mickael-kerjean/nuage/deployments")) (url . "https://api.github.com/notifications/threads/333118705") (subscription_url . "https://api.github.com/notifications/threads/333118705/subscription")) ((id . "333087468") (unread . t) (reason . "subscribed") (updated_at . "2018-05-08T23:56:24Z") (last_read_at) (subject (title . "'accessed' date field from bibtex not supported?") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/330") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/387578226") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/333087468") (subscription_url . "https://api.github.com/notifications/threads/333087468/subscription")) ((id . "333143736") (unread . t) (reason . "subscribed") (updated_at . "2018-05-08T17:17:26Z") (last_read_at) (subject (title . "Reclassify Damien Cassou's Config") (url . "https://api.github.com/repos/caisah/emacs.dz/issues/30") (latest_comment_url . "https://api.github.com/repos/caisah/emacs.dz/issues/30") (type . "Issue")) (repository (id . 71278156) (node_id . "MDEwOlJlcG9zaXRvcnk3MTI3ODE1Ng==") (name . "emacs.dz") (full_name . "caisah/emacs.dz") (owner (login . "caisah") (id . 1536049) (node_id . "MDQ6VXNlcjE1MzYwNDk=") (avatar_url . "https://avatars2.githubusercontent.com/u/1536049?v=4") (gravatar_id . "") (url . "https://api.github.com/users/caisah") (html_url . "https://github.com/caisah") (followers_url . "https://api.github.com/users/caisah/followers") (following_url . "https://api.github.com/users/caisah/following{/other_user}") (gists_url . "https://api.github.com/users/caisah/gists{/gist_id}") (starred_url . "https://api.github.com/users/caisah/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/caisah/subscriptions") (organizations_url . "https://api.github.com/users/caisah/orgs") (repos_url . "https://api.github.com/users/caisah/repos") (events_url . "https://api.github.com/users/caisah/events{/privacy}") (received_events_url . "https://api.github.com/users/caisah/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/caisah/emacs.dz") (description . "Awesome emacs config files") (fork) (url . "https://api.github.com/repos/caisah/emacs.dz") (forks_url . "https://api.github.com/repos/caisah/emacs.dz/forks") (keys_url . "https://api.github.com/repos/caisah/emacs.dz/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/caisah/emacs.dz/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/caisah/emacs.dz/teams") (hooks_url . "https://api.github.com/repos/caisah/emacs.dz/hooks") (issue_events_url . "https://api.github.com/repos/caisah/emacs.dz/issues/events{/number}") (events_url . "https://api.github.com/repos/caisah/emacs.dz/events") (assignees_url . "https://api.github.com/repos/caisah/emacs.dz/assignees{/user}") (branches_url . "https://api.github.com/repos/caisah/emacs.dz/branches{/branch}") (tags_url . "https://api.github.com/repos/caisah/emacs.dz/tags") (blobs_url . "https://api.github.com/repos/caisah/emacs.dz/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/caisah/emacs.dz/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/caisah/emacs.dz/git/refs{/sha}") (trees_url . "https://api.github.com/repos/caisah/emacs.dz/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/caisah/emacs.dz/statuses/{sha}") (languages_url . "https://api.github.com/repos/caisah/emacs.dz/languages") (stargazers_url . "https://api.github.com/repos/caisah/emacs.dz/stargazers") (contributors_url . "https://api.github.com/repos/caisah/emacs.dz/contributors") (subscribers_url . "https://api.github.com/repos/caisah/emacs.dz/subscribers") (subscription_url . "https://api.github.com/repos/caisah/emacs.dz/subscription") (commits_url . "https://api.github.com/repos/caisah/emacs.dz/commits{/sha}") (git_commits_url . "https://api.github.com/repos/caisah/emacs.dz/git/commits{/sha}") (comments_url . "https://api.github.com/repos/caisah/emacs.dz/comments{/number}") (issue_comment_url . "https://api.github.com/repos/caisah/emacs.dz/issues/comments{/number}") (contents_url . "https://api.github.com/repos/caisah/emacs.dz/contents/{+path}") (compare_url . "https://api.github.com/repos/caisah/emacs.dz/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/caisah/emacs.dz/merges") (archive_url . "https://api.github.com/repos/caisah/emacs.dz/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/caisah/emacs.dz/downloads") (issues_url . "https://api.github.com/repos/caisah/emacs.dz/issues{/number}") (pulls_url . "https://api.github.com/repos/caisah/emacs.dz/pulls{/number}") (milestones_url . "https://api.github.com/repos/caisah/emacs.dz/milestones{/number}") (notifications_url . "https://api.github.com/repos/caisah/emacs.dz/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/caisah/emacs.dz/labels{/name}") (releases_url . "https://api.github.com/repos/caisah/emacs.dz/releases{/id}") (deployments_url . "https://api.github.com/repos/caisah/emacs.dz/deployments")) (url . "https://api.github.com/notifications/threads/333143736") (subscription_url . "https://api.github.com/notifications/threads/333143736/subscription")) ((id . "152761952") (unread . t) (reason . "subscribed") (updated_at . "2018-05-07T07:47:53Z") (last_read_at) (subject (title . "Please add license information to allow reuse") (url . "https://api.github.com/repos/noctuid/evil-guide/issues/1") (latest_comment_url . "https://api.github.com/repos/noctuid/evil-guide/issues/comments/386986670") (type . "Issue")) (repository (id . 59619085) (node_id . "MDEwOlJlcG9zaXRvcnk1OTYxOTA4NQ==") (name . "evil-guide") (full_name . "noctuid/evil-guide") (owner (login . "noctuid") (id . 4250696) (node_id . "MDQ6VXNlcjQyNTA2OTY=") (avatar_url . "https://avatars1.githubusercontent.com/u/4250696?v=4") (gravatar_id . "") (url . "https://api.github.com/users/noctuid") (html_url . "https://github.com/noctuid") (followers_url . "https://api.github.com/users/noctuid/followers") (following_url . "https://api.github.com/users/noctuid/following{/other_user}") (gists_url . "https://api.github.com/users/noctuid/gists{/gist_id}") (starred_url . "https://api.github.com/users/noctuid/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/noctuid/subscriptions") (organizations_url . "https://api.github.com/users/noctuid/orgs") (repos_url . "https://api.github.com/users/noctuid/repos") (events_url . "https://api.github.com/users/noctuid/events{/privacy}") (received_events_url . "https://api.github.com/users/noctuid/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/noctuid/evil-guide") (description . "Draft of a guide for using emacs with evil") (fork) (url . "https://api.github.com/repos/noctuid/evil-guide") (forks_url . "https://api.github.com/repos/noctuid/evil-guide/forks") (keys_url . "https://api.github.com/repos/noctuid/evil-guide/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/noctuid/evil-guide/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/noctuid/evil-guide/teams") (hooks_url . "https://api.github.com/repos/noctuid/evil-guide/hooks") (issue_events_url . "https://api.github.com/repos/noctuid/evil-guide/issues/events{/number}") (events_url . "https://api.github.com/repos/noctuid/evil-guide/events") (assignees_url . "https://api.github.com/repos/noctuid/evil-guide/assignees{/user}") (branches_url . "https://api.github.com/repos/noctuid/evil-guide/branches{/branch}") (tags_url . "https://api.github.com/repos/noctuid/evil-guide/tags") (blobs_url . "https://api.github.com/repos/noctuid/evil-guide/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/noctuid/evil-guide/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/noctuid/evil-guide/git/refs{/sha}") (trees_url . "https://api.github.com/repos/noctuid/evil-guide/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/noctuid/evil-guide/statuses/{sha}") (languages_url . "https://api.github.com/repos/noctuid/evil-guide/languages") (stargazers_url . "https://api.github.com/repos/noctuid/evil-guide/stargazers") (contributors_url . "https://api.github.com/repos/noctuid/evil-guide/contributors") (subscribers_url . "https://api.github.com/repos/noctuid/evil-guide/subscribers") (subscription_url . "https://api.github.com/repos/noctuid/evil-guide/subscription") (commits_url . "https://api.github.com/repos/noctuid/evil-guide/commits{/sha}") (git_commits_url . "https://api.github.com/repos/noctuid/evil-guide/git/commits{/sha}") (comments_url . "https://api.github.com/repos/noctuid/evil-guide/comments{/number}") (issue_comment_url . "https://api.github.com/repos/noctuid/evil-guide/issues/comments{/number}") (contents_url . "https://api.github.com/repos/noctuid/evil-guide/contents/{+path}") (compare_url . "https://api.github.com/repos/noctuid/evil-guide/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/noctuid/evil-guide/merges") (archive_url . "https://api.github.com/repos/noctuid/evil-guide/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/noctuid/evil-guide/downloads") (issues_url . "https://api.github.com/repos/noctuid/evil-guide/issues{/number}") (pulls_url . "https://api.github.com/repos/noctuid/evil-guide/pulls{/number}") (milestones_url . "https://api.github.com/repos/noctuid/evil-guide/milestones{/number}") (notifications_url . "https://api.github.com/repos/noctuid/evil-guide/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/noctuid/evil-guide/labels{/name}") (releases_url . "https://api.github.com/repos/noctuid/evil-guide/releases{/id}") (deployments_url . "https://api.github.com/repos/noctuid/evil-guide/deployments")) (url . "https://api.github.com/notifications/threads/152761952") (subscription_url . "https://api.github.com/notifications/threads/152761952/subscription")) ((id . "332540921") (unread . t) (reason . "subscribed") (updated_at . "2018-05-07T07:47:21Z") (last_read_at) (subject (title . "Installation issue when using Emacs Prelude") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/44") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/44") (type . "Issue")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/332540921") (subscription_url . "https://api.github.com/notifications/threads/332540921/subscription")) ((id . "332365798") (unread . t) (reason . "subscribed") (updated_at . "2018-05-07T06:40:09Z") (last_read_at) (subject (title . "[Question] Why all-the-icons-icon-for-mode create idle timers?") (url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/113") (latest_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments/386972047") (type . "Issue")) (repository (id . 60958378) (node_id . "MDEwOlJlcG9zaXRvcnk2MDk1ODM3OA==") (name . "all-the-icons.el") (full_name . "domtronn/all-the-icons.el") (owner (login . "domtronn") (id . 5881414) (node_id . "MDQ6VXNlcjU4ODE0MTQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/5881414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/domtronn") (html_url . "https://github.com/domtronn") (followers_url . "https://api.github.com/users/domtronn/followers") (following_url . "https://api.github.com/users/domtronn/following{/other_user}") (gists_url . "https://api.github.com/users/domtronn/gists{/gist_id}") (starred_url . "https://api.github.com/users/domtronn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/domtronn/subscriptions") (organizations_url . "https://api.github.com/users/domtronn/orgs") (repos_url . "https://api.github.com/users/domtronn/repos") (events_url . "https://api.github.com/users/domtronn/events{/privacy}") (received_events_url . "https://api.github.com/users/domtronn/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/domtronn/all-the-icons.el") (description . "A utility package to collect various Icon Fonts and propertize them within Emacs.") (fork) (url . "https://api.github.com/repos/domtronn/all-the-icons.el") (forks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/forks") (keys_url . "https://api.github.com/repos/domtronn/all-the-icons.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/domtronn/all-the-icons.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/domtronn/all-the-icons.el/teams") (hooks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/hooks") (issue_events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/events{/number}") (events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/events") (assignees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/assignees{/user}") (branches_url . "https://api.github.com/repos/domtronn/all-the-icons.el/branches{/branch}") (tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/tags") (blobs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/domtronn/all-the-icons.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/domtronn/all-the-icons.el/languages") (stargazers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/stargazers") (contributors_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contributors") (subscribers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscribers") (subscription_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscription") (commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contents/{+path}") (compare_url . "https://api.github.com/repos/domtronn/all-the-icons.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/domtronn/all-the-icons.el/merges") (archive_url . "https://api.github.com/repos/domtronn/all-the-icons.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/domtronn/all-the-icons.el/downloads") (issues_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues{/number}") (pulls_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/domtronn/all-the-icons.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/domtronn/all-the-icons.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/domtronn/all-the-icons.el/labels{/name}") (releases_url . "https://api.github.com/repos/domtronn/all-the-icons.el/releases{/id}") (deployments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/deployments")) (url . "https://api.github.com/notifications/threads/332365798") (subscription_url . "https://api.github.com/notifications/threads/332365798/subscription")) ((id . "251803185") (unread . t) (reason . "subscribed") (updated_at . "2018-05-05T19:22:07Z") (last_read_at) (subject (title . "Using hydra for leader key") (url . "https://api.github.com/repos/noctuid/evil-guide/pulls/8") (latest_comment_url . "https://api.github.com/repos/noctuid/evil-guide/pulls/8") (type . "PullRequest")) (repository (id . 59619085) (node_id . "MDEwOlJlcG9zaXRvcnk1OTYxOTA4NQ==") (name . "evil-guide") (full_name . "noctuid/evil-guide") (owner (login . "noctuid") (id . 4250696) (node_id . "MDQ6VXNlcjQyNTA2OTY=") (avatar_url . "https://avatars1.githubusercontent.com/u/4250696?v=4") (gravatar_id . "") (url . "https://api.github.com/users/noctuid") (html_url . "https://github.com/noctuid") (followers_url . "https://api.github.com/users/noctuid/followers") (following_url . "https://api.github.com/users/noctuid/following{/other_user}") (gists_url . "https://api.github.com/users/noctuid/gists{/gist_id}") (starred_url . "https://api.github.com/users/noctuid/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/noctuid/subscriptions") (organizations_url . "https://api.github.com/users/noctuid/orgs") (repos_url . "https://api.github.com/users/noctuid/repos") (events_url . "https://api.github.com/users/noctuid/events{/privacy}") (received_events_url . "https://api.github.com/users/noctuid/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/noctuid/evil-guide") (description . "Draft of a guide for using emacs with evil") (fork) (url . "https://api.github.com/repos/noctuid/evil-guide") (forks_url . "https://api.github.com/repos/noctuid/evil-guide/forks") (keys_url . "https://api.github.com/repos/noctuid/evil-guide/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/noctuid/evil-guide/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/noctuid/evil-guide/teams") (hooks_url . "https://api.github.com/repos/noctuid/evil-guide/hooks") (issue_events_url . "https://api.github.com/repos/noctuid/evil-guide/issues/events{/number}") (events_url . "https://api.github.com/repos/noctuid/evil-guide/events") (assignees_url . "https://api.github.com/repos/noctuid/evil-guide/assignees{/user}") (branches_url . "https://api.github.com/repos/noctuid/evil-guide/branches{/branch}") (tags_url . "https://api.github.com/repos/noctuid/evil-guide/tags") (blobs_url . "https://api.github.com/repos/noctuid/evil-guide/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/noctuid/evil-guide/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/noctuid/evil-guide/git/refs{/sha}") (trees_url . "https://api.github.com/repos/noctuid/evil-guide/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/noctuid/evil-guide/statuses/{sha}") (languages_url . "https://api.github.com/repos/noctuid/evil-guide/languages") (stargazers_url . "https://api.github.com/repos/noctuid/evil-guide/stargazers") (contributors_url . "https://api.github.com/repos/noctuid/evil-guide/contributors") (subscribers_url . "https://api.github.com/repos/noctuid/evil-guide/subscribers") (subscription_url . "https://api.github.com/repos/noctuid/evil-guide/subscription") (commits_url . "https://api.github.com/repos/noctuid/evil-guide/commits{/sha}") (git_commits_url . "https://api.github.com/repos/noctuid/evil-guide/git/commits{/sha}") (comments_url . "https://api.github.com/repos/noctuid/evil-guide/comments{/number}") (issue_comment_url . "https://api.github.com/repos/noctuid/evil-guide/issues/comments{/number}") (contents_url . "https://api.github.com/repos/noctuid/evil-guide/contents/{+path}") (compare_url . "https://api.github.com/repos/noctuid/evil-guide/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/noctuid/evil-guide/merges") (archive_url . "https://api.github.com/repos/noctuid/evil-guide/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/noctuid/evil-guide/downloads") (issues_url . "https://api.github.com/repos/noctuid/evil-guide/issues{/number}") (pulls_url . "https://api.github.com/repos/noctuid/evil-guide/pulls{/number}") (milestones_url . "https://api.github.com/repos/noctuid/evil-guide/milestones{/number}") (notifications_url . "https://api.github.com/repos/noctuid/evil-guide/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/noctuid/evil-guide/labels{/name}") (releases_url . "https://api.github.com/repos/noctuid/evil-guide/releases{/id}") (deployments_url . "https://api.github.com/repos/noctuid/evil-guide/deployments")) (url . "https://api.github.com/notifications/threads/251803185") (subscription_url . "https://api.github.com/notifications/threads/251803185/subscription")) ((id . "330820471") (unread . t) (reason . "subscribed") (updated_at . "2018-05-03T13:56:21Z") (last_read_at) (subject (title . "Gotta rebuild emacs-plus bottle and bump version again because some library got updated") (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/75") (latest_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/75") (type . "Issue")) (repository (id . 55288882) (node_id . "MDEwOlJlcG9zaXRvcnk1NTI4ODg4Mg==") (name . "homebrew-emacs-plus") (full_name . "d12frosted/homebrew-emacs-plus") (owner (login . "d12frosted") (id . 6507913) (node_id . "MDQ6VXNlcjY1MDc5MTM=") (avatar_url . "https://avatars3.githubusercontent.com/u/6507913?v=4") (gravatar_id . "") (url . "https://api.github.com/users/d12frosted") (html_url . "https://github.com/d12frosted") (followers_url . "https://api.github.com/users/d12frosted/followers") (following_url . "https://api.github.com/users/d12frosted/following{/other_user}") (gists_url . "https://api.github.com/users/d12frosted/gists{/gist_id}") (starred_url . "https://api.github.com/users/d12frosted/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/d12frosted/subscriptions") (organizations_url . "https://api.github.com/users/d12frosted/orgs") (repos_url . "https://api.github.com/users/d12frosted/repos") (events_url . "https://api.github.com/users/d12frosted/events{/privacy}") (received_events_url . "https://api.github.com/users/d12frosted/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/d12frosted/homebrew-emacs-plus") (description . "Emacs Plus formulae for the Homebrew package manager") (fork) (url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus") (forks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/forks") (keys_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/teams") (hooks_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/hooks") (issue_events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/events{/number}") (events_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/events") (assignees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/assignees{/user}") (branches_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/branches{/branch}") (tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/tags") (blobs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/refs{/sha}") (trees_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/statuses/{sha}") (languages_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/languages") (stargazers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/stargazers") (contributors_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contributors") (subscribers_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscribers") (subscription_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/subscription") (commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/commits{/sha}") (git_commits_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/git/commits{/sha}") (comments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/comments{/number}") (issue_comment_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues/comments{/number}") (contents_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/contents/{+path}") (compare_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/merges") (archive_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/downloads") (issues_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/issues{/number}") (pulls_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/pulls{/number}") (milestones_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/milestones{/number}") (notifications_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/labels{/name}") (releases_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/releases{/id}") (deployments_url . "https://api.github.com/repos/d12frosted/homebrew-emacs-plus/deployments")) (url . "https://api.github.com/notifications/threads/330820471") (subscription_url . "https://api.github.com/notifications/threads/330820471/subscription")) ((id . "178933575") (unread . t) (reason . "subscribed") (updated_at . "2018-04-30T16:46:24Z") (last_read_at) (subject (title . "Add support for BibLaTeX extended name format") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/266") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/385457418") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/178933575") (subscription_url . "https://api.github.com/notifications/threads/178933575/subscription")) ((id . "330501551") (unread . t) (reason . "subscribed") (updated_at . "2018-04-30T15:26:14Z") (last_read_at) (subject (title . "Wrong contributors suffix in inline citations") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/329") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/329") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/330501551") (subscription_url . "https://api.github.com/notifications/threads/330501551/subscription")) ((id . "320365900") (unread . t) (reason . "subscribed") (updated_at . "2018-04-29T15:19:50Z") (last_read_at) (subject (title . "add purescript-mode") (url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls/112") (latest_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments/385258755") (type . "PullRequest")) (repository (id . 60958378) (node_id . "MDEwOlJlcG9zaXRvcnk2MDk1ODM3OA==") (name . "all-the-icons.el") (full_name . "domtronn/all-the-icons.el") (owner (login . "domtronn") (id . 5881414) (node_id . "MDQ6VXNlcjU4ODE0MTQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/5881414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/domtronn") (html_url . "https://github.com/domtronn") (followers_url . "https://api.github.com/users/domtronn/followers") (following_url . "https://api.github.com/users/domtronn/following{/other_user}") (gists_url . "https://api.github.com/users/domtronn/gists{/gist_id}") (starred_url . "https://api.github.com/users/domtronn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/domtronn/subscriptions") (organizations_url . "https://api.github.com/users/domtronn/orgs") (repos_url . "https://api.github.com/users/domtronn/repos") (events_url . "https://api.github.com/users/domtronn/events{/privacy}") (received_events_url . "https://api.github.com/users/domtronn/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/domtronn/all-the-icons.el") (description . "A utility package to collect various Icon Fonts and propertize them within Emacs.") (fork) (url . "https://api.github.com/repos/domtronn/all-the-icons.el") (forks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/forks") (keys_url . "https://api.github.com/repos/domtronn/all-the-icons.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/domtronn/all-the-icons.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/domtronn/all-the-icons.el/teams") (hooks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/hooks") (issue_events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/events{/number}") (events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/events") (assignees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/assignees{/user}") (branches_url . "https://api.github.com/repos/domtronn/all-the-icons.el/branches{/branch}") (tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/tags") (blobs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/domtronn/all-the-icons.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/domtronn/all-the-icons.el/languages") (stargazers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/stargazers") (contributors_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contributors") (subscribers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscribers") (subscription_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscription") (commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contents/{+path}") (compare_url . "https://api.github.com/repos/domtronn/all-the-icons.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/domtronn/all-the-icons.el/merges") (archive_url . "https://api.github.com/repos/domtronn/all-the-icons.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/domtronn/all-the-icons.el/downloads") (issues_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues{/number}") (pulls_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/domtronn/all-the-icons.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/domtronn/all-the-icons.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/domtronn/all-the-icons.el/labels{/name}") (releases_url . "https://api.github.com/repos/domtronn/all-the-icons.el/releases{/id}") (deployments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/deployments")) (url . "https://api.github.com/notifications/threads/320365900") (subscription_url . "https://api.github.com/notifications/threads/320365900/subscription")) ((id . "326923253") (unread . t) (reason . "subscribed") (updated_at . "2018-04-25T20:16:46Z") (last_read_at) (subject (title . "Using wgrep and ag") (url . "https://api.github.com/repos/zamansky/using-emacs/issues/6") (latest_comment_url . "https://api.github.com/repos/zamansky/using-emacs/issues/6") (type . "Issue")) (repository (id . 58067297) (node_id . "MDEwOlJlcG9zaXRvcnk1ODA2NzI5Nw==") (name . "using-emacs") (full_name . "zamansky/using-emacs") (owner (login . "zamansky") (id . 636927) (node_id . "MDQ6VXNlcjYzNjkyNw==") (avatar_url . "https://avatars2.githubusercontent.com/u/636927?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zamansky") (html_url . "https://github.com/zamansky") (followers_url . "https://api.github.com/users/zamansky/followers") (following_url . "https://api.github.com/users/zamansky/following{/other_user}") (gists_url . "https://api.github.com/users/zamansky/gists{/gist_id}") (starred_url . "https://api.github.com/users/zamansky/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zamansky/subscriptions") (organizations_url . "https://api.github.com/users/zamansky/orgs") (repos_url . "https://api.github.com/users/zamansky/repos") (events_url . "https://api.github.com/users/zamansky/events{/privacy}") (received_events_url . "https://api.github.com/users/zamansky/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zamansky/using-emacs") (description) (fork) (url . "https://api.github.com/repos/zamansky/using-emacs") (forks_url . "https://api.github.com/repos/zamansky/using-emacs/forks") (keys_url . "https://api.github.com/repos/zamansky/using-emacs/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zamansky/using-emacs/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zamansky/using-emacs/teams") (hooks_url . "https://api.github.com/repos/zamansky/using-emacs/hooks") (issue_events_url . "https://api.github.com/repos/zamansky/using-emacs/issues/events{/number}") (events_url . "https://api.github.com/repos/zamansky/using-emacs/events") (assignees_url . "https://api.github.com/repos/zamansky/using-emacs/assignees{/user}") (branches_url . "https://api.github.com/repos/zamansky/using-emacs/branches{/branch}") (tags_url . "https://api.github.com/repos/zamansky/using-emacs/tags") (blobs_url . "https://api.github.com/repos/zamansky/using-emacs/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zamansky/using-emacs/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zamansky/using-emacs/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zamansky/using-emacs/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zamansky/using-emacs/statuses/{sha}") (languages_url . "https://api.github.com/repos/zamansky/using-emacs/languages") (stargazers_url . "https://api.github.com/repos/zamansky/using-emacs/stargazers") (contributors_url . "https://api.github.com/repos/zamansky/using-emacs/contributors") (subscribers_url . "https://api.github.com/repos/zamansky/using-emacs/subscribers") (subscription_url . "https://api.github.com/repos/zamansky/using-emacs/subscription") (commits_url . "https://api.github.com/repos/zamansky/using-emacs/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zamansky/using-emacs/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zamansky/using-emacs/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zamansky/using-emacs/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zamansky/using-emacs/contents/{+path}") (compare_url . "https://api.github.com/repos/zamansky/using-emacs/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zamansky/using-emacs/merges") (archive_url . "https://api.github.com/repos/zamansky/using-emacs/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zamansky/using-emacs/downloads") (issues_url . "https://api.github.com/repos/zamansky/using-emacs/issues{/number}") (pulls_url . "https://api.github.com/repos/zamansky/using-emacs/pulls{/number}") (milestones_url . "https://api.github.com/repos/zamansky/using-emacs/milestones{/number}") (notifications_url . "https://api.github.com/repos/zamansky/using-emacs/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zamansky/using-emacs/labels{/name}") (releases_url . "https://api.github.com/repos/zamansky/using-emacs/releases{/id}") (deployments_url . "https://api.github.com/repos/zamansky/using-emacs/deployments")) (url . "https://api.github.com/notifications/threads/326923253") (subscription_url . "https://api.github.com/notifications/threads/326923253/subscription")) ((id . "296660554") (unread . t) (reason . "subscribed") (updated_at . "2018-04-25T16:39:52Z") (last_read_at) (subject (title . "Mode Line patches set it to blank due to an error.") (url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/97") (latest_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments/384352914") (type . "Issue")) (repository (id . 60958378) (node_id . "MDEwOlJlcG9zaXRvcnk2MDk1ODM3OA==") (name . "all-the-icons.el") (full_name . "domtronn/all-the-icons.el") (owner (login . "domtronn") (id . 5881414) (node_id . "MDQ6VXNlcjU4ODE0MTQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/5881414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/domtronn") (html_url . "https://github.com/domtronn") (followers_url . "https://api.github.com/users/domtronn/followers") (following_url . "https://api.github.com/users/domtronn/following{/other_user}") (gists_url . "https://api.github.com/users/domtronn/gists{/gist_id}") (starred_url . "https://api.github.com/users/domtronn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/domtronn/subscriptions") (organizations_url . "https://api.github.com/users/domtronn/orgs") (repos_url . "https://api.github.com/users/domtronn/repos") (events_url . "https://api.github.com/users/domtronn/events{/privacy}") (received_events_url . "https://api.github.com/users/domtronn/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/domtronn/all-the-icons.el") (description . "A utility package to collect various Icon Fonts and propertize them within Emacs.") (fork) (url . "https://api.github.com/repos/domtronn/all-the-icons.el") (forks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/forks") (keys_url . "https://api.github.com/repos/domtronn/all-the-icons.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/domtronn/all-the-icons.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/domtronn/all-the-icons.el/teams") (hooks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/hooks") (issue_events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/events{/number}") (events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/events") (assignees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/assignees{/user}") (branches_url . "https://api.github.com/repos/domtronn/all-the-icons.el/branches{/branch}") (tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/tags") (blobs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/domtronn/all-the-icons.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/domtronn/all-the-icons.el/languages") (stargazers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/stargazers") (contributors_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contributors") (subscribers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscribers") (subscription_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscription") (commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contents/{+path}") (compare_url . "https://api.github.com/repos/domtronn/all-the-icons.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/domtronn/all-the-icons.el/merges") (archive_url . "https://api.github.com/repos/domtronn/all-the-icons.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/domtronn/all-the-icons.el/downloads") (issues_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues{/number}") (pulls_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/domtronn/all-the-icons.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/domtronn/all-the-icons.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/domtronn/all-the-icons.el/labels{/name}") (releases_url . "https://api.github.com/repos/domtronn/all-the-icons.el/releases{/id}") (deployments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/deployments")) (url . "https://api.github.com/notifications/threads/296660554") (subscription_url . "https://api.github.com/notifications/threads/296660554/subscription")) ((id . "327115135") (unread . t) (reason . "subscribed") (updated_at . "2018-04-23T20:52:29Z") (last_read_at) (subject (title . "Non-breaking spaces from CSL styles not converted to .tex") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/328") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/328") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/327115135") (subscription_url . "https://api.github.com/notifications/threads/327115135/subscription")) ((id . "326779199") (unread . t) (reason . "subscribed") (updated_at . "2018-04-22T15:23:58Z") (last_read_at) (subject (title . "Incorrect behavior pressing return on empty list item (return bindings)") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/42") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments/383389324") (type . "Issue")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/326779199") (subscription_url . "https://api.github.com/notifications/threads/326779199/subscription")) ((id . "324354267") (unread . t) (reason . "subscribed") (updated_at . "2018-04-15T09:16:21Z") (last_read_at) (subject (title . "Fix key bindings for org-agenda-mode-map") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls/41") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments/381392014") (type . "PullRequest")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/324354267") (subscription_url . "https://api.github.com/notifications/threads/324354267/subscription")) ((id . "319564269") (unread . t) (reason . "subscribed") (updated_at . "2018-04-13T09:13:18Z") (last_read_at) (subject (title . "Currently org-store-link support is not very accuracy") (url . "https://api.github.com/repos/machc/pdf-tools-org/issues/6") (latest_comment_url . "https://api.github.com/repos/machc/pdf-tools-org/issues/6") (type . "Issue")) (repository (id . 49338896) (node_id . "MDEwOlJlcG9zaXRvcnk0OTMzODg5Ng==") (name . "pdf-tools-org") (full_name . "machc/pdf-tools-org") (owner (login . "machc") (id . 1526607) (node_id . "MDQ6VXNlcjE1MjY2MDc=") (avatar_url . "https://avatars0.githubusercontent.com/u/1526607?v=4") (gravatar_id . "") (url . "https://api.github.com/users/machc") (html_url . "https://github.com/machc") (followers_url . "https://api.github.com/users/machc/followers") (following_url . "https://api.github.com/users/machc/following{/other_user}") (gists_url . "https://api.github.com/users/machc/gists{/gist_id}") (starred_url . "https://api.github.com/users/machc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/machc/subscriptions") (organizations_url . "https://api.github.com/users/machc/orgs") (repos_url . "https://api.github.com/users/machc/repos") (events_url . "https://api.github.com/users/machc/events{/privacy}") (received_events_url . "https://api.github.com/users/machc/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/machc/pdf-tools-org") (description . "pdf-tools and org-mode integration") (fork) (url . "https://api.github.com/repos/machc/pdf-tools-org") (forks_url . "https://api.github.com/repos/machc/pdf-tools-org/forks") (keys_url . "https://api.github.com/repos/machc/pdf-tools-org/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/machc/pdf-tools-org/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/machc/pdf-tools-org/teams") (hooks_url . "https://api.github.com/repos/machc/pdf-tools-org/hooks") (issue_events_url . "https://api.github.com/repos/machc/pdf-tools-org/issues/events{/number}") (events_url . "https://api.github.com/repos/machc/pdf-tools-org/events") (assignees_url . "https://api.github.com/repos/machc/pdf-tools-org/assignees{/user}") (branches_url . "https://api.github.com/repos/machc/pdf-tools-org/branches{/branch}") (tags_url . "https://api.github.com/repos/machc/pdf-tools-org/tags") (blobs_url . "https://api.github.com/repos/machc/pdf-tools-org/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/machc/pdf-tools-org/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/machc/pdf-tools-org/git/refs{/sha}") (trees_url . "https://api.github.com/repos/machc/pdf-tools-org/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/machc/pdf-tools-org/statuses/{sha}") (languages_url . "https://api.github.com/repos/machc/pdf-tools-org/languages") (stargazers_url . "https://api.github.com/repos/machc/pdf-tools-org/stargazers") (contributors_url . "https://api.github.com/repos/machc/pdf-tools-org/contributors") (subscribers_url . "https://api.github.com/repos/machc/pdf-tools-org/subscribers") (subscription_url . "https://api.github.com/repos/machc/pdf-tools-org/subscription") (commits_url . "https://api.github.com/repos/machc/pdf-tools-org/commits{/sha}") (git_commits_url . "https://api.github.com/repos/machc/pdf-tools-org/git/commits{/sha}") (comments_url . "https://api.github.com/repos/machc/pdf-tools-org/comments{/number}") (issue_comment_url . "https://api.github.com/repos/machc/pdf-tools-org/issues/comments{/number}") (contents_url . "https://api.github.com/repos/machc/pdf-tools-org/contents/{+path}") (compare_url . "https://api.github.com/repos/machc/pdf-tools-org/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/machc/pdf-tools-org/merges") (archive_url . "https://api.github.com/repos/machc/pdf-tools-org/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/machc/pdf-tools-org/downloads") (issues_url . "https://api.github.com/repos/machc/pdf-tools-org/issues{/number}") (pulls_url . "https://api.github.com/repos/machc/pdf-tools-org/pulls{/number}") (milestones_url . "https://api.github.com/repos/machc/pdf-tools-org/milestones{/number}") (notifications_url . "https://api.github.com/repos/machc/pdf-tools-org/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/machc/pdf-tools-org/labels{/name}") (releases_url . "https://api.github.com/repos/machc/pdf-tools-org/releases{/id}") (deployments_url . "https://api.github.com/repos/machc/pdf-tools-org/deployments")) (url . "https://api.github.com/notifications/threads/319564269") (subscription_url . "https://api.github.com/notifications/threads/319564269/subscription")) ((id . "322544782") (unread . t) (reason . "subscribed") (updated_at . "2018-04-10T14:47:27Z") (last_read_at) (subject (title . "Updated use-package installation") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/40") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/40") (type . "Issue")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/322544782") (subscription_url . "https://api.github.com/notifications/threads/322544782/subscription")) ((id . "271233024") (unread . t) (reason . "subscribed") (updated_at . "2018-04-10T08:21:00Z") (last_read_at) (subject (title . "Realign and resize separator icons") (url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls/87") (latest_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments/380015831") (type . "PullRequest")) (repository (id . 60958378) (node_id . "MDEwOlJlcG9zaXRvcnk2MDk1ODM3OA==") (name . "all-the-icons.el") (full_name . "domtronn/all-the-icons.el") (owner (login . "domtronn") (id . 5881414) (node_id . "MDQ6VXNlcjU4ODE0MTQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/5881414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/domtronn") (html_url . "https://github.com/domtronn") (followers_url . "https://api.github.com/users/domtronn/followers") (following_url . "https://api.github.com/users/domtronn/following{/other_user}") (gists_url . "https://api.github.com/users/domtronn/gists{/gist_id}") (starred_url . "https://api.github.com/users/domtronn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/domtronn/subscriptions") (organizations_url . "https://api.github.com/users/domtronn/orgs") (repos_url . "https://api.github.com/users/domtronn/repos") (events_url . "https://api.github.com/users/domtronn/events{/privacy}") (received_events_url . "https://api.github.com/users/domtronn/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/domtronn/all-the-icons.el") (description . "A utility package to collect various Icon Fonts and propertize them within Emacs.") (fork) (url . "https://api.github.com/repos/domtronn/all-the-icons.el") (forks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/forks") (keys_url . "https://api.github.com/repos/domtronn/all-the-icons.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/domtronn/all-the-icons.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/domtronn/all-the-icons.el/teams") (hooks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/hooks") (issue_events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/events{/number}") (events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/events") (assignees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/assignees{/user}") (branches_url . "https://api.github.com/repos/domtronn/all-the-icons.el/branches{/branch}") (tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/tags") (blobs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/domtronn/all-the-icons.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/domtronn/all-the-icons.el/languages") (stargazers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/stargazers") (contributors_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contributors") (subscribers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscribers") (subscription_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscription") (commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contents/{+path}") (compare_url . "https://api.github.com/repos/domtronn/all-the-icons.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/domtronn/all-the-icons.el/merges") (archive_url . "https://api.github.com/repos/domtronn/all-the-icons.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/domtronn/all-the-icons.el/downloads") (issues_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues{/number}") (pulls_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/domtronn/all-the-icons.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/domtronn/all-the-icons.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/domtronn/all-the-icons.el/labels{/name}") (releases_url . "https://api.github.com/repos/domtronn/all-the-icons.el/releases{/id}") (deployments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/deployments")) (url . "https://api.github.com/notifications/threads/271233024") (subscription_url . "https://api.github.com/notifications/threads/271233024/subscription")) ((id . "277658731") (unread . t) (reason . "subscribed") (updated_at . "2018-04-04T19:50:11Z") (last_read_at) (subject (title . "Boxes and ? signs displayed instead of icons on Windows with Emacs 25.3.1") (url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/89") (latest_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments/378723647") (type . "Issue")) (repository (id . 60958378) (node_id . "MDEwOlJlcG9zaXRvcnk2MDk1ODM3OA==") (name . "all-the-icons.el") (full_name . "domtronn/all-the-icons.el") (owner (login . "domtronn") (id . 5881414) (node_id . "MDQ6VXNlcjU4ODE0MTQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/5881414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/domtronn") (html_url . "https://github.com/domtronn") (followers_url . "https://api.github.com/users/domtronn/followers") (following_url . "https://api.github.com/users/domtronn/following{/other_user}") (gists_url . "https://api.github.com/users/domtronn/gists{/gist_id}") (starred_url . "https://api.github.com/users/domtronn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/domtronn/subscriptions") (organizations_url . "https://api.github.com/users/domtronn/orgs") (repos_url . "https://api.github.com/users/domtronn/repos") (events_url . "https://api.github.com/users/domtronn/events{/privacy}") (received_events_url . "https://api.github.com/users/domtronn/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/domtronn/all-the-icons.el") (description . "A utility package to collect various Icon Fonts and propertize them within Emacs.") (fork) (url . "https://api.github.com/repos/domtronn/all-the-icons.el") (forks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/forks") (keys_url . "https://api.github.com/repos/domtronn/all-the-icons.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/domtronn/all-the-icons.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/domtronn/all-the-icons.el/teams") (hooks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/hooks") (issue_events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/events{/number}") (events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/events") (assignees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/assignees{/user}") (branches_url . "https://api.github.com/repos/domtronn/all-the-icons.el/branches{/branch}") (tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/tags") (blobs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/domtronn/all-the-icons.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/domtronn/all-the-icons.el/languages") (stargazers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/stargazers") (contributors_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contributors") (subscribers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscribers") (subscription_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscription") (commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contents/{+path}") (compare_url . "https://api.github.com/repos/domtronn/all-the-icons.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/domtronn/all-the-icons.el/merges") (archive_url . "https://api.github.com/repos/domtronn/all-the-icons.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/domtronn/all-the-icons.el/downloads") (issues_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues{/number}") (pulls_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/domtronn/all-the-icons.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/domtronn/all-the-icons.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/domtronn/all-the-icons.el/labels{/name}") (releases_url . "https://api.github.com/repos/domtronn/all-the-icons.el/releases{/id}") (deployments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/deployments")) (url . "https://api.github.com/notifications/threads/277658731") (subscription_url . "https://api.github.com/notifications/threads/277658731/subscription")) ((id . "319646502") (unread . t) (reason . "subscribed") (updated_at . "2018-04-02T09:43:04Z") (last_read_at) (subject (title . "Icon for slack") (url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/111") (latest_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/111") (type . "Issue")) (repository (id . 60958378) (node_id . "MDEwOlJlcG9zaXRvcnk2MDk1ODM3OA==") (name . "all-the-icons.el") (full_name . "domtronn/all-the-icons.el") (owner (login . "domtronn") (id . 5881414) (node_id . "MDQ6VXNlcjU4ODE0MTQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/5881414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/domtronn") (html_url . "https://github.com/domtronn") (followers_url . "https://api.github.com/users/domtronn/followers") (following_url . "https://api.github.com/users/domtronn/following{/other_user}") (gists_url . "https://api.github.com/users/domtronn/gists{/gist_id}") (starred_url . "https://api.github.com/users/domtronn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/domtronn/subscriptions") (organizations_url . "https://api.github.com/users/domtronn/orgs") (repos_url . "https://api.github.com/users/domtronn/repos") (events_url . "https://api.github.com/users/domtronn/events{/privacy}") (received_events_url . "https://api.github.com/users/domtronn/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/domtronn/all-the-icons.el") (description . "A utility package to collect various Icon Fonts and propertize them within Emacs.") (fork) (url . "https://api.github.com/repos/domtronn/all-the-icons.el") (forks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/forks") (keys_url . "https://api.github.com/repos/domtronn/all-the-icons.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/domtronn/all-the-icons.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/domtronn/all-the-icons.el/teams") (hooks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/hooks") (issue_events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/events{/number}") (events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/events") (assignees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/assignees{/user}") (branches_url . "https://api.github.com/repos/domtronn/all-the-icons.el/branches{/branch}") (tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/tags") (blobs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/domtronn/all-the-icons.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/domtronn/all-the-icons.el/languages") (stargazers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/stargazers") (contributors_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contributors") (subscribers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscribers") (subscription_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscription") (commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contents/{+path}") (compare_url . "https://api.github.com/repos/domtronn/all-the-icons.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/domtronn/all-the-icons.el/merges") (archive_url . "https://api.github.com/repos/domtronn/all-the-icons.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/domtronn/all-the-icons.el/downloads") (issues_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues{/number}") (pulls_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/domtronn/all-the-icons.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/domtronn/all-the-icons.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/domtronn/all-the-icons.el/labels{/name}") (releases_url . "https://api.github.com/repos/domtronn/all-the-icons.el/releases{/id}") (deployments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/deployments")) (url . "https://api.github.com/notifications/threads/319646502") (subscription_url . "https://api.github.com/notifications/threads/319646502/subscription")) ((id . "319441196") (unread . t) (reason . "subscribed") (updated_at . "2018-03-31T21:09:14Z") (last_read_at) (subject (title . "Tapping caps-lock for escape not working in AlfredApp") (url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/37") (latest_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments/377723599") (type . "Issue")) (repository (id . 9118195) (node_id . "MDEwOlJlcG9zaXRvcnk5MTE4MTk1") (name . "keyboard") (full_name . "jasonrudolph/keyboard") (owner (login . "jasonrudolph") (id . 2988) (node_id . "MDQ6VXNlcjI5ODg=") (avatar_url . "https://avatars3.githubusercontent.com/u/2988?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jasonrudolph") (html_url . "https://github.com/jasonrudolph") (followers_url . "https://api.github.com/users/jasonrudolph/followers") (following_url . "https://api.github.com/users/jasonrudolph/following{/other_user}") (gists_url . "https://api.github.com/users/jasonrudolph/gists{/gist_id}") (starred_url . "https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jasonrudolph/subscriptions") (organizations_url . "https://api.github.com/users/jasonrudolph/orgs") (repos_url . "https://api.github.com/users/jasonrudolph/repos") (events_url . "https://api.github.com/users/jasonrudolph/events{/privacy}") (received_events_url . "https://api.github.com/users/jasonrudolph/received_events") (type . "User") (site_admin . t)) (private) (html_url . "https://github.com/jasonrudolph/keyboard") (description . "⌨ Toward a more useful keyboard") (fork) (url . "https://api.github.com/repos/jasonrudolph/keyboard") (forks_url . "https://api.github.com/repos/jasonrudolph/keyboard/forks") (keys_url . "https://api.github.com/repos/jasonrudolph/keyboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jasonrudolph/keyboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jasonrudolph/keyboard/teams") (hooks_url . "https://api.github.com/repos/jasonrudolph/keyboard/hooks") (issue_events_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/events{/number}") (events_url . "https://api.github.com/repos/jasonrudolph/keyboard/events") (assignees_url . "https://api.github.com/repos/jasonrudolph/keyboard/assignees{/user}") (branches_url . "https://api.github.com/repos/jasonrudolph/keyboard/branches{/branch}") (tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/tags") (blobs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jasonrudolph/keyboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/jasonrudolph/keyboard/languages") (stargazers_url . "https://api.github.com/repos/jasonrudolph/keyboard/stargazers") (contributors_url . "https://api.github.com/repos/jasonrudolph/keyboard/contributors") (subscribers_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscribers") (subscription_url . "https://api.github.com/repos/jasonrudolph/keyboard/subscription") (commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jasonrudolph/keyboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jasonrudolph/keyboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jasonrudolph/keyboard/contents/{+path}") (compare_url . "https://api.github.com/repos/jasonrudolph/keyboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jasonrudolph/keyboard/merges") (archive_url . "https://api.github.com/repos/jasonrudolph/keyboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jasonrudolph/keyboard/downloads") (issues_url . "https://api.github.com/repos/jasonrudolph/keyboard/issues{/number}") (pulls_url . "https://api.github.com/repos/jasonrudolph/keyboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/jasonrudolph/keyboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/jasonrudolph/keyboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jasonrudolph/keyboard/labels{/name}") (releases_url . "https://api.github.com/repos/jasonrudolph/keyboard/releases{/id}") (deployments_url . "https://api.github.com/repos/jasonrudolph/keyboard/deployments")) (url . "https://api.github.com/notifications/threads/319441196") (subscription_url . "https://api.github.com/notifications/threads/319441196/subscription")) ((id . "318059280") (unread . t) (reason . "subscribed") (updated_at . "2018-03-31T05:55:49Z") (last_read_at) (subject (title . "error: Package ‘seq-2.14’ is unavailable") (url . "https://api.github.com/repos/zamansky/using-emacs/issues/5") (latest_comment_url . "https://api.github.com/repos/zamansky/using-emacs/issues/5") (type . "Issue")) (repository (id . 58067297) (node_id . "MDEwOlJlcG9zaXRvcnk1ODA2NzI5Nw==") (name . "using-emacs") (full_name . "zamansky/using-emacs") (owner (login . "zamansky") (id . 636927) (node_id . "MDQ6VXNlcjYzNjkyNw==") (avatar_url . "https://avatars2.githubusercontent.com/u/636927?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zamansky") (html_url . "https://github.com/zamansky") (followers_url . "https://api.github.com/users/zamansky/followers") (following_url . "https://api.github.com/users/zamansky/following{/other_user}") (gists_url . "https://api.github.com/users/zamansky/gists{/gist_id}") (starred_url . "https://api.github.com/users/zamansky/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zamansky/subscriptions") (organizations_url . "https://api.github.com/users/zamansky/orgs") (repos_url . "https://api.github.com/users/zamansky/repos") (events_url . "https://api.github.com/users/zamansky/events{/privacy}") (received_events_url . "https://api.github.com/users/zamansky/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zamansky/using-emacs") (description) (fork) (url . "https://api.github.com/repos/zamansky/using-emacs") (forks_url . "https://api.github.com/repos/zamansky/using-emacs/forks") (keys_url . "https://api.github.com/repos/zamansky/using-emacs/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zamansky/using-emacs/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zamansky/using-emacs/teams") (hooks_url . "https://api.github.com/repos/zamansky/using-emacs/hooks") (issue_events_url . "https://api.github.com/repos/zamansky/using-emacs/issues/events{/number}") (events_url . "https://api.github.com/repos/zamansky/using-emacs/events") (assignees_url . "https://api.github.com/repos/zamansky/using-emacs/assignees{/user}") (branches_url . "https://api.github.com/repos/zamansky/using-emacs/branches{/branch}") (tags_url . "https://api.github.com/repos/zamansky/using-emacs/tags") (blobs_url . "https://api.github.com/repos/zamansky/using-emacs/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zamansky/using-emacs/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zamansky/using-emacs/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zamansky/using-emacs/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zamansky/using-emacs/statuses/{sha}") (languages_url . "https://api.github.com/repos/zamansky/using-emacs/languages") (stargazers_url . "https://api.github.com/repos/zamansky/using-emacs/stargazers") (contributors_url . "https://api.github.com/repos/zamansky/using-emacs/contributors") (subscribers_url . "https://api.github.com/repos/zamansky/using-emacs/subscribers") (subscription_url . "https://api.github.com/repos/zamansky/using-emacs/subscription") (commits_url . "https://api.github.com/repos/zamansky/using-emacs/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zamansky/using-emacs/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zamansky/using-emacs/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zamansky/using-emacs/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zamansky/using-emacs/contents/{+path}") (compare_url . "https://api.github.com/repos/zamansky/using-emacs/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zamansky/using-emacs/merges") (archive_url . "https://api.github.com/repos/zamansky/using-emacs/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zamansky/using-emacs/downloads") (issues_url . "https://api.github.com/repos/zamansky/using-emacs/issues{/number}") (pulls_url . "https://api.github.com/repos/zamansky/using-emacs/pulls{/number}") (milestones_url . "https://api.github.com/repos/zamansky/using-emacs/milestones{/number}") (notifications_url . "https://api.github.com/repos/zamansky/using-emacs/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zamansky/using-emacs/labels{/name}") (releases_url . "https://api.github.com/repos/zamansky/using-emacs/releases{/id}") (deployments_url . "https://api.github.com/repos/zamansky/using-emacs/deployments")) (url . "https://api.github.com/notifications/threads/318059280") (subscription_url . "https://api.github.com/notifications/threads/318059280/subscription")) ((id . "318437066") (unread . t) (reason . "subscribed") (updated_at . "2018-03-28T15:07:59Z") (last_read_at) (subject (title . "Fix commentary typo") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls/65") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls/65") (type . "PullRequest")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/318437066") (subscription_url . "https://api.github.com/notifications/threads/318437066/subscription")) ((id . "317728837") (unread . t) (reason . "subscribed") (updated_at . "2018-03-27T21:31:21Z") (last_read_at) (subject (title . "air-org-set-tags--why use delq \"\"?") (url . "https://api.github.com/repos/aaronbieber/dotfiles/issues/8") (latest_comment_url . "https://api.github.com/repos/aaronbieber/dotfiles/issues/8") (type . "Issue")) (repository (id . 891380) (node_id . "MDEwOlJlcG9zaXRvcnk4OTEzODA=") (name . "dotfiles") (full_name . "aaronbieber/dotfiles") (owner (login . "aaronbieber") (id . 157664) (node_id . "MDQ6VXNlcjE1NzY2NA==") (avatar_url . "https://avatars0.githubusercontent.com/u/157664?v=4") (gravatar_id . "") (url . "https://api.github.com/users/aaronbieber") (html_url . "https://github.com/aaronbieber") (followers_url . "https://api.github.com/users/aaronbieber/followers") (following_url . "https://api.github.com/users/aaronbieber/following{/other_user}") (gists_url . "https://api.github.com/users/aaronbieber/gists{/gist_id}") (starred_url . "https://api.github.com/users/aaronbieber/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/aaronbieber/subscriptions") (organizations_url . "https://api.github.com/users/aaronbieber/orgs") (repos_url . "https://api.github.com/users/aaronbieber/repos") (events_url . "https://api.github.com/users/aaronbieber/events{/privacy}") (received_events_url . "https://api.github.com/users/aaronbieber/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/aaronbieber/dotfiles") (description . "The skeleton of my wonderful *NIX home folders and scripts.") (fork) (url . "https://api.github.com/repos/aaronbieber/dotfiles") (forks_url . "https://api.github.com/repos/aaronbieber/dotfiles/forks") (keys_url . "https://api.github.com/repos/aaronbieber/dotfiles/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/aaronbieber/dotfiles/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/aaronbieber/dotfiles/teams") (hooks_url . "https://api.github.com/repos/aaronbieber/dotfiles/hooks") (issue_events_url . "https://api.github.com/repos/aaronbieber/dotfiles/issues/events{/number}") (events_url . "https://api.github.com/repos/aaronbieber/dotfiles/events") (assignees_url . "https://api.github.com/repos/aaronbieber/dotfiles/assignees{/user}") (branches_url . "https://api.github.com/repos/aaronbieber/dotfiles/branches{/branch}") (tags_url . "https://api.github.com/repos/aaronbieber/dotfiles/tags") (blobs_url . "https://api.github.com/repos/aaronbieber/dotfiles/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/aaronbieber/dotfiles/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/aaronbieber/dotfiles/git/refs{/sha}") (trees_url . "https://api.github.com/repos/aaronbieber/dotfiles/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/aaronbieber/dotfiles/statuses/{sha}") (languages_url . "https://api.github.com/repos/aaronbieber/dotfiles/languages") (stargazers_url . "https://api.github.com/repos/aaronbieber/dotfiles/stargazers") (contributors_url . "https://api.github.com/repos/aaronbieber/dotfiles/contributors") (subscribers_url . "https://api.github.com/repos/aaronbieber/dotfiles/subscribers") (subscription_url . "https://api.github.com/repos/aaronbieber/dotfiles/subscription") (commits_url . "https://api.github.com/repos/aaronbieber/dotfiles/commits{/sha}") (git_commits_url . "https://api.github.com/repos/aaronbieber/dotfiles/git/commits{/sha}") (comments_url . "https://api.github.com/repos/aaronbieber/dotfiles/comments{/number}") (issue_comment_url . "https://api.github.com/repos/aaronbieber/dotfiles/issues/comments{/number}") (contents_url . "https://api.github.com/repos/aaronbieber/dotfiles/contents/{+path}") (compare_url . "https://api.github.com/repos/aaronbieber/dotfiles/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/aaronbieber/dotfiles/merges") (archive_url . "https://api.github.com/repos/aaronbieber/dotfiles/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/aaronbieber/dotfiles/downloads") (issues_url . "https://api.github.com/repos/aaronbieber/dotfiles/issues{/number}") (pulls_url . "https://api.github.com/repos/aaronbieber/dotfiles/pulls{/number}") (milestones_url . "https://api.github.com/repos/aaronbieber/dotfiles/milestones{/number}") (notifications_url . "https://api.github.com/repos/aaronbieber/dotfiles/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/aaronbieber/dotfiles/labels{/name}") (releases_url . "https://api.github.com/repos/aaronbieber/dotfiles/releases{/id}") (deployments_url . "https://api.github.com/repos/aaronbieber/dotfiles/deployments")) (url . "https://api.github.com/notifications/threads/317728837") (subscription_url . "https://api.github.com/notifications/threads/317728837/subscription")) ((id . "300547838") (unread . t) (reason . "subscribed") (updated_at . "2018-03-27T17:07:40Z") (last_read_at) (subject (title . "Package ‘dired+-’ is unavailable Error (use-package): Cannot load dired+") (url . "https://api.github.com/repos/zamansky/using-emacs/issues/4") (latest_comment_url . "https://api.github.com/repos/zamansky/using-emacs/issues/4") (type . "Issue")) (repository (id . 58067297) (node_id . "MDEwOlJlcG9zaXRvcnk1ODA2NzI5Nw==") (name . "using-emacs") (full_name . "zamansky/using-emacs") (owner (login . "zamansky") (id . 636927) (node_id . "MDQ6VXNlcjYzNjkyNw==") (avatar_url . "https://avatars2.githubusercontent.com/u/636927?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zamansky") (html_url . "https://github.com/zamansky") (followers_url . "https://api.github.com/users/zamansky/followers") (following_url . "https://api.github.com/users/zamansky/following{/other_user}") (gists_url . "https://api.github.com/users/zamansky/gists{/gist_id}") (starred_url . "https://api.github.com/users/zamansky/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zamansky/subscriptions") (organizations_url . "https://api.github.com/users/zamansky/orgs") (repos_url . "https://api.github.com/users/zamansky/repos") (events_url . "https://api.github.com/users/zamansky/events{/privacy}") (received_events_url . "https://api.github.com/users/zamansky/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zamansky/using-emacs") (description) (fork) (url . "https://api.github.com/repos/zamansky/using-emacs") (forks_url . "https://api.github.com/repos/zamansky/using-emacs/forks") (keys_url . "https://api.github.com/repos/zamansky/using-emacs/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zamansky/using-emacs/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zamansky/using-emacs/teams") (hooks_url . "https://api.github.com/repos/zamansky/using-emacs/hooks") (issue_events_url . "https://api.github.com/repos/zamansky/using-emacs/issues/events{/number}") (events_url . "https://api.github.com/repos/zamansky/using-emacs/events") (assignees_url . "https://api.github.com/repos/zamansky/using-emacs/assignees{/user}") (branches_url . "https://api.github.com/repos/zamansky/using-emacs/branches{/branch}") (tags_url . "https://api.github.com/repos/zamansky/using-emacs/tags") (blobs_url . "https://api.github.com/repos/zamansky/using-emacs/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zamansky/using-emacs/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zamansky/using-emacs/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zamansky/using-emacs/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zamansky/using-emacs/statuses/{sha}") (languages_url . "https://api.github.com/repos/zamansky/using-emacs/languages") (stargazers_url . "https://api.github.com/repos/zamansky/using-emacs/stargazers") (contributors_url . "https://api.github.com/repos/zamansky/using-emacs/contributors") (subscribers_url . "https://api.github.com/repos/zamansky/using-emacs/subscribers") (subscription_url . "https://api.github.com/repos/zamansky/using-emacs/subscription") (commits_url . "https://api.github.com/repos/zamansky/using-emacs/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zamansky/using-emacs/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zamansky/using-emacs/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zamansky/using-emacs/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zamansky/using-emacs/contents/{+path}") (compare_url . "https://api.github.com/repos/zamansky/using-emacs/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zamansky/using-emacs/merges") (archive_url . "https://api.github.com/repos/zamansky/using-emacs/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zamansky/using-emacs/downloads") (issues_url . "https://api.github.com/repos/zamansky/using-emacs/issues{/number}") (pulls_url . "https://api.github.com/repos/zamansky/using-emacs/pulls{/number}") (milestones_url . "https://api.github.com/repos/zamansky/using-emacs/milestones{/number}") (notifications_url . "https://api.github.com/repos/zamansky/using-emacs/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zamansky/using-emacs/labels{/name}") (releases_url . "https://api.github.com/repos/zamansky/using-emacs/releases{/id}") (deployments_url . "https://api.github.com/repos/zamansky/using-emacs/deployments")) (url . "https://api.github.com/notifications/threads/300547838") (subscription_url . "https://api.github.com/notifications/threads/300547838/subscription")) ((id . "304460443") (unread . t) (reason . "subscribed") (updated_at . "2018-03-23T23:07:36Z") (last_read_at) (subject (title . "Make evil-org-select-inner-element use :value if provided") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls/35") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls/35") (type . "PullRequest")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/304460443") (subscription_url . "https://api.github.com/notifications/threads/304460443/subscription")) ((id . "315241792") (unread . t) (reason . "subscribed") (updated_at . "2018-03-23T23:06:52Z") (last_read_at) (subject (title . "Improve inner text object") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls/38") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls/38") (type . "PullRequest")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/315241792") (subscription_url . "https://api.github.com/notifications/threads/315241792/subscription")) ((id . "260684471") (unread . t) (reason . "subscribed") (updated_at . "2018-03-23T23:06:52Z") (last_read_at) (subject (title . "Text object for org babel") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/23") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/23") (type . "Issue")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/260684471") (subscription_url . "https://api.github.com/notifications/threads/260684471/subscription")) ((id . "304592439") (unread . t) (reason . "subscribed") (updated_at . "2018-03-23T22:22:22Z") (last_read_at) (subject (title . "Feature request.") (url . "https://api.github.com/repos/kaushalmodi/todoist.el/issues/1") (latest_comment_url . "https://api.github.com/repos/kaushalmodi/todoist.el/issues/comments/375813746") (type . "Issue")) (repository (id . 79588465) (node_id . "MDEwOlJlcG9zaXRvcnk3OTU4ODQ2NQ==") (name . "todoist.el") (full_name . "kaushalmodi/todoist.el") (owner (login . "kaushalmodi") (id . 3578197) (node_id . "MDQ6VXNlcjM1NzgxOTc=") (avatar_url . "https://avatars2.githubusercontent.com/u/3578197?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kaushalmodi") (html_url . "https://github.com/kaushalmodi") (followers_url . "https://api.github.com/users/kaushalmodi/followers") (following_url . "https://api.github.com/users/kaushalmodi/following{/other_user}") (gists_url . "https://api.github.com/users/kaushalmodi/gists{/gist_id}") (starred_url . "https://api.github.com/users/kaushalmodi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kaushalmodi/subscriptions") (organizations_url . "https://api.github.com/users/kaushalmodi/orgs") (repos_url . "https://api.github.com/users/kaushalmodi/repos") (events_url . "https://api.github.com/users/kaushalmodi/events{/privacy}") (received_events_url . "https://api.github.com/users/kaushalmodi/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/kaushalmodi/todoist.el") (description . "Elisp library to interface with Todoist API") (fork) (url . "https://api.github.com/repos/kaushalmodi/todoist.el") (forks_url . "https://api.github.com/repos/kaushalmodi/todoist.el/forks") (keys_url . "https://api.github.com/repos/kaushalmodi/todoist.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/kaushalmodi/todoist.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/kaushalmodi/todoist.el/teams") (hooks_url . "https://api.github.com/repos/kaushalmodi/todoist.el/hooks") (issue_events_url . "https://api.github.com/repos/kaushalmodi/todoist.el/issues/events{/number}") (events_url . "https://api.github.com/repos/kaushalmodi/todoist.el/events") (assignees_url . "https://api.github.com/repos/kaushalmodi/todoist.el/assignees{/user}") (branches_url . "https://api.github.com/repos/kaushalmodi/todoist.el/branches{/branch}") (tags_url . "https://api.github.com/repos/kaushalmodi/todoist.el/tags") (blobs_url . "https://api.github.com/repos/kaushalmodi/todoist.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/kaushalmodi/todoist.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/kaushalmodi/todoist.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/kaushalmodi/todoist.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/kaushalmodi/todoist.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/kaushalmodi/todoist.el/languages") (stargazers_url . "https://api.github.com/repos/kaushalmodi/todoist.el/stargazers") (contributors_url . "https://api.github.com/repos/kaushalmodi/todoist.el/contributors") (subscribers_url . "https://api.github.com/repos/kaushalmodi/todoist.el/subscribers") (subscription_url . "https://api.github.com/repos/kaushalmodi/todoist.el/subscription") (commits_url . "https://api.github.com/repos/kaushalmodi/todoist.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/kaushalmodi/todoist.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/kaushalmodi/todoist.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/kaushalmodi/todoist.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/kaushalmodi/todoist.el/contents/{+path}") (compare_url . "https://api.github.com/repos/kaushalmodi/todoist.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/kaushalmodi/todoist.el/merges") (archive_url . "https://api.github.com/repos/kaushalmodi/todoist.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/kaushalmodi/todoist.el/downloads") (issues_url . "https://api.github.com/repos/kaushalmodi/todoist.el/issues{/number}") (pulls_url . "https://api.github.com/repos/kaushalmodi/todoist.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/kaushalmodi/todoist.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/kaushalmodi/todoist.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/kaushalmodi/todoist.el/labels{/name}") (releases_url . "https://api.github.com/repos/kaushalmodi/todoist.el/releases{/id}") (deployments_url . "https://api.github.com/repos/kaushalmodi/todoist.el/deployments")) (url . "https://api.github.com/notifications/threads/304592439") (subscription_url . "https://api.github.com/notifications/threads/304592439/subscription")) ((id . "305327628") (unread . t) (reason . "subscribed") (updated_at . "2018-03-23T13:10:06Z") (last_read_at) (subject (title . "Does anyone use paragraph text objects (ip / ap) in org-mode? Can they be put to better use?") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/36") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments/375659825") (type . "Issue")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/305327628") (subscription_url . "https://api.github.com/notifications/threads/305327628/subscription")) ((id . "314418539") (unread . t) (reason . "subscribed") (updated_at . "2018-03-22T23:25:09Z") (last_read_at) (subject (title . "Remove 'delete-frame-functions hook after invocation to avoid unexpected behavior on kill-emacs") (url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/42") (latest_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/42") (type . "Issue")) (repository (id . 122137283) (node_id . "MDEwOlJlcG9zaXRvcnkxMjIxMzcyODM=") (name . "emacs-anywhere") (full_name . "zachcurry/emacs-anywhere") (owner (login . "zachcurry") (id . 7032632) (node_id . "MDQ6VXNlcjcwMzI2MzI=") (avatar_url . "https://avatars0.githubusercontent.com/u/7032632?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zachcurry") (html_url . "https://github.com/zachcurry") (followers_url . "https://api.github.com/users/zachcurry/followers") (following_url . "https://api.github.com/users/zachcurry/following{/other_user}") (gists_url . "https://api.github.com/users/zachcurry/gists{/gist_id}") (starred_url . "https://api.github.com/users/zachcurry/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zachcurry/subscriptions") (organizations_url . "https://api.github.com/users/zachcurry/orgs") (repos_url . "https://api.github.com/users/zachcurry/repos") (events_url . "https://api.github.com/users/zachcurry/events{/privacy}") (received_events_url . "https://api.github.com/users/zachcurry/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zachcurry/emacs-anywhere") (description . "Configurable automation + hooks called with application information") (fork) (url . "https://api.github.com/repos/zachcurry/emacs-anywhere") (forks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/forks") (keys_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/teams") (hooks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/hooks") (issue_events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/events{/number}") (events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/events") (assignees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/assignees{/user}") (branches_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/branches{/branch}") (tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/tags") (blobs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/statuses/{sha}") (languages_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/languages") (stargazers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/stargazers") (contributors_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contributors") (subscribers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscribers") (subscription_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscription") (commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contents/{+path}") (compare_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/merges") (archive_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/downloads") (issues_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues{/number}") (pulls_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/pulls{/number}") (milestones_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/milestones{/number}") (notifications_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/labels{/name}") (releases_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/releases{/id}") (deployments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/deployments")) (url . "https://api.github.com/notifications/threads/314418539") (subscription_url . "https://api.github.com/notifications/threads/314418539/subscription")) ((id . "312201051") (unread . t) (reason . "subscribed") (updated_at . "2018-03-22T23:09:55Z") (last_read_at) (subject (title . "Automatically pick major mode") (url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/39") (latest_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments/375487146") (type . "Issue")) (repository (id . 122137283) (node_id . "MDEwOlJlcG9zaXRvcnkxMjIxMzcyODM=") (name . "emacs-anywhere") (full_name . "zachcurry/emacs-anywhere") (owner (login . "zachcurry") (id . 7032632) (node_id . "MDQ6VXNlcjcwMzI2MzI=") (avatar_url . "https://avatars0.githubusercontent.com/u/7032632?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zachcurry") (html_url . "https://github.com/zachcurry") (followers_url . "https://api.github.com/users/zachcurry/followers") (following_url . "https://api.github.com/users/zachcurry/following{/other_user}") (gists_url . "https://api.github.com/users/zachcurry/gists{/gist_id}") (starred_url . "https://api.github.com/users/zachcurry/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zachcurry/subscriptions") (organizations_url . "https://api.github.com/users/zachcurry/orgs") (repos_url . "https://api.github.com/users/zachcurry/repos") (events_url . "https://api.github.com/users/zachcurry/events{/privacy}") (received_events_url . "https://api.github.com/users/zachcurry/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zachcurry/emacs-anywhere") (description . "Configurable automation + hooks called with application information") (fork) (url . "https://api.github.com/repos/zachcurry/emacs-anywhere") (forks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/forks") (keys_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/teams") (hooks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/hooks") (issue_events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/events{/number}") (events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/events") (assignees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/assignees{/user}") (branches_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/branches{/branch}") (tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/tags") (blobs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/statuses/{sha}") (languages_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/languages") (stargazers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/stargazers") (contributors_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contributors") (subscribers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscribers") (subscription_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscription") (commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contents/{+path}") (compare_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/merges") (archive_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/downloads") (issues_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues{/number}") (pulls_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/pulls{/number}") (milestones_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/milestones{/number}") (notifications_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/labels{/name}") (releases_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/releases{/id}") (deployments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/deployments")) (url . "https://api.github.com/notifications/threads/312201051") (subscription_url . "https://api.github.com/notifications/threads/312201051/subscription")) ((id . "316648193") (unread . t) (reason . "subscribed") (updated_at . "2018-03-22T22:54:41Z") (last_read_at) (subject (title . "Update README to reflect changes in #40.") (url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits/5c7789872ac4a63c20298bb21285fa48e3b754c3") (latest_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments/28226760") (type . "Commit")) (repository (id . 122137283) (node_id . "MDEwOlJlcG9zaXRvcnkxMjIxMzcyODM=") (name . "emacs-anywhere") (full_name . "zachcurry/emacs-anywhere") (owner (login . "zachcurry") (id . 7032632) (node_id . "MDQ6VXNlcjcwMzI2MzI=") (avatar_url . "https://avatars0.githubusercontent.com/u/7032632?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zachcurry") (html_url . "https://github.com/zachcurry") (followers_url . "https://api.github.com/users/zachcurry/followers") (following_url . "https://api.github.com/users/zachcurry/following{/other_user}") (gists_url . "https://api.github.com/users/zachcurry/gists{/gist_id}") (starred_url . "https://api.github.com/users/zachcurry/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zachcurry/subscriptions") (organizations_url . "https://api.github.com/users/zachcurry/orgs") (repos_url . "https://api.github.com/users/zachcurry/repos") (events_url . "https://api.github.com/users/zachcurry/events{/privacy}") (received_events_url . "https://api.github.com/users/zachcurry/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zachcurry/emacs-anywhere") (description . "Configurable automation + hooks called with application information") (fork) (url . "https://api.github.com/repos/zachcurry/emacs-anywhere") (forks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/forks") (keys_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/teams") (hooks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/hooks") (issue_events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/events{/number}") (events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/events") (assignees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/assignees{/user}") (branches_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/branches{/branch}") (tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/tags") (blobs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/statuses/{sha}") (languages_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/languages") (stargazers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/stargazers") (contributors_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contributors") (subscribers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscribers") (subscription_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscription") (commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contents/{+path}") (compare_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/merges") (archive_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/downloads") (issues_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues{/number}") (pulls_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/pulls{/number}") (milestones_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/milestones{/number}") (notifications_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/labels{/name}") (releases_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/releases{/id}") (deployments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/deployments")) (url . "https://api.github.com/notifications/threads/316648193") (subscription_url . "https://api.github.com/notifications/threads/316648193/subscription")) ((id . "314748349") (unread . t) (reason . "subscribed") (updated_at . "2018-03-22T22:41:38Z") (last_read_at) (subject (title . "When emacsclient process fails to signal parent process, do nothing") (url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/48") (latest_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/48") (type . "Issue")) (repository (id . 122137283) (node_id . "MDEwOlJlcG9zaXRvcnkxMjIxMzcyODM=") (name . "emacs-anywhere") (full_name . "zachcurry/emacs-anywhere") (owner (login . "zachcurry") (id . 7032632) (node_id . "MDQ6VXNlcjcwMzI2MzI=") (avatar_url . "https://avatars0.githubusercontent.com/u/7032632?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zachcurry") (html_url . "https://github.com/zachcurry") (followers_url . "https://api.github.com/users/zachcurry/followers") (following_url . "https://api.github.com/users/zachcurry/following{/other_user}") (gists_url . "https://api.github.com/users/zachcurry/gists{/gist_id}") (starred_url . "https://api.github.com/users/zachcurry/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zachcurry/subscriptions") (organizations_url . "https://api.github.com/users/zachcurry/orgs") (repos_url . "https://api.github.com/users/zachcurry/repos") (events_url . "https://api.github.com/users/zachcurry/events{/privacy}") (received_events_url . "https://api.github.com/users/zachcurry/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zachcurry/emacs-anywhere") (description . "Configurable automation + hooks called with application information") (fork) (url . "https://api.github.com/repos/zachcurry/emacs-anywhere") (forks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/forks") (keys_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/teams") (hooks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/hooks") (issue_events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/events{/number}") (events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/events") (assignees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/assignees{/user}") (branches_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/branches{/branch}") (tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/tags") (blobs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/statuses/{sha}") (languages_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/languages") (stargazers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/stargazers") (contributors_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contributors") (subscribers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscribers") (subscription_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscription") (commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contents/{+path}") (compare_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/merges") (archive_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/downloads") (issues_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues{/number}") (pulls_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/pulls{/number}") (milestones_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/milestones{/number}") (notifications_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/labels{/name}") (releases_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/releases{/id}") (deployments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/deployments")) (url . "https://api.github.com/notifications/threads/314748349") (subscription_url . "https://api.github.com/notifications/threads/314748349/subscription")) ((id . "314747457") (unread . t) (reason . "subscribed") (updated_at . "2018-03-22T22:41:38Z") (last_read_at) (subject (title . "Emulate an interactive bash session in OS X .workflow") (url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/47") (latest_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/47") (type . "Issue")) (repository (id . 122137283) (node_id . "MDEwOlJlcG9zaXRvcnkxMjIxMzcyODM=") (name . "emacs-anywhere") (full_name . "zachcurry/emacs-anywhere") (owner (login . "zachcurry") (id . 7032632) (node_id . "MDQ6VXNlcjcwMzI2MzI=") (avatar_url . "https://avatars0.githubusercontent.com/u/7032632?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zachcurry") (html_url . "https://github.com/zachcurry") (followers_url . "https://api.github.com/users/zachcurry/followers") (following_url . "https://api.github.com/users/zachcurry/following{/other_user}") (gists_url . "https://api.github.com/users/zachcurry/gists{/gist_id}") (starred_url . "https://api.github.com/users/zachcurry/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zachcurry/subscriptions") (organizations_url . "https://api.github.com/users/zachcurry/orgs") (repos_url . "https://api.github.com/users/zachcurry/repos") (events_url . "https://api.github.com/users/zachcurry/events{/privacy}") (received_events_url . "https://api.github.com/users/zachcurry/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zachcurry/emacs-anywhere") (description . "Configurable automation + hooks called with application information") (fork) (url . "https://api.github.com/repos/zachcurry/emacs-anywhere") (forks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/forks") (keys_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/teams") (hooks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/hooks") (issue_events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/events{/number}") (events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/events") (assignees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/assignees{/user}") (branches_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/branches{/branch}") (tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/tags") (blobs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/statuses/{sha}") (languages_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/languages") (stargazers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/stargazers") (contributors_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contributors") (subscribers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscribers") (subscription_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscription") (commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contents/{+path}") (compare_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/merges") (archive_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/downloads") (issues_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues{/number}") (pulls_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/pulls{/number}") (milestones_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/milestones{/number}") (notifications_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/labels{/name}") (releases_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/releases{/id}") (deployments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/deployments")) (url . "https://api.github.com/notifications/threads/314747457") (subscription_url . "https://api.github.com/notifications/threads/314747457/subscription")) ((id . "314736063") (unread . t) (reason . "subscribed") (updated_at . "2018-03-22T22:41:38Z") (last_read_at) (subject (title . "Allow user to control paste behavior via ea-popup-hook") (url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/45") (latest_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/45") (type . "Issue")) (repository (id . 122137283) (node_id . "MDEwOlJlcG9zaXRvcnkxMjIxMzcyODM=") (name . "emacs-anywhere") (full_name . "zachcurry/emacs-anywhere") (owner (login . "zachcurry") (id . 7032632) (node_id . "MDQ6VXNlcjcwMzI2MzI=") (avatar_url . "https://avatars0.githubusercontent.com/u/7032632?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zachcurry") (html_url . "https://github.com/zachcurry") (followers_url . "https://api.github.com/users/zachcurry/followers") (following_url . "https://api.github.com/users/zachcurry/following{/other_user}") (gists_url . "https://api.github.com/users/zachcurry/gists{/gist_id}") (starred_url . "https://api.github.com/users/zachcurry/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zachcurry/subscriptions") (organizations_url . "https://api.github.com/users/zachcurry/orgs") (repos_url . "https://api.github.com/users/zachcurry/repos") (events_url . "https://api.github.com/users/zachcurry/events{/privacy}") (received_events_url . "https://api.github.com/users/zachcurry/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zachcurry/emacs-anywhere") (description . "Configurable automation + hooks called with application information") (fork) (url . "https://api.github.com/repos/zachcurry/emacs-anywhere") (forks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/forks") (keys_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/teams") (hooks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/hooks") (issue_events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/events{/number}") (events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/events") (assignees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/assignees{/user}") (branches_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/branches{/branch}") (tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/tags") (blobs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/statuses/{sha}") (languages_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/languages") (stargazers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/stargazers") (contributors_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contributors") (subscribers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscribers") (subscription_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscription") (commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contents/{+path}") (compare_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/merges") (archive_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/downloads") (issues_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues{/number}") (pulls_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/pulls{/number}") (milestones_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/milestones{/number}") (notifications_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/labels{/name}") (releases_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/releases{/id}") (deployments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/deployments")) (url . "https://api.github.com/notifications/threads/314736063") (subscription_url . "https://api.github.com/notifications/threads/314736063/subscription")) ((id . "314735448") (unread . t) (reason . "subscribed") (updated_at . "2018-03-22T22:41:38Z") (last_read_at) (subject (title . "Deprecate config file") (url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/43") (latest_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/43") (type . "Issue")) (repository (id . 122137283) (node_id . "MDEwOlJlcG9zaXRvcnkxMjIxMzcyODM=") (name . "emacs-anywhere") (full_name . "zachcurry/emacs-anywhere") (owner (login . "zachcurry") (id . 7032632) (node_id . "MDQ6VXNlcjcwMzI2MzI=") (avatar_url . "https://avatars0.githubusercontent.com/u/7032632?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zachcurry") (html_url . "https://github.com/zachcurry") (followers_url . "https://api.github.com/users/zachcurry/followers") (following_url . "https://api.github.com/users/zachcurry/following{/other_user}") (gists_url . "https://api.github.com/users/zachcurry/gists{/gist_id}") (starred_url . "https://api.github.com/users/zachcurry/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zachcurry/subscriptions") (organizations_url . "https://api.github.com/users/zachcurry/orgs") (repos_url . "https://api.github.com/users/zachcurry/repos") (events_url . "https://api.github.com/users/zachcurry/events{/privacy}") (received_events_url . "https://api.github.com/users/zachcurry/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zachcurry/emacs-anywhere") (description . "Configurable automation + hooks called with application information") (fork) (url . "https://api.github.com/repos/zachcurry/emacs-anywhere") (forks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/forks") (keys_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/teams") (hooks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/hooks") (issue_events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/events{/number}") (events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/events") (assignees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/assignees{/user}") (branches_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/branches{/branch}") (tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/tags") (blobs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/statuses/{sha}") (languages_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/languages") (stargazers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/stargazers") (contributors_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contributors") (subscribers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscribers") (subscription_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscription") (commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contents/{+path}") (compare_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/merges") (archive_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/downloads") (issues_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues{/number}") (pulls_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/pulls{/number}") (milestones_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/milestones{/number}") (notifications_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/labels{/name}") (releases_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/releases{/id}") (deployments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/deployments")) (url . "https://api.github.com/notifications/threads/314735448") (subscription_url . "https://api.github.com/notifications/threads/314735448/subscription")) ((id . "309081174") (unread . t) (reason . "subscribed") (updated_at . "2018-03-22T03:51:49Z") (last_read_at) (subject (title . "Open minimap only when needed") (url . "https://api.github.com/repos/zk-phi/sublimity/issues/49") (latest_comment_url . "https://api.github.com/repos/zk-phi/sublimity/issues/comments/375171247") (type . "Issue")) (repository (id . 9364764) (node_id . "MDEwOlJlcG9zaXRvcnk5MzY0NzY0") (name . "sublimity") (full_name . "zk-phi/sublimity") (owner (login . "zk-phi") (id . 3530521) (node_id . "MDQ6VXNlcjM1MzA1MjE=") (avatar_url . "https://avatars3.githubusercontent.com/u/3530521?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zk-phi") (html_url . "https://github.com/zk-phi") (followers_url . "https://api.github.com/users/zk-phi/followers") (following_url . "https://api.github.com/users/zk-phi/following{/other_user}") (gists_url . "https://api.github.com/users/zk-phi/gists{/gist_id}") (starred_url . "https://api.github.com/users/zk-phi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zk-phi/subscriptions") (organizations_url . "https://api.github.com/users/zk-phi/orgs") (repos_url . "https://api.github.com/users/zk-phi/repos") (events_url . "https://api.github.com/users/zk-phi/events{/privacy}") (received_events_url . "https://api.github.com/users/zk-phi/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zk-phi/sublimity") (description . "[emacs] smooth-scrolling and minimap like sublime editor") (fork) (url . "https://api.github.com/repos/zk-phi/sublimity") (forks_url . "https://api.github.com/repos/zk-phi/sublimity/forks") (keys_url . "https://api.github.com/repos/zk-phi/sublimity/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zk-phi/sublimity/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zk-phi/sublimity/teams") (hooks_url . "https://api.github.com/repos/zk-phi/sublimity/hooks") (issue_events_url . "https://api.github.com/repos/zk-phi/sublimity/issues/events{/number}") (events_url . "https://api.github.com/repos/zk-phi/sublimity/events") (assignees_url . "https://api.github.com/repos/zk-phi/sublimity/assignees{/user}") (branches_url . "https://api.github.com/repos/zk-phi/sublimity/branches{/branch}") (tags_url . "https://api.github.com/repos/zk-phi/sublimity/tags") (blobs_url . "https://api.github.com/repos/zk-phi/sublimity/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zk-phi/sublimity/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zk-phi/sublimity/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zk-phi/sublimity/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zk-phi/sublimity/statuses/{sha}") (languages_url . "https://api.github.com/repos/zk-phi/sublimity/languages") (stargazers_url . "https://api.github.com/repos/zk-phi/sublimity/stargazers") (contributors_url . "https://api.github.com/repos/zk-phi/sublimity/contributors") (subscribers_url . "https://api.github.com/repos/zk-phi/sublimity/subscribers") (subscription_url . "https://api.github.com/repos/zk-phi/sublimity/subscription") (commits_url . "https://api.github.com/repos/zk-phi/sublimity/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zk-phi/sublimity/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zk-phi/sublimity/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zk-phi/sublimity/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zk-phi/sublimity/contents/{+path}") (compare_url . "https://api.github.com/repos/zk-phi/sublimity/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zk-phi/sublimity/merges") (archive_url . "https://api.github.com/repos/zk-phi/sublimity/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zk-phi/sublimity/downloads") (issues_url . "https://api.github.com/repos/zk-phi/sublimity/issues{/number}") (pulls_url . "https://api.github.com/repos/zk-phi/sublimity/pulls{/number}") (milestones_url . "https://api.github.com/repos/zk-phi/sublimity/milestones{/number}") (notifications_url . "https://api.github.com/repos/zk-phi/sublimity/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zk-phi/sublimity/labels{/name}") (releases_url . "https://api.github.com/repos/zk-phi/sublimity/releases{/id}") (deployments_url . "https://api.github.com/repos/zk-phi/sublimity/deployments")) (url . "https://api.github.com/notifications/threads/309081174") (subscription_url . "https://api.github.com/notifications/threads/309081174/subscription")) ((id . "315377665") (unread . t) (reason . "subscribed") (updated_at . "2018-03-21T20:00:51Z") (last_read_at) (subject (title . "Update installation guilde using use-package") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls/39") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments/375076593") (type . "PullRequest")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/315377665") (subscription_url . "https://api.github.com/notifications/threads/315377665/subscription")) ((id . "314784639") (unread . t) (reason . "subscribed") (updated_at . "2018-03-19T19:59:57Z") (last_read_at) (subject (title . "Generate missing citation-label properties") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/326") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/326") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/314784639") (subscription_url . "https://api.github.com/notifications/threads/314784639/subscription")) ((id . "314408978") (unread . t) (reason . "subscribed") (updated_at . "2018-03-18T21:03:12Z") (last_read_at) (subject (title . "Failing to customize dashboard") (url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/64") (latest_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/64") (type . "Issue")) (repository (id . 72868989) (node_id . "MDEwOlJlcG9zaXRvcnk3Mjg2ODk4OQ==") (name . "emacs-dashboard") (full_name . "rakanalh/emacs-dashboard") (owner (login . "rakanalh") (id . 195829) (node_id . "MDQ6VXNlcjE5NTgyOQ==") (avatar_url . "https://avatars3.githubusercontent.com/u/195829?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rakanalh") (html_url . "https://github.com/rakanalh") (followers_url . "https://api.github.com/users/rakanalh/followers") (following_url . "https://api.github.com/users/rakanalh/following{/other_user}") (gists_url . "https://api.github.com/users/rakanalh/gists{/gist_id}") (starred_url . "https://api.github.com/users/rakanalh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rakanalh/subscriptions") (organizations_url . "https://api.github.com/users/rakanalh/orgs") (repos_url . "https://api.github.com/users/rakanalh/repos") (events_url . "https://api.github.com/users/rakanalh/events{/privacy}") (received_events_url . "https://api.github.com/users/rakanalh/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/rakanalh/emacs-dashboard") (description . "An extensible emacs dashboard") (fork) (url . "https://api.github.com/repos/rakanalh/emacs-dashboard") (forks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/forks") (keys_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/teams") (hooks_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/hooks") (issue_events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/events{/number}") (events_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/events") (assignees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/assignees{/user}") (branches_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/branches{/branch}") (tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/tags") (blobs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/refs{/sha}") (trees_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/statuses/{sha}") (languages_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/languages") (stargazers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/stargazers") (contributors_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contributors") (subscribers_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscribers") (subscription_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/subscription") (commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/commits{/sha}") (git_commits_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/git/commits{/sha}") (comments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/comments{/number}") (issue_comment_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues/comments{/number}") (contents_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/contents/{+path}") (compare_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/merges") (archive_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/downloads") (issues_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/issues{/number}") (pulls_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/pulls{/number}") (milestones_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/milestones{/number}") (notifications_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/labels{/name}") (releases_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/releases{/id}") (deployments_url . "https://api.github.com/repos/rakanalh/emacs-dashboard/deployments")) (url . "https://api.github.com/notifications/threads/314408978") (subscription_url . "https://api.github.com/notifications/threads/314408978/subscription")) ((id . "309354354") (unread . t) (reason . "subscribed") (updated_at . "2018-06-23T22:03:47Z") (last_read_at) (subject (title . "linux: provide arch PKGBUILD") (url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/28") (latest_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments/399713574") (type . "Issue")) (repository (id . 122137283) (node_id . "MDEwOlJlcG9zaXRvcnkxMjIxMzcyODM=") (name . "emacs-anywhere") (full_name . "zachcurry/emacs-anywhere") (owner (login . "zachcurry") (id . 7032632) (node_id . "MDQ6VXNlcjcwMzI2MzI=") (avatar_url . "https://avatars0.githubusercontent.com/u/7032632?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zachcurry") (html_url . "https://github.com/zachcurry") (followers_url . "https://api.github.com/users/zachcurry/followers") (following_url . "https://api.github.com/users/zachcurry/following{/other_user}") (gists_url . "https://api.github.com/users/zachcurry/gists{/gist_id}") (starred_url . "https://api.github.com/users/zachcurry/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zachcurry/subscriptions") (organizations_url . "https://api.github.com/users/zachcurry/orgs") (repos_url . "https://api.github.com/users/zachcurry/repos") (events_url . "https://api.github.com/users/zachcurry/events{/privacy}") (received_events_url . "https://api.github.com/users/zachcurry/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zachcurry/emacs-anywhere") (description . "Configurable automation + hooks called with application information") (fork) (url . "https://api.github.com/repos/zachcurry/emacs-anywhere") (forks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/forks") (keys_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/teams") (hooks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/hooks") (issue_events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/events{/number}") (events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/events") (assignees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/assignees{/user}") (branches_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/branches{/branch}") (tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/tags") (blobs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/statuses/{sha}") (languages_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/languages") (stargazers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/stargazers") (contributors_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contributors") (subscribers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscribers") (subscription_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscription") (commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contents/{+path}") (compare_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/merges") (archive_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/downloads") (issues_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues{/number}") (pulls_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/pulls{/number}") (milestones_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/milestones{/number}") (notifications_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/labels{/name}") (releases_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/releases{/id}") (deployments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/deployments")) (url . "https://api.github.com/notifications/threads/309354354") (subscription_url . "https://api.github.com/notifications/threads/309354354/subscription")) ((id . "308164230") (unread . t) (reason . "subscribed") (updated_at . "2018-03-18T17:53:22Z") (last_read_at) (subject (title . "Support Windows") (url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/6") (latest_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments/374022930") (type . "Issue")) (repository (id . 122137283) (node_id . "MDEwOlJlcG9zaXRvcnkxMjIxMzcyODM=") (name . "emacs-anywhere") (full_name . "zachcurry/emacs-anywhere") (owner (login . "zachcurry") (id . 7032632) (node_id . "MDQ6VXNlcjcwMzI2MzI=") (avatar_url . "https://avatars0.githubusercontent.com/u/7032632?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zachcurry") (html_url . "https://github.com/zachcurry") (followers_url . "https://api.github.com/users/zachcurry/followers") (following_url . "https://api.github.com/users/zachcurry/following{/other_user}") (gists_url . "https://api.github.com/users/zachcurry/gists{/gist_id}") (starred_url . "https://api.github.com/users/zachcurry/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zachcurry/subscriptions") (organizations_url . "https://api.github.com/users/zachcurry/orgs") (repos_url . "https://api.github.com/users/zachcurry/repos") (events_url . "https://api.github.com/users/zachcurry/events{/privacy}") (received_events_url . "https://api.github.com/users/zachcurry/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zachcurry/emacs-anywhere") (description . "Configurable automation + hooks called with application information") (fork) (url . "https://api.github.com/repos/zachcurry/emacs-anywhere") (forks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/forks") (keys_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/teams") (hooks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/hooks") (issue_events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/events{/number}") (events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/events") (assignees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/assignees{/user}") (branches_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/branches{/branch}") (tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/tags") (blobs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/statuses/{sha}") (languages_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/languages") (stargazers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/stargazers") (contributors_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contributors") (subscribers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscribers") (subscription_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscription") (commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contents/{+path}") (compare_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/merges") (archive_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/downloads") (issues_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues{/number}") (pulls_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/pulls{/number}") (milestones_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/milestones{/number}") (notifications_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/labels{/name}") (releases_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/releases{/id}") (deployments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/deployments")) (url . "https://api.github.com/notifications/threads/308164230") (subscription_url . "https://api.github.com/notifications/threads/308164230/subscription")) ((id . "314278264") (unread . t) (reason . "subscribed") (updated_at . "2018-03-17T16:53:40Z") (last_read_at) (subject (title . "Add icons for mu4e major modes") (url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls/110") (latest_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls/110") (type . "PullRequest")) (repository (id . 60958378) (node_id . "MDEwOlJlcG9zaXRvcnk2MDk1ODM3OA==") (name . "all-the-icons.el") (full_name . "domtronn/all-the-icons.el") (owner (login . "domtronn") (id . 5881414) (node_id . "MDQ6VXNlcjU4ODE0MTQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/5881414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/domtronn") (html_url . "https://github.com/domtronn") (followers_url . "https://api.github.com/users/domtronn/followers") (following_url . "https://api.github.com/users/domtronn/following{/other_user}") (gists_url . "https://api.github.com/users/domtronn/gists{/gist_id}") (starred_url . "https://api.github.com/users/domtronn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/domtronn/subscriptions") (organizations_url . "https://api.github.com/users/domtronn/orgs") (repos_url . "https://api.github.com/users/domtronn/repos") (events_url . "https://api.github.com/users/domtronn/events{/privacy}") (received_events_url . "https://api.github.com/users/domtronn/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/domtronn/all-the-icons.el") (description . "A utility package to collect various Icon Fonts and propertize them within Emacs.") (fork) (url . "https://api.github.com/repos/domtronn/all-the-icons.el") (forks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/forks") (keys_url . "https://api.github.com/repos/domtronn/all-the-icons.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/domtronn/all-the-icons.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/domtronn/all-the-icons.el/teams") (hooks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/hooks") (issue_events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/events{/number}") (events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/events") (assignees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/assignees{/user}") (branches_url . "https://api.github.com/repos/domtronn/all-the-icons.el/branches{/branch}") (tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/tags") (blobs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/domtronn/all-the-icons.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/domtronn/all-the-icons.el/languages") (stargazers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/stargazers") (contributors_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contributors") (subscribers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscribers") (subscription_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscription") (commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contents/{+path}") (compare_url . "https://api.github.com/repos/domtronn/all-the-icons.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/domtronn/all-the-icons.el/merges") (archive_url . "https://api.github.com/repos/domtronn/all-the-icons.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/domtronn/all-the-icons.el/downloads") (issues_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues{/number}") (pulls_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/domtronn/all-the-icons.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/domtronn/all-the-icons.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/domtronn/all-the-icons.el/labels{/name}") (releases_url . "https://api.github.com/repos/domtronn/all-the-icons.el/releases{/id}") (deployments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/deployments")) (url . "https://api.github.com/notifications/threads/314278264") (subscription_url . "https://api.github.com/notifications/threads/314278264/subscription")) ((id . "313749592") (unread . t) (reason . "subscribed") (updated_at . "2018-03-16T16:39:00Z") (last_read_at . "2018-03-15T20:50:17Z") (subject (title . "Emacs Configuration for Humans") (url . "https://api.github.com/repos/caisah/emacs.dz/pulls/29") (latest_comment_url . "https://api.github.com/repos/caisah/emacs.dz/pulls/29") (type . "PullRequest")) (repository (id . 71278156) (node_id . "MDEwOlJlcG9zaXRvcnk3MTI3ODE1Ng==") (name . "emacs.dz") (full_name . "caisah/emacs.dz") (owner (login . "caisah") (id . 1536049) (node_id . "MDQ6VXNlcjE1MzYwNDk=") (avatar_url . "https://avatars2.githubusercontent.com/u/1536049?v=4") (gravatar_id . "") (url . "https://api.github.com/users/caisah") (html_url . "https://github.com/caisah") (followers_url . "https://api.github.com/users/caisah/followers") (following_url . "https://api.github.com/users/caisah/following{/other_user}") (gists_url . "https://api.github.com/users/caisah/gists{/gist_id}") (starred_url . "https://api.github.com/users/caisah/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/caisah/subscriptions") (organizations_url . "https://api.github.com/users/caisah/orgs") (repos_url . "https://api.github.com/users/caisah/repos") (events_url . "https://api.github.com/users/caisah/events{/privacy}") (received_events_url . "https://api.github.com/users/caisah/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/caisah/emacs.dz") (description . "Awesome emacs config files") (fork) (url . "https://api.github.com/repos/caisah/emacs.dz") (forks_url . "https://api.github.com/repos/caisah/emacs.dz/forks") (keys_url . "https://api.github.com/repos/caisah/emacs.dz/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/caisah/emacs.dz/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/caisah/emacs.dz/teams") (hooks_url . "https://api.github.com/repos/caisah/emacs.dz/hooks") (issue_events_url . "https://api.github.com/repos/caisah/emacs.dz/issues/events{/number}") (events_url . "https://api.github.com/repos/caisah/emacs.dz/events") (assignees_url . "https://api.github.com/repos/caisah/emacs.dz/assignees{/user}") (branches_url . "https://api.github.com/repos/caisah/emacs.dz/branches{/branch}") (tags_url . "https://api.github.com/repos/caisah/emacs.dz/tags") (blobs_url . "https://api.github.com/repos/caisah/emacs.dz/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/caisah/emacs.dz/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/caisah/emacs.dz/git/refs{/sha}") (trees_url . "https://api.github.com/repos/caisah/emacs.dz/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/caisah/emacs.dz/statuses/{sha}") (languages_url . "https://api.github.com/repos/caisah/emacs.dz/languages") (stargazers_url . "https://api.github.com/repos/caisah/emacs.dz/stargazers") (contributors_url . "https://api.github.com/repos/caisah/emacs.dz/contributors") (subscribers_url . "https://api.github.com/repos/caisah/emacs.dz/subscribers") (subscription_url . "https://api.github.com/repos/caisah/emacs.dz/subscription") (commits_url . "https://api.github.com/repos/caisah/emacs.dz/commits{/sha}") (git_commits_url . "https://api.github.com/repos/caisah/emacs.dz/git/commits{/sha}") (comments_url . "https://api.github.com/repos/caisah/emacs.dz/comments{/number}") (issue_comment_url . "https://api.github.com/repos/caisah/emacs.dz/issues/comments{/number}") (contents_url . "https://api.github.com/repos/caisah/emacs.dz/contents/{+path}") (compare_url . "https://api.github.com/repos/caisah/emacs.dz/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/caisah/emacs.dz/merges") (archive_url . "https://api.github.com/repos/caisah/emacs.dz/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/caisah/emacs.dz/downloads") (issues_url . "https://api.github.com/repos/caisah/emacs.dz/issues{/number}") (pulls_url . "https://api.github.com/repos/caisah/emacs.dz/pulls{/number}") (milestones_url . "https://api.github.com/repos/caisah/emacs.dz/milestones{/number}") (notifications_url . "https://api.github.com/repos/caisah/emacs.dz/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/caisah/emacs.dz/labels{/name}") (releases_url . "https://api.github.com/repos/caisah/emacs.dz/releases{/id}") (deployments_url . "https://api.github.com/repos/caisah/emacs.dz/deployments")) (url . "https://api.github.com/notifications/threads/313749592") (subscription_url . "https://api.github.com/notifications/threads/313749592/subscription")) ((id . "308306835") (unread . t) (reason . "subscribed") (updated_at . "2018-03-14T17:08:02Z") (last_read_at) (subject (title . "Not working with Aquamacs ?") (url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/8") (latest_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments/373100326") (type . "Issue")) (repository (id . 122137283) (node_id . "MDEwOlJlcG9zaXRvcnkxMjIxMzcyODM=") (name . "emacs-anywhere") (full_name . "zachcurry/emacs-anywhere") (owner (login . "zachcurry") (id . 7032632) (node_id . "MDQ6VXNlcjcwMzI2MzI=") (avatar_url . "https://avatars0.githubusercontent.com/u/7032632?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zachcurry") (html_url . "https://github.com/zachcurry") (followers_url . "https://api.github.com/users/zachcurry/followers") (following_url . "https://api.github.com/users/zachcurry/following{/other_user}") (gists_url . "https://api.github.com/users/zachcurry/gists{/gist_id}") (starred_url . "https://api.github.com/users/zachcurry/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zachcurry/subscriptions") (organizations_url . "https://api.github.com/users/zachcurry/orgs") (repos_url . "https://api.github.com/users/zachcurry/repos") (events_url . "https://api.github.com/users/zachcurry/events{/privacy}") (received_events_url . "https://api.github.com/users/zachcurry/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zachcurry/emacs-anywhere") (description . "Configurable automation + hooks called with application information") (fork) (url . "https://api.github.com/repos/zachcurry/emacs-anywhere") (forks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/forks") (keys_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/teams") (hooks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/hooks") (issue_events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/events{/number}") (events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/events") (assignees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/assignees{/user}") (branches_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/branches{/branch}") (tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/tags") (blobs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/statuses/{sha}") (languages_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/languages") (stargazers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/stargazers") (contributors_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contributors") (subscribers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscribers") (subscription_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscription") (commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contents/{+path}") (compare_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/merges") (archive_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/downloads") (issues_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues{/number}") (pulls_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/pulls{/number}") (milestones_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/milestones{/number}") (notifications_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/labels{/name}") (releases_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/releases{/id}") (deployments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/deployments")) (url . "https://api.github.com/notifications/threads/308306835") (subscription_url . "https://api.github.com/notifications/threads/308306835/subscription")) ((id . "308940900") (unread . t) (reason . "subscribed") (updated_at . "2018-03-14T10:04:19Z") (last_read_at) (subject (title . "Can't launch emacs anywhere") (url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/10") (latest_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/10") (type . "Issue")) (repository (id . 122137283) (node_id . "MDEwOlJlcG9zaXRvcnkxMjIxMzcyODM=") (name . "emacs-anywhere") (full_name . "zachcurry/emacs-anywhere") (owner (login . "zachcurry") (id . 7032632) (node_id . "MDQ6VXNlcjcwMzI2MzI=") (avatar_url . "https://avatars0.githubusercontent.com/u/7032632?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zachcurry") (html_url . "https://github.com/zachcurry") (followers_url . "https://api.github.com/users/zachcurry/followers") (following_url . "https://api.github.com/users/zachcurry/following{/other_user}") (gists_url . "https://api.github.com/users/zachcurry/gists{/gist_id}") (starred_url . "https://api.github.com/users/zachcurry/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zachcurry/subscriptions") (organizations_url . "https://api.github.com/users/zachcurry/orgs") (repos_url . "https://api.github.com/users/zachcurry/repos") (events_url . "https://api.github.com/users/zachcurry/events{/privacy}") (received_events_url . "https://api.github.com/users/zachcurry/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zachcurry/emacs-anywhere") (description . "Configurable automation + hooks called with application information") (fork) (url . "https://api.github.com/repos/zachcurry/emacs-anywhere") (forks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/forks") (keys_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/teams") (hooks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/hooks") (issue_events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/events{/number}") (events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/events") (assignees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/assignees{/user}") (branches_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/branches{/branch}") (tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/tags") (blobs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/statuses/{sha}") (languages_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/languages") (stargazers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/stargazers") (contributors_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contributors") (subscribers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscribers") (subscription_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscription") (commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contents/{+path}") (compare_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/merges") (archive_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/downloads") (issues_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues{/number}") (pulls_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/pulls{/number}") (milestones_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/milestones{/number}") (notifications_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/labels{/name}") (releases_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/releases{/id}") (deployments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/deployments")) (url . "https://api.github.com/notifications/threads/308940900") (subscription_url . "https://api.github.com/notifications/threads/308940900/subscription")) ((id . "309134079") (unread . t) (reason . "subscribed") (updated_at . "2018-03-14T09:41:15Z") (last_read_at) (subject (title . "Add an Emacs command to toggles Emacs Anywhere on/off") (url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/11") (latest_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/11") (type . "Issue")) (repository (id . 122137283) (node_id . "MDEwOlJlcG9zaXRvcnkxMjIxMzcyODM=") (name . "emacs-anywhere") (full_name . "zachcurry/emacs-anywhere") (owner (login . "zachcurry") (id . 7032632) (node_id . "MDQ6VXNlcjcwMzI2MzI=") (avatar_url . "https://avatars0.githubusercontent.com/u/7032632?v=4") (gravatar_id . "") (url . "https://api.github.com/users/zachcurry") (html_url . "https://github.com/zachcurry") (followers_url . "https://api.github.com/users/zachcurry/followers") (following_url . "https://api.github.com/users/zachcurry/following{/other_user}") (gists_url . "https://api.github.com/users/zachcurry/gists{/gist_id}") (starred_url . "https://api.github.com/users/zachcurry/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/zachcurry/subscriptions") (organizations_url . "https://api.github.com/users/zachcurry/orgs") (repos_url . "https://api.github.com/users/zachcurry/repos") (events_url . "https://api.github.com/users/zachcurry/events{/privacy}") (received_events_url . "https://api.github.com/users/zachcurry/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/zachcurry/emacs-anywhere") (description . "Configurable automation + hooks called with application information") (fork) (url . "https://api.github.com/repos/zachcurry/emacs-anywhere") (forks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/forks") (keys_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/teams") (hooks_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/hooks") (issue_events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/events{/number}") (events_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/events") (assignees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/assignees{/user}") (branches_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/branches{/branch}") (tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/tags") (blobs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/refs{/sha}") (trees_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/statuses/{sha}") (languages_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/languages") (stargazers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/stargazers") (contributors_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contributors") (subscribers_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscribers") (subscription_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/subscription") (commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/commits{/sha}") (git_commits_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/git/commits{/sha}") (comments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/comments{/number}") (issue_comment_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues/comments{/number}") (contents_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/contents/{+path}") (compare_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/merges") (archive_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/downloads") (issues_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/issues{/number}") (pulls_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/pulls{/number}") (milestones_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/milestones{/number}") (notifications_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/labels{/name}") (releases_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/releases{/id}") (deployments_url . "https://api.github.com/repos/zachcurry/emacs-anywhere/deployments")) (url . "https://api.github.com/notifications/threads/309134079") (subscription_url . "https://api.github.com/notifications/threads/309134079/subscription")) ((id . "310170576") (unread . t) (reason . "subscribed") (updated_at . "2018-03-12T07:41:11Z") (last_read_at) (subject (title . "Author-date citations with page references not separated by a semicolon") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/324") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/372218009") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/310170576") (subscription_url . "https://api.github.com/notifications/threads/310170576/subscription")) ((id . "311452160") (unread . t) (reason . "subscribed") (updated_at . "2018-03-09T10:57:29Z") (last_read_at) (subject (title . "Emacs crashes when install-fonts") (url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/109") (latest_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/109") (type . "Issue")) (repository (id . 60958378) (node_id . "MDEwOlJlcG9zaXRvcnk2MDk1ODM3OA==") (name . "all-the-icons.el") (full_name . "domtronn/all-the-icons.el") (owner (login . "domtronn") (id . 5881414) (node_id . "MDQ6VXNlcjU4ODE0MTQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/5881414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/domtronn") (html_url . "https://github.com/domtronn") (followers_url . "https://api.github.com/users/domtronn/followers") (following_url . "https://api.github.com/users/domtronn/following{/other_user}") (gists_url . "https://api.github.com/users/domtronn/gists{/gist_id}") (starred_url . "https://api.github.com/users/domtronn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/domtronn/subscriptions") (organizations_url . "https://api.github.com/users/domtronn/orgs") (repos_url . "https://api.github.com/users/domtronn/repos") (events_url . "https://api.github.com/users/domtronn/events{/privacy}") (received_events_url . "https://api.github.com/users/domtronn/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/domtronn/all-the-icons.el") (description . "A utility package to collect various Icon Fonts and propertize them within Emacs.") (fork) (url . "https://api.github.com/repos/domtronn/all-the-icons.el") (forks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/forks") (keys_url . "https://api.github.com/repos/domtronn/all-the-icons.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/domtronn/all-the-icons.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/domtronn/all-the-icons.el/teams") (hooks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/hooks") (issue_events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/events{/number}") (events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/events") (assignees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/assignees{/user}") (branches_url . "https://api.github.com/repos/domtronn/all-the-icons.el/branches{/branch}") (tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/tags") (blobs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/domtronn/all-the-icons.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/domtronn/all-the-icons.el/languages") (stargazers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/stargazers") (contributors_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contributors") (subscribers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscribers") (subscription_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscription") (commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contents/{+path}") (compare_url . "https://api.github.com/repos/domtronn/all-the-icons.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/domtronn/all-the-icons.el/merges") (archive_url . "https://api.github.com/repos/domtronn/all-the-icons.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/domtronn/all-the-icons.el/downloads") (issues_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues{/number}") (pulls_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/domtronn/all-the-icons.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/domtronn/all-the-icons.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/domtronn/all-the-icons.el/labels{/name}") (releases_url . "https://api.github.com/repos/domtronn/all-the-icons.el/releases{/id}") (deployments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/deployments")) (url . "https://api.github.com/notifications/threads/311452160") (subscription_url . "https://api.github.com/notifications/threads/311452160/subscription")) ((id . "304106544") (unread . t) (reason . "subscribed") (updated_at . "2018-03-09T10:53:00Z") (last_read_at) (subject (title . "Strange behavior of `ie` on verbatim and code markup") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/34") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/34") (type . "Issue")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/304106544") (subscription_url . "https://api.github.com/notifications/threads/304106544/subscription")) ((id . "311450539") (unread . t) (reason . "subscribed") (updated_at . "2018-03-09T10:52:59Z") (last_read_at) (subject (title . "Make post-blank work correctly on org objects") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls/37") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls/37") (type . "PullRequest")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/311450539") (subscription_url . "https://api.github.com/notifications/threads/311450539/subscription")) ((id . "311391525") (unread . t) (reason . "subscribed") (updated_at . "2018-03-09T07:32:25Z") (last_read_at) (subject (title . "[codefmt] delete trailing whitespaces") (url . "https://api.github.com/repos/caiorss/org-wiki/pulls/19") (latest_comment_url . "https://api.github.com/repos/caiorss/org-wiki/pulls/19") (type . "PullRequest")) (repository (id . 68140809) (node_id . "MDEwOlJlcG9zaXRvcnk2ODE0MDgwOQ==") (name . "org-wiki") (full_name . "caiorss/org-wiki") (owner (login . "caiorss") (id . 10691257) (node_id . "MDQ6VXNlcjEwNjkxMjU3") (avatar_url . "https://avatars3.githubusercontent.com/u/10691257?v=4") (gravatar_id . "") (url . "https://api.github.com/users/caiorss") (html_url . "https://github.com/caiorss") (followers_url . "https://api.github.com/users/caiorss/followers") (following_url . "https://api.github.com/users/caiorss/following{/other_user}") (gists_url . "https://api.github.com/users/caiorss/gists{/gist_id}") (starred_url . "https://api.github.com/users/caiorss/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/caiorss/subscriptions") (organizations_url . "https://api.github.com/users/caiorss/orgs") (repos_url . "https://api.github.com/users/caiorss/repos") (events_url . "https://api.github.com/users/caiorss/events{/privacy}") (received_events_url . "https://api.github.com/users/caiorss/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/caiorss/org-wiki") (description . "Wiki for Emacs org-mode built on top of Emacs org-mode.") (fork) (url . "https://api.github.com/repos/caiorss/org-wiki") (forks_url . "https://api.github.com/repos/caiorss/org-wiki/forks") (keys_url . "https://api.github.com/repos/caiorss/org-wiki/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/caiorss/org-wiki/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/caiorss/org-wiki/teams") (hooks_url . "https://api.github.com/repos/caiorss/org-wiki/hooks") (issue_events_url . "https://api.github.com/repos/caiorss/org-wiki/issues/events{/number}") (events_url . "https://api.github.com/repos/caiorss/org-wiki/events") (assignees_url . "https://api.github.com/repos/caiorss/org-wiki/assignees{/user}") (branches_url . "https://api.github.com/repos/caiorss/org-wiki/branches{/branch}") (tags_url . "https://api.github.com/repos/caiorss/org-wiki/tags") (blobs_url . "https://api.github.com/repos/caiorss/org-wiki/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/caiorss/org-wiki/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/caiorss/org-wiki/git/refs{/sha}") (trees_url . "https://api.github.com/repos/caiorss/org-wiki/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/caiorss/org-wiki/statuses/{sha}") (languages_url . "https://api.github.com/repos/caiorss/org-wiki/languages") (stargazers_url . "https://api.github.com/repos/caiorss/org-wiki/stargazers") (contributors_url . "https://api.github.com/repos/caiorss/org-wiki/contributors") (subscribers_url . "https://api.github.com/repos/caiorss/org-wiki/subscribers") (subscription_url . "https://api.github.com/repos/caiorss/org-wiki/subscription") (commits_url . "https://api.github.com/repos/caiorss/org-wiki/commits{/sha}") (git_commits_url . "https://api.github.com/repos/caiorss/org-wiki/git/commits{/sha}") (comments_url . "https://api.github.com/repos/caiorss/org-wiki/comments{/number}") (issue_comment_url . "https://api.github.com/repos/caiorss/org-wiki/issues/comments{/number}") (contents_url . "https://api.github.com/repos/caiorss/org-wiki/contents/{+path}") (compare_url . "https://api.github.com/repos/caiorss/org-wiki/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/caiorss/org-wiki/merges") (archive_url . "https://api.github.com/repos/caiorss/org-wiki/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/caiorss/org-wiki/downloads") (issues_url . "https://api.github.com/repos/caiorss/org-wiki/issues{/number}") (pulls_url . "https://api.github.com/repos/caiorss/org-wiki/pulls{/number}") (milestones_url . "https://api.github.com/repos/caiorss/org-wiki/milestones{/number}") (notifications_url . "https://api.github.com/repos/caiorss/org-wiki/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/caiorss/org-wiki/labels{/name}") (releases_url . "https://api.github.com/repos/caiorss/org-wiki/releases{/id}") (deployments_url . "https://api.github.com/repos/caiorss/org-wiki/deployments")) (url . "https://api.github.com/notifications/threads/311391525") (subscription_url . "https://api.github.com/notifications/threads/311391525/subscription")) ((id . "168173557") (unread . t) (reason . "subscribed") (updated_at . "2018-03-06T19:32:22Z") (last_read_at) (subject (title . "package on MELPA?") (url . "https://api.github.com/repos/caiorss/org-wiki/issues/4") (latest_comment_url . "https://api.github.com/repos/caiorss/org-wiki/issues/comments/370899986") (type . "Issue")) (repository (id . 68140809) (node_id . "MDEwOlJlcG9zaXRvcnk2ODE0MDgwOQ==") (name . "org-wiki") (full_name . "caiorss/org-wiki") (owner (login . "caiorss") (id . 10691257) (node_id . "MDQ6VXNlcjEwNjkxMjU3") (avatar_url . "https://avatars3.githubusercontent.com/u/10691257?v=4") (gravatar_id . "") (url . "https://api.github.com/users/caiorss") (html_url . "https://github.com/caiorss") (followers_url . "https://api.github.com/users/caiorss/followers") (following_url . "https://api.github.com/users/caiorss/following{/other_user}") (gists_url . "https://api.github.com/users/caiorss/gists{/gist_id}") (starred_url . "https://api.github.com/users/caiorss/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/caiorss/subscriptions") (organizations_url . "https://api.github.com/users/caiorss/orgs") (repos_url . "https://api.github.com/users/caiorss/repos") (events_url . "https://api.github.com/users/caiorss/events{/privacy}") (received_events_url . "https://api.github.com/users/caiorss/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/caiorss/org-wiki") (description . "Wiki for Emacs org-mode built on top of Emacs org-mode.") (fork) (url . "https://api.github.com/repos/caiorss/org-wiki") (forks_url . "https://api.github.com/repos/caiorss/org-wiki/forks") (keys_url . "https://api.github.com/repos/caiorss/org-wiki/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/caiorss/org-wiki/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/caiorss/org-wiki/teams") (hooks_url . "https://api.github.com/repos/caiorss/org-wiki/hooks") (issue_events_url . "https://api.github.com/repos/caiorss/org-wiki/issues/events{/number}") (events_url . "https://api.github.com/repos/caiorss/org-wiki/events") (assignees_url . "https://api.github.com/repos/caiorss/org-wiki/assignees{/user}") (branches_url . "https://api.github.com/repos/caiorss/org-wiki/branches{/branch}") (tags_url . "https://api.github.com/repos/caiorss/org-wiki/tags") (blobs_url . "https://api.github.com/repos/caiorss/org-wiki/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/caiorss/org-wiki/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/caiorss/org-wiki/git/refs{/sha}") (trees_url . "https://api.github.com/repos/caiorss/org-wiki/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/caiorss/org-wiki/statuses/{sha}") (languages_url . "https://api.github.com/repos/caiorss/org-wiki/languages") (stargazers_url . "https://api.github.com/repos/caiorss/org-wiki/stargazers") (contributors_url . "https://api.github.com/repos/caiorss/org-wiki/contributors") (subscribers_url . "https://api.github.com/repos/caiorss/org-wiki/subscribers") (subscription_url . "https://api.github.com/repos/caiorss/org-wiki/subscription") (commits_url . "https://api.github.com/repos/caiorss/org-wiki/commits{/sha}") (git_commits_url . "https://api.github.com/repos/caiorss/org-wiki/git/commits{/sha}") (comments_url . "https://api.github.com/repos/caiorss/org-wiki/comments{/number}") (issue_comment_url . "https://api.github.com/repos/caiorss/org-wiki/issues/comments{/number}") (contents_url . "https://api.github.com/repos/caiorss/org-wiki/contents/{+path}") (compare_url . "https://api.github.com/repos/caiorss/org-wiki/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/caiorss/org-wiki/merges") (archive_url . "https://api.github.com/repos/caiorss/org-wiki/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/caiorss/org-wiki/downloads") (issues_url . "https://api.github.com/repos/caiorss/org-wiki/issues{/number}") (pulls_url . "https://api.github.com/repos/caiorss/org-wiki/pulls{/number}") (milestones_url . "https://api.github.com/repos/caiorss/org-wiki/milestones{/number}") (notifications_url . "https://api.github.com/repos/caiorss/org-wiki/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/caiorss/org-wiki/labels{/name}") (releases_url . "https://api.github.com/repos/caiorss/org-wiki/releases{/id}") (deployments_url . "https://api.github.com/repos/caiorss/org-wiki/deployments")) (url . "https://api.github.com/notifications/threads/168173557") (subscription_url . "https://api.github.com/notifications/threads/168173557/subscription")) ((id . "308898734") (unread . t) (reason . "author") (updated_at . "2018-03-03T15:11:28Z") (last_read_at . "2018-03-03T00:04:45Z") (subject (title . "Org 9 changed org-protocol") (url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/issues/2") (latest_comment_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/issues/comments/370154408") (type . "Issue")) (repository (id . 24500742) (node_id . "MDEwOlJlcG9zaXRvcnkyNDUwMDc0Mg==") (name . "mailmate-to-orgmode") (full_name . "lchausmann/mailmate-to-orgmode") (owner (login . "lchausmann") (id . 2324447) (node_id . "MDQ6VXNlcjIzMjQ0NDc=") (avatar_url . "https://avatars0.githubusercontent.com/u/2324447?v=4") (gravatar_id . "") (url . "https://api.github.com/users/lchausmann") (html_url . "https://github.com/lchausmann") (followers_url . "https://api.github.com/users/lchausmann/followers") (following_url . "https://api.github.com/users/lchausmann/following{/other_user}") (gists_url . "https://api.github.com/users/lchausmann/gists{/gist_id}") (starred_url . "https://api.github.com/users/lchausmann/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/lchausmann/subscriptions") (organizations_url . "https://api.github.com/users/lchausmann/orgs") (repos_url . "https://api.github.com/users/lchausmann/repos") (events_url . "https://api.github.com/users/lchausmann/events{/privacy}") (received_events_url . "https://api.github.com/users/lchausmann/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/lchausmann/mailmate-to-orgmode") (description . "mailmate-to-org-mode") (fork) (url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode") (forks_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/forks") (keys_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/teams") (hooks_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/hooks") (issue_events_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/issues/events{/number}") (events_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/events") (assignees_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/assignees{/user}") (branches_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/branches{/branch}") (tags_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/tags") (blobs_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/statuses/{sha}") (languages_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/languages") (stargazers_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/stargazers") (contributors_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/contributors") (subscribers_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/subscribers") (subscription_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/subscription") (commits_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/contents/{+path}") (compare_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/merges") (archive_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/downloads") (issues_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/issues{/number}") (pulls_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/pulls{/number}") (milestones_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/milestones{/number}") (notifications_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/labels{/name}") (releases_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/releases{/id}") (deployments_url . "https://api.github.com/repos/lchausmann/mailmate-to-orgmode/deployments")) (url . "https://api.github.com/notifications/threads/308898734") (subscription_url . "https://api.github.com/notifications/threads/308898734/subscription")) ((id . "305998308") (unread . t) (reason . "subscribed") (updated_at . "2018-02-26T13:36:58Z") (last_read_at) (subject (title . "Error modi/temporary-file-directory") (url . "https://api.github.com/repos/kaushalmodi/.emacs.d/issues/30") (latest_comment_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/issues/comments/368505977") (type . "Issue")) (repository (id . 16516614) (node_id . "MDEwOlJlcG9zaXRvcnkxNjUxNjYxNA==") (name . ".emacs.d") (full_name . "kaushalmodi/.emacs.d") (owner (login . "kaushalmodi") (id . 3578197) (node_id . "MDQ6VXNlcjM1NzgxOTc=") (avatar_url . "https://avatars2.githubusercontent.com/u/3578197?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kaushalmodi") (html_url . "https://github.com/kaushalmodi") (followers_url . "https://api.github.com/users/kaushalmodi/followers") (following_url . "https://api.github.com/users/kaushalmodi/following{/other_user}") (gists_url . "https://api.github.com/users/kaushalmodi/gists{/gist_id}") (starred_url . "https://api.github.com/users/kaushalmodi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kaushalmodi/subscriptions") (organizations_url . "https://api.github.com/users/kaushalmodi/orgs") (repos_url . "https://api.github.com/users/kaushalmodi/repos") (events_url . "https://api.github.com/users/kaushalmodi/events{/privacy}") (received_events_url . "https://api.github.com/users/kaushalmodi/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/kaushalmodi/.emacs.d") (description . "My emacs configuration") (fork) (url . "https://api.github.com/repos/kaushalmodi/.emacs.d") (forks_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/forks") (keys_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/teams") (hooks_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/hooks") (issue_events_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/issues/events{/number}") (events_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/events") (assignees_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/assignees{/user}") (branches_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/branches{/branch}") (tags_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/tags") (blobs_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/git/refs{/sha}") (trees_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/statuses/{sha}") (languages_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/languages") (stargazers_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/stargazers") (contributors_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/contributors") (subscribers_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/subscribers") (subscription_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/subscription") (commits_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/commits{/sha}") (git_commits_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/git/commits{/sha}") (comments_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/comments{/number}") (issue_comment_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/issues/comments{/number}") (contents_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/contents/{+path}") (compare_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/merges") (archive_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/downloads") (issues_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/issues{/number}") (pulls_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/pulls{/number}") (milestones_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/milestones{/number}") (notifications_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/labels{/name}") (releases_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/releases{/id}") (deployments_url . "https://api.github.com/repos/kaushalmodi/.emacs.d/deployments")) (url . "https://api.github.com/notifications/threads/305998308") (subscription_url . "https://api.github.com/notifications/threads/305998308/subscription")) ((id . "306080090") (unread . t) (reason . "subscribed") (updated_at . "2018-02-22T16:31:36Z") (last_read_at) (subject (title . "no syntax highlight when export html") (url . "https://api.github.com/repos/caiorss/org-wiki/issues/18") (latest_comment_url . "https://api.github.com/repos/caiorss/org-wiki/issues/18") (type . "Issue")) (repository (id . 68140809) (node_id . "MDEwOlJlcG9zaXRvcnk2ODE0MDgwOQ==") (name . "org-wiki") (full_name . "caiorss/org-wiki") (owner (login . "caiorss") (id . 10691257) (node_id . "MDQ6VXNlcjEwNjkxMjU3") (avatar_url . "https://avatars3.githubusercontent.com/u/10691257?v=4") (gravatar_id . "") (url . "https://api.github.com/users/caiorss") (html_url . "https://github.com/caiorss") (followers_url . "https://api.github.com/users/caiorss/followers") (following_url . "https://api.github.com/users/caiorss/following{/other_user}") (gists_url . "https://api.github.com/users/caiorss/gists{/gist_id}") (starred_url . "https://api.github.com/users/caiorss/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/caiorss/subscriptions") (organizations_url . "https://api.github.com/users/caiorss/orgs") (repos_url . "https://api.github.com/users/caiorss/repos") (events_url . "https://api.github.com/users/caiorss/events{/privacy}") (received_events_url . "https://api.github.com/users/caiorss/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/caiorss/org-wiki") (description . "Wiki for Emacs org-mode built on top of Emacs org-mode.") (fork) (url . "https://api.github.com/repos/caiorss/org-wiki") (forks_url . "https://api.github.com/repos/caiorss/org-wiki/forks") (keys_url . "https://api.github.com/repos/caiorss/org-wiki/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/caiorss/org-wiki/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/caiorss/org-wiki/teams") (hooks_url . "https://api.github.com/repos/caiorss/org-wiki/hooks") (issue_events_url . "https://api.github.com/repos/caiorss/org-wiki/issues/events{/number}") (events_url . "https://api.github.com/repos/caiorss/org-wiki/events") (assignees_url . "https://api.github.com/repos/caiorss/org-wiki/assignees{/user}") (branches_url . "https://api.github.com/repos/caiorss/org-wiki/branches{/branch}") (tags_url . "https://api.github.com/repos/caiorss/org-wiki/tags") (blobs_url . "https://api.github.com/repos/caiorss/org-wiki/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/caiorss/org-wiki/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/caiorss/org-wiki/git/refs{/sha}") (trees_url . "https://api.github.com/repos/caiorss/org-wiki/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/caiorss/org-wiki/statuses/{sha}") (languages_url . "https://api.github.com/repos/caiorss/org-wiki/languages") (stargazers_url . "https://api.github.com/repos/caiorss/org-wiki/stargazers") (contributors_url . "https://api.github.com/repos/caiorss/org-wiki/contributors") (subscribers_url . "https://api.github.com/repos/caiorss/org-wiki/subscribers") (subscription_url . "https://api.github.com/repos/caiorss/org-wiki/subscription") (commits_url . "https://api.github.com/repos/caiorss/org-wiki/commits{/sha}") (git_commits_url . "https://api.github.com/repos/caiorss/org-wiki/git/commits{/sha}") (comments_url . "https://api.github.com/repos/caiorss/org-wiki/comments{/number}") (issue_comment_url . "https://api.github.com/repos/caiorss/org-wiki/issues/comments{/number}") (contents_url . "https://api.github.com/repos/caiorss/org-wiki/contents/{+path}") (compare_url . "https://api.github.com/repos/caiorss/org-wiki/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/caiorss/org-wiki/merges") (archive_url . "https://api.github.com/repos/caiorss/org-wiki/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/caiorss/org-wiki/downloads") (issues_url . "https://api.github.com/repos/caiorss/org-wiki/issues{/number}") (pulls_url . "https://api.github.com/repos/caiorss/org-wiki/pulls{/number}") (milestones_url . "https://api.github.com/repos/caiorss/org-wiki/milestones{/number}") (notifications_url . "https://api.github.com/repos/caiorss/org-wiki/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/caiorss/org-wiki/labels{/name}") (releases_url . "https://api.github.com/repos/caiorss/org-wiki/releases{/id}") (deployments_url . "https://api.github.com/repos/caiorss/org-wiki/deployments")) (url . "https://api.github.com/notifications/threads/306080090") (subscription_url . "https://api.github.com/notifications/threads/306080090/subscription")) ((id . "158931920") (unread . t) (reason . "subscribed") (updated_at . "2018-02-22T12:46:50Z") (last_read_at) (subject (title . "Multilingual bibliography: item-dependent term localization") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/252") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/367669832") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/158931920") (subscription_url . "https://api.github.com/notifications/threads/158931920/subscription")) ((id . "238702607") (unread . t) (reason . "subscribed") (updated_at . "2018-02-22T12:06:09Z") (last_read_at) (subject (title . "Individual locales for entries") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/294") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/367660755") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/238702607") (subscription_url . "https://api.github.com/notifications/threads/238702607/subscription")) ((id . "305863230") (unread . t) (reason . "subscribed") (updated_at . "2018-02-22T05:49:24Z") (last_read_at) (subject (title . "Trying to install fonts ") (url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/108") (latest_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/108") (type . "Issue")) (repository (id . 60958378) (node_id . "MDEwOlJlcG9zaXRvcnk2MDk1ODM3OA==") (name . "all-the-icons.el") (full_name . "domtronn/all-the-icons.el") (owner (login . "domtronn") (id . 5881414) (node_id . "MDQ6VXNlcjU4ODE0MTQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/5881414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/domtronn") (html_url . "https://github.com/domtronn") (followers_url . "https://api.github.com/users/domtronn/followers") (following_url . "https://api.github.com/users/domtronn/following{/other_user}") (gists_url . "https://api.github.com/users/domtronn/gists{/gist_id}") (starred_url . "https://api.github.com/users/domtronn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/domtronn/subscriptions") (organizations_url . "https://api.github.com/users/domtronn/orgs") (repos_url . "https://api.github.com/users/domtronn/repos") (events_url . "https://api.github.com/users/domtronn/events{/privacy}") (received_events_url . "https://api.github.com/users/domtronn/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/domtronn/all-the-icons.el") (description . "A utility package to collect various Icon Fonts and propertize them within Emacs.") (fork) (url . "https://api.github.com/repos/domtronn/all-the-icons.el") (forks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/forks") (keys_url . "https://api.github.com/repos/domtronn/all-the-icons.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/domtronn/all-the-icons.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/domtronn/all-the-icons.el/teams") (hooks_url . "https://api.github.com/repos/domtronn/all-the-icons.el/hooks") (issue_events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/events{/number}") (events_url . "https://api.github.com/repos/domtronn/all-the-icons.el/events") (assignees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/assignees{/user}") (branches_url . "https://api.github.com/repos/domtronn/all-the-icons.el/branches{/branch}") (tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/tags") (blobs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/domtronn/all-the-icons.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/domtronn/all-the-icons.el/languages") (stargazers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/stargazers") (contributors_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contributors") (subscribers_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscribers") (subscription_url . "https://api.github.com/repos/domtronn/all-the-icons.el/subscription") (commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/domtronn/all-the-icons.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/domtronn/all-the-icons.el/contents/{+path}") (compare_url . "https://api.github.com/repos/domtronn/all-the-icons.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/domtronn/all-the-icons.el/merges") (archive_url . "https://api.github.com/repos/domtronn/all-the-icons.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/domtronn/all-the-icons.el/downloads") (issues_url . "https://api.github.com/repos/domtronn/all-the-icons.el/issues{/number}") (pulls_url . "https://api.github.com/repos/domtronn/all-the-icons.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/domtronn/all-the-icons.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/domtronn/all-the-icons.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/domtronn/all-the-icons.el/labels{/name}") (releases_url . "https://api.github.com/repos/domtronn/all-the-icons.el/releases{/id}") (deployments_url . "https://api.github.com/repos/domtronn/all-the-icons.el/deployments")) (url . "https://api.github.com/notifications/threads/305863230") (subscription_url . "https://api.github.com/notifications/threads/305863230/subscription")) ((id . "297999034") (unread . t) (reason . "subscribed") (updated_at . "2018-02-18T08:58:49Z") (last_read_at) (subject (title . "Replace URL in bibliography with a word") (url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/318") (latest_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments/366501674") (type . "Issue")) (repository (id . 12338931) (node_id . "MDEwOlJlcG9zaXRvcnkxMjMzODkzMQ==") (name . "pandoc-citeproc") (full_name . "jgm/pandoc-citeproc") (owner (login . "jgm") (id . 3044) (node_id . "MDQ6VXNlcjMwNDQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/3044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgm") (html_url . "https://github.com/jgm") (followers_url . "https://api.github.com/users/jgm/followers") (following_url . "https://api.github.com/users/jgm/following{/other_user}") (gists_url . "https://api.github.com/users/jgm/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgm/subscriptions") (organizations_url . "https://api.github.com/users/jgm/orgs") (repos_url . "https://api.github.com/users/jgm/repos") (events_url . "https://api.github.com/users/jgm/events{/privacy}") (received_events_url . "https://api.github.com/users/jgm/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/jgm/pandoc-citeproc") (description . "Library and executable for using citeproc with pandoc") (fork) (url . "https://api.github.com/repos/jgm/pandoc-citeproc") (forks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/forks") (keys_url . "https://api.github.com/repos/jgm/pandoc-citeproc/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jgm/pandoc-citeproc/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jgm/pandoc-citeproc/teams") (hooks_url . "https://api.github.com/repos/jgm/pandoc-citeproc/hooks") (issue_events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/events{/number}") (events_url . "https://api.github.com/repos/jgm/pandoc-citeproc/events") (assignees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/assignees{/user}") (branches_url . "https://api.github.com/repos/jgm/pandoc-citeproc/branches{/branch}") (tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/tags") (blobs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jgm/pandoc-citeproc/statuses/{sha}") (languages_url . "https://api.github.com/repos/jgm/pandoc-citeproc/languages") (stargazers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/stargazers") (contributors_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contributors") (subscribers_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscribers") (subscription_url . "https://api.github.com/repos/jgm/pandoc-citeproc/subscription") (commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jgm/pandoc-citeproc/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jgm/pandoc-citeproc/contents/{+path}") (compare_url . "https://api.github.com/repos/jgm/pandoc-citeproc/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jgm/pandoc-citeproc/merges") (archive_url . "https://api.github.com/repos/jgm/pandoc-citeproc/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jgm/pandoc-citeproc/downloads") (issues_url . "https://api.github.com/repos/jgm/pandoc-citeproc/issues{/number}") (pulls_url . "https://api.github.com/repos/jgm/pandoc-citeproc/pulls{/number}") (milestones_url . "https://api.github.com/repos/jgm/pandoc-citeproc/milestones{/number}") (notifications_url . "https://api.github.com/repos/jgm/pandoc-citeproc/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jgm/pandoc-citeproc/labels{/name}") (releases_url . "https://api.github.com/repos/jgm/pandoc-citeproc/releases{/id}") (deployments_url . "https://api.github.com/repos/jgm/pandoc-citeproc/deployments")) (url . "https://api.github.com/notifications/threads/297999034") (subscription_url . "https://api.github.com/notifications/threads/297999034/subscription")) ((id . "302834603") (unread . t) (reason . "subscribed") (updated_at . "2018-02-17T21:20:53Z") (last_read_at) (subject (title . "evil-org-> and < seem to have no effect in tables") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/33") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments/366472299") (type . "Issue")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/302834603") (subscription_url . "https://api.github.com/notifications/threads/302834603/subscription")) ((id . "304466310") (unread . t) (reason . "subscribed") (updated_at . "2018-02-17T20:18:50Z") (last_read_at) (subject (title . "restart-emacs does not work properly with macOS app switcher") (url . "https://api.github.com/repos/raxod502/radian/issues/416") (latest_comment_url . "https://api.github.com/repos/raxod502/radian/issues/416") (type . "Issue")) (repository (id . 64223503) (node_id . "MDEwOlJlcG9zaXRvcnk2NDIyMzUwMw==") (name . "radian") (full_name . "raxod502/radian") (owner (login . "raxod502") (id . 6559064) (node_id . "MDQ6VXNlcjY1NTkwNjQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/6559064?v=4") (gravatar_id . "") (url . "https://api.github.com/users/raxod502") (html_url . "https://github.com/raxod502") (followers_url . "https://api.github.com/users/raxod502/followers") (following_url . "https://api.github.com/users/raxod502/following{/other_user}") (gists_url . "https://api.github.com/users/raxod502/gists{/gist_id}") (starred_url . "https://api.github.com/users/raxod502/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/raxod502/subscriptions") (organizations_url . "https://api.github.com/users/raxod502/orgs") (repos_url . "https://api.github.com/users/raxod502/repos") (events_url . "https://api.github.com/users/raxod502/events{/privacy}") (received_events_url . "https://api.github.com/users/raxod502/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/raxod502/radian") (description . "🍉 Dotfiles that marry elegance and practicality.") (fork) (url . "https://api.github.com/repos/raxod502/radian") (forks_url . "https://api.github.com/repos/raxod502/radian/forks") (keys_url . "https://api.github.com/repos/raxod502/radian/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/raxod502/radian/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/raxod502/radian/teams") (hooks_url . "https://api.github.com/repos/raxod502/radian/hooks") (issue_events_url . "https://api.github.com/repos/raxod502/radian/issues/events{/number}") (events_url . "https://api.github.com/repos/raxod502/radian/events") (assignees_url . "https://api.github.com/repos/raxod502/radian/assignees{/user}") (branches_url . "https://api.github.com/repos/raxod502/radian/branches{/branch}") (tags_url . "https://api.github.com/repos/raxod502/radian/tags") (blobs_url . "https://api.github.com/repos/raxod502/radian/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/raxod502/radian/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/raxod502/radian/git/refs{/sha}") (trees_url . "https://api.github.com/repos/raxod502/radian/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/raxod502/radian/statuses/{sha}") (languages_url . "https://api.github.com/repos/raxod502/radian/languages") (stargazers_url . "https://api.github.com/repos/raxod502/radian/stargazers") (contributors_url . "https://api.github.com/repos/raxod502/radian/contributors") (subscribers_url . "https://api.github.com/repos/raxod502/radian/subscribers") (subscription_url . "https://api.github.com/repos/raxod502/radian/subscription") (commits_url . "https://api.github.com/repos/raxod502/radian/commits{/sha}") (git_commits_url . "https://api.github.com/repos/raxod502/radian/git/commits{/sha}") (comments_url . "https://api.github.com/repos/raxod502/radian/comments{/number}") (issue_comment_url . "https://api.github.com/repos/raxod502/radian/issues/comments{/number}") (contents_url . "https://api.github.com/repos/raxod502/radian/contents/{+path}") (compare_url . "https://api.github.com/repos/raxod502/radian/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/raxod502/radian/merges") (archive_url . "https://api.github.com/repos/raxod502/radian/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/raxod502/radian/downloads") (issues_url . "https://api.github.com/repos/raxod502/radian/issues{/number}") (pulls_url . "https://api.github.com/repos/raxod502/radian/pulls{/number}") (milestones_url . "https://api.github.com/repos/raxod502/radian/milestones{/number}") (notifications_url . "https://api.github.com/repos/raxod502/radian/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/raxod502/radian/labels{/name}") (releases_url . "https://api.github.com/repos/raxod502/radian/releases{/id}") (deployments_url . "https://api.github.com/repos/raxod502/radian/deployments")) (url . "https://api.github.com/notifications/threads/304466310") (subscription_url . "https://api.github.com/notifications/threads/304466310/subscription")) ((id . "292209356") (unread . t) (reason . "subscribed") (updated_at . "2018-02-17T16:41:03Z") (last_read_at) (subject (title . "evil-org-open-below only adds a list item when the cursor is on the line of the bullet itself") (url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/31") (latest_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/31") (type . "Issue")) (repository (id . 77260169) (node_id . "MDEwOlJlcG9zaXRvcnk3NzI2MDE2OQ==") (name . "evil-org-mode") (full_name . "Somelauw/evil-org-mode") (owner (login . "Somelauw") (id . 923835) (node_id . "MDQ6VXNlcjkyMzgzNQ==") (avatar_url . "https://avatars1.githubusercontent.com/u/923835?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Somelauw") (html_url . "https://github.com/Somelauw") (followers_url . "https://api.github.com/users/Somelauw/followers") (following_url . "https://api.github.com/users/Somelauw/following{/other_user}") (gists_url . "https://api.github.com/users/Somelauw/gists{/gist_id}") (starred_url . "https://api.github.com/users/Somelauw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Somelauw/subscriptions") (organizations_url . "https://api.github.com/users/Somelauw/orgs") (repos_url . "https://api.github.com/users/Somelauw/repos") (events_url . "https://api.github.com/users/Somelauw/events{/privacy}") (received_events_url . "https://api.github.com/users/Somelauw/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/Somelauw/evil-org-mode") (description . "Supplemental evil-mode keybindings to emacs org-mode") (fork . t) (url . "https://api.github.com/repos/Somelauw/evil-org-mode") (forks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/forks") (keys_url . "https://api.github.com/repos/Somelauw/evil-org-mode/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/Somelauw/evil-org-mode/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/Somelauw/evil-org-mode/teams") (hooks_url . "https://api.github.com/repos/Somelauw/evil-org-mode/hooks") (issue_events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/events{/number}") (events_url . "https://api.github.com/repos/Somelauw/evil-org-mode/events") (assignees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/assignees{/user}") (branches_url . "https://api.github.com/repos/Somelauw/evil-org-mode/branches{/branch}") (tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/tags") (blobs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/refs{/sha}") (trees_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/Somelauw/evil-org-mode/statuses/{sha}") (languages_url . "https://api.github.com/repos/Somelauw/evil-org-mode/languages") (stargazers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/stargazers") (contributors_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contributors") (subscribers_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscribers") (subscription_url . "https://api.github.com/repos/Somelauw/evil-org-mode/subscription") (commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/commits{/sha}") (git_commits_url . "https://api.github.com/repos/Somelauw/evil-org-mode/git/commits{/sha}") (comments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/comments{/number}") (issue_comment_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues/comments{/number}") (contents_url . "https://api.github.com/repos/Somelauw/evil-org-mode/contents/{+path}") (compare_url . "https://api.github.com/repos/Somelauw/evil-org-mode/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/Somelauw/evil-org-mode/merges") (archive_url . "https://api.github.com/repos/Somelauw/evil-org-mode/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/Somelauw/evil-org-mode/downloads") (issues_url . "https://api.github.com/repos/Somelauw/evil-org-mode/issues{/number}") (pulls_url . "https://api.github.com/repos/Somelauw/evil-org-mode/pulls{/number}") (milestones_url . "https://api.github.com/repos/Somelauw/evil-org-mode/milestones{/number}") (notifications_url . "https://api.github.com/repos/Somelauw/evil-org-mode/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/Somelauw/evil-org-mode/labels{/name}") (releases_url . "https://api.github.com/repos/Somelauw/evil-org-mode/releases{/id}") (deployments_url . "https://api.github.com/repos/Somelauw/evil-org-mode/deployments")) (url . "https://api.github.com/notifications/threads/292209356") (subscription_url . "https://api.github.com/notifications/threads/292209356/subscription")) ((id . "303979989") (unread . t) (reason . "subscribed") (updated_at . "2018-02-16T23:48:38Z") (last_read_at) (subject (title . "Don't install packages when :if condition fails in use-package") (url . "https://api.github.com/repos/raxod502/straight.el/issues/235") (latest_comment_url . "https://api.github.com/repos/raxod502/straight.el/issues/235") (type . "Issue")) (repository (id . 77983005) (node_id . "MDEwOlJlcG9zaXRvcnk3Nzk4MzAwNQ==") (name . "straight.el") (full_name . "raxod502/straight.el") (owner (login . "raxod502") (id . 6559064) (node_id . "MDQ6VXNlcjY1NTkwNjQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/6559064?v=4") (gravatar_id . "") (url . "https://api.github.com/users/raxod502") (html_url . "https://github.com/raxod502") (followers_url . "https://api.github.com/users/raxod502/followers") (following_url . "https://api.github.com/users/raxod502/following{/other_user}") (gists_url . "https://api.github.com/users/raxod502/gists{/gist_id}") (starred_url . "https://api.github.com/users/raxod502/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/raxod502/subscriptions") (organizations_url . "https://api.github.com/users/raxod502/orgs") (repos_url . "https://api.github.com/users/raxod502/repos") (events_url . "https://api.github.com/users/raxod502/events{/privacy}") (received_events_url . "https://api.github.com/users/raxod502/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/raxod502/straight.el") (description . "🍀 Next-generation, purely functional package manager for the Emacs hacker.") (fork) (url . "https://api.github.com/repos/raxod502/straight.el") (forks_url . "https://api.github.com/repos/raxod502/straight.el/forks") (keys_url . "https://api.github.com/repos/raxod502/straight.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/raxod502/straight.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/raxod502/straight.el/teams") (hooks_url . "https://api.github.com/repos/raxod502/straight.el/hooks") (issue_events_url . "https://api.github.com/repos/raxod502/straight.el/issues/events{/number}") (events_url . "https://api.github.com/repos/raxod502/straight.el/events") (assignees_url . "https://api.github.com/repos/raxod502/straight.el/assignees{/user}") (branches_url . "https://api.github.com/repos/raxod502/straight.el/branches{/branch}") (tags_url . "https://api.github.com/repos/raxod502/straight.el/tags") (blobs_url . "https://api.github.com/repos/raxod502/straight.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/raxod502/straight.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/raxod502/straight.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/raxod502/straight.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/raxod502/straight.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/raxod502/straight.el/languages") (stargazers_url . "https://api.github.com/repos/raxod502/straight.el/stargazers") (contributors_url . "https://api.github.com/repos/raxod502/straight.el/contributors") (subscribers_url . "https://api.github.com/repos/raxod502/straight.el/subscribers") (subscription_url . "https://api.github.com/repos/raxod502/straight.el/subscription") (commits_url . "https://api.github.com/repos/raxod502/straight.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/raxod502/straight.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/raxod502/straight.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/raxod502/straight.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/raxod502/straight.el/contents/{+path}") (compare_url . "https://api.github.com/repos/raxod502/straight.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/raxod502/straight.el/merges") (archive_url . "https://api.github.com/repos/raxod502/straight.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/raxod502/straight.el/downloads") (issues_url . "https://api.github.com/repos/raxod502/straight.el/issues{/number}") (pulls_url . "https://api.github.com/repos/raxod502/straight.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/raxod502/straight.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/raxod502/straight.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/raxod502/straight.el/labels{/name}") (releases_url . "https://api.github.com/repos/raxod502/straight.el/releases{/id}") (deployments_url . "https://api.github.com/repos/raxod502/straight.el/deployments")) (url . "https://api.github.com/notifications/threads/303979989") (subscription_url . "https://api.github.com/notifications/threads/303979989/subscription")) ((id . "295193854") (unread . t) (reason . "manual") (updated_at . "2018-02-15T08:28:18Z") (last_read_at . "2018-02-14T14:18:51Z") (subject (title . "Symbol's value as variable is void: helm-swoop-pattern") (url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/issues/123") (latest_comment_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/issues/comments/365856584") (type . "Issue")) (repository (id . 13833918) (node_id . "MDEwOlJlcG9zaXRvcnkxMzgzMzkxOA==") (name . "helm-swoop") (full_name . "ShingoFukuyama/helm-swoop") (owner (login . "ShingoFukuyama") (id . 2087334) (node_id . "MDQ6VXNlcjIwODczMzQ=") (avatar_url . "https://avatars0.githubusercontent.com/u/2087334?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ShingoFukuyama") (html_url . "https://github.com/ShingoFukuyama") (followers_url . "https://api.github.com/users/ShingoFukuyama/followers") (following_url . "https://api.github.com/users/ShingoFukuyama/following{/other_user}") (gists_url . "https://api.github.com/users/ShingoFukuyama/gists{/gist_id}") (starred_url . "https://api.github.com/users/ShingoFukuyama/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ShingoFukuyama/subscriptions") (organizations_url . "https://api.github.com/users/ShingoFukuyama/orgs") (repos_url . "https://api.github.com/users/ShingoFukuyama/repos") (events_url . "https://api.github.com/users/ShingoFukuyama/events{/privacy}") (received_events_url . "https://api.github.com/users/ShingoFukuyama/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/ShingoFukuyama/helm-swoop") (description . "Efficiently hopping squeezed lines powered by Emacs helm interface") (fork) (url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop") (forks_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/forks") (keys_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/teams") (hooks_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/hooks") (issue_events_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/issues/events{/number}") (events_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/events") (assignees_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/assignees{/user}") (branches_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/branches{/branch}") (tags_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/tags") (blobs_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/statuses/{sha}") (languages_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/languages") (stargazers_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/stargazers") (contributors_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/contributors") (subscribers_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/subscribers") (subscription_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/subscription") (commits_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/contents/{+path}") (compare_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/merges") (archive_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/downloads") (issues_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/issues{/number}") (pulls_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/pulls{/number}") (milestones_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/milestones{/number}") (notifications_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/labels{/name}") (releases_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/releases{/id}") (deployments_url . "https://api.github.com/repos/ShingoFukuyama/helm-swoop/deployments")) (url . "https://api.github.com/notifications/threads/295193854") (subscription_url . "https://api.github.com/notifications/threads/295193854/subscription")) ((id . "302398633") (unread . t) (reason . "subscribed") (updated_at . "2018-07-21T17:25:58Z") (last_read_at) (subject (title . "straight.el barfs in the presence of duplicate file names") (url . "https://api.github.com/repos/raxod502/straight.el/issues/234") (latest_comment_url . "https://api.github.com/repos/raxod502/straight.el/issues/234") (type . "Issue")) (repository (id . 77983005) (node_id . "MDEwOlJlcG9zaXRvcnk3Nzk4MzAwNQ==") (name . "straight.el") (full_name . "raxod502/straight.el") (owner (login . "raxod502") (id . 6559064) (node_id . "MDQ6VXNlcjY1NTkwNjQ=") (avatar_url . "https://avatars1.githubusercontent.com/u/6559064?v=4") (gravatar_id . "") (url . "https://api.github.com/users/raxod502") (html_url . "https://github.com/raxod502") (followers_url . "https://api.github.com/users/raxod502/followers") (following_url . "https://api.github.com/users/raxod502/following{/other_user}") (gists_url . "https://api.github.com/users/raxod502/gists{/gist_id}") (starred_url . "https://api.github.com/users/raxod502/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/raxod502/subscriptions") (organizations_url . "https://api.github.com/users/raxod502/orgs") (repos_url . "https://api.github.com/users/raxod502/repos") (events_url . "https://api.github.com/users/raxod502/events{/privacy}") (received_events_url . "https://api.github.com/users/raxod502/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/raxod502/straight.el") (description . "🍀 Next-generation, purely functional package manager for the Emacs hacker.") (fork) (url . "https://api.github.com/repos/raxod502/straight.el") (forks_url . "https://api.github.com/repos/raxod502/straight.el/forks") (keys_url . "https://api.github.com/repos/raxod502/straight.el/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/raxod502/straight.el/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/raxod502/straight.el/teams") (hooks_url . "https://api.github.com/repos/raxod502/straight.el/hooks") (issue_events_url . "https://api.github.com/repos/raxod502/straight.el/issues/events{/number}") (events_url . "https://api.github.com/repos/raxod502/straight.el/events") (assignees_url . "https://api.github.com/repos/raxod502/straight.el/assignees{/user}") (branches_url . "https://api.github.com/repos/raxod502/straight.el/branches{/branch}") (tags_url . "https://api.github.com/repos/raxod502/straight.el/tags") (blobs_url . "https://api.github.com/repos/raxod502/straight.el/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/raxod502/straight.el/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/raxod502/straight.el/git/refs{/sha}") (trees_url . "https://api.github.com/repos/raxod502/straight.el/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/raxod502/straight.el/statuses/{sha}") (languages_url . "https://api.github.com/repos/raxod502/straight.el/languages") (stargazers_url . "https://api.github.com/repos/raxod502/straight.el/stargazers") (contributors_url . "https://api.github.com/repos/raxod502/straight.el/contributors") (subscribers_url . "https://api.github.com/repos/raxod502/straight.el/subscribers") (subscription_url . "https://api.github.com/repos/raxod502/straight.el/subscription") (commits_url . "https://api.github.com/repos/raxod502/straight.el/commits{/sha}") (git_commits_url . "https://api.github.com/repos/raxod502/straight.el/git/commits{/sha}") (comments_url . "https://api.github.com/repos/raxod502/straight.el/comments{/number}") (issue_comment_url . "https://api.github.com/repos/raxod502/straight.el/issues/comments{/number}") (contents_url . "https://api.github.com/repos/raxod502/straight.el/contents/{+path}") (compare_url . "https://api.github.com/repos/raxod502/straight.el/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/raxod502/straight.el/merges") (archive_url . "https://api.github.com/repos/raxod502/straight.el/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/raxod502/straight.el/downloads") (issues_url . "https://api.github.com/repos/raxod502/straight.el/issues{/number}") (pulls_url . "https://api.github.com/repos/raxod502/straight.el/pulls{/number}") (milestones_url . "https://api.github.com/repos/raxod502/straight.el/milestones{/number}") (notifications_url . "https://api.github.com/repos/raxod502/straight.el/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/raxod502/straight.el/labels{/name}") (releases_url . "https://api.github.com/repos/raxod502/straight.el/releases{/id}") (deployments_url . "https://api.github.com/repos/raxod502/straight.el/deployments")) (url . "https://api.github.com/notifications/threads/302398633") (subscription_url . "https://api.github.com/notifications/threads/302398633/subscription"))) (((auth . magithub)) :issues (magithub-request (ghubp-get-issues))) nil (nil :repo-demographics (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "mclear-teaching-projects")) (name . "phil105-food"))))) (and (not (magithub--api-available-p)) sparse-repo))) ((id . 141330968) (node_id . "MDEwOlJlcG9zaXRvcnkxNDEzMzA5Njg=") (name . "phil105-food") (full_name . "mclear-teaching-projects/phil105-food") (owner (login . "mclear-teaching-projects") (id . 19617595) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjE3NTk1") (avatar_url . "https://avatars0.githubusercontent.com/u/19617595?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-teaching-projects") (html_url . "https://github.com/mclear-teaching-projects") (followers_url . "https://api.github.com/users/mclear-teaching-projects/followers") (following_url . "https://api.github.com/users/mclear-teaching-projects/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-teaching-projects/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-teaching-projects/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-teaching-projects/subscriptions") (organizations_url . "https://api.github.com/users/mclear-teaching-projects/orgs") (repos_url . "https://api.github.com/users/mclear-teaching-projects/repos") (events_url . "https://api.github.com/users/mclear-teaching-projects/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-teaching-projects/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/mclear-teaching-projects/phil105-food") (description . "Materials for PHIL 105 – Philosophy of Food") (fork) (url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food") (forks_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/forks") (keys_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/teams") (hooks_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/hooks") (issue_events_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/issues/events{/number}") (events_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/events") (assignees_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/assignees{/user}") (branches_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/branches{/branch}") (tags_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/tags") (blobs_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/statuses/{sha}") (languages_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/languages") (stargazers_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/stargazers") (contributors_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/contributors") (subscribers_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/subscribers") (subscription_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/subscription") (commits_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/contents/{+path}") (compare_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/merges") (archive_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/downloads") (issues_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/issues{/number}") (pulls_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/pulls{/number}") (milestones_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/milestones{/number}") (notifications_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/labels{/name}") (releases_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/releases{/id}") (deployments_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/deployments") (created_at . "2018-07-17T18:56:13Z") (updated_at . "2018-07-27T21:55:46Z") (pushed_at . "2018-07-27T21:55:43Z") (git_url . "git://github.com/mclear-teaching-projects/phil105-food.git") (ssh_url . "git@github.com:mclear-teaching-projects/phil105-food.git") (clone_url . "https://github.com/mclear-teaching-projects/phil105-food.git") (svn_url . "https://github.com/mclear-teaching-projects/phil105-food") (homepage) (size . 36269) (stargazers_count . 0) (watchers_count . 0) (language . "HTML") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "mclear-teaching-projects") (id . 19617595) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjE3NTk1") (avatar_url . "https://avatars0.githubusercontent.com/u/19617595?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-teaching-projects") (html_url . "https://github.com/mclear-teaching-projects") (followers_url . "https://api.github.com/users/mclear-teaching-projects/followers") (following_url . "https://api.github.com/users/mclear-teaching-projects/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-teaching-projects/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-teaching-projects/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-teaching-projects/subscriptions") (organizations_url . "https://api.github.com/users/mclear-teaching-projects/orgs") (repos_url . "https://api.github.com/users/mclear-teaching-projects/repos") (events_url . "https://api.github.com/users/mclear-teaching-projects/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-teaching-projects/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 1)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 141330968) (node_id . "MDEwOlJlcG9zaXRvcnkxNDEzMzA5Njg=") (name . "phil105-food") (full_name . "mclear-teaching-projects/phil105-food") (owner (login . "mclear-teaching-projects") (id . 19617595) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjE3NTk1") (avatar_url . "https://avatars0.githubusercontent.com/u/19617595?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-teaching-projects") (html_url . "https://github.com/mclear-teaching-projects") (followers_url . "https://api.github.com/users/mclear-teaching-projects/followers") (following_url . "https://api.github.com/users/mclear-teaching-projects/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-teaching-projects/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-teaching-projects/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-teaching-projects/subscriptions") (organizations_url . "https://api.github.com/users/mclear-teaching-projects/orgs") (repos_url . "https://api.github.com/users/mclear-teaching-projects/repos") (events_url . "https://api.github.com/users/mclear-teaching-projects/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-teaching-projects/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/mclear-teaching-projects/phil105-food") (description . "Materials for PHIL 105 – Philosophy of Food") (fork) (url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food") (forks_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/forks") (keys_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/teams") (hooks_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/hooks") (issue_events_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/issues/events{/number}") (events_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/events") (assignees_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/assignees{/user}") (branches_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/branches{/branch}") (tags_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/tags") (blobs_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/statuses/{sha}") (languages_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/languages") (stargazers_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/stargazers") (contributors_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/contributors") (subscribers_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/subscribers") (subscription_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/subscription") (commits_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/contents/{+path}") (compare_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/merges") (archive_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/downloads") (issues_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/issues{/number}") (pulls_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/pulls{/number}") (milestones_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/milestones{/number}") (notifications_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/labels{/name}") (releases_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/releases{/id}") (deployments_url . "https://api.github.com/repos/mclear-teaching-projects/phil105-food/deployments") (created_at . "2018-07-17T18:56:13Z") (updated_at . "2018-07-27T21:55:46Z") (pushed_at . "2018-07-27T21:55:43Z") (git_url . "git://github.com/mclear-teaching-projects/phil105-food.git") (ssh_url . "git@github.com:mclear-teaching-projects/phil105-food.git") (clone_url . "https://github.com/mclear-teaching-projects/phil105-food.git") (svn_url . "https://github.com/mclear-teaching-projects/phil105-food") (homepage) (size . 36269) (stargazers_count . 0) (watchers_count . 0) (language . "HTML") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "mclear-teaching-projects") (id . 19617595) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjE3NTk1") (avatar_url . "https://avatars0.githubusercontent.com/u/19617595?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-teaching-projects") (html_url . "https://github.com/mclear-teaching-projects") (followers_url . "https://api.github.com/users/mclear-teaching-projects/followers") (following_url . "https://api.github.com/users/mclear-teaching-projects/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-teaching-projects/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-teaching-projects/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-teaching-projects/subscriptions") (organizations_url . "https://api.github.com/users/mclear-teaching-projects/orgs") (repos_url . "https://api.github.com/users/mclear-teaching-projects/repos") (events_url . "https://api.github.com/users/mclear-teaching-projects/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-teaching-projects/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 1))))))) nil (nil :repo-demographics (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "mclear-teaching-projects")) (name . "phil871-kant-survey"))))) (and (not (magithub--api-available-p)) sparse-repo))) ((id . 141306858) (node_id . "MDEwOlJlcG9zaXRvcnkxNDEzMDY4NTg=") (name . "phil871-kant-survey") (full_name . "mclear-teaching-projects/phil871-kant-survey") (owner (login . "mclear-teaching-projects") (id . 19617595) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjE3NTk1") (avatar_url . "https://avatars0.githubusercontent.com/u/19617595?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-teaching-projects") (html_url . "https://github.com/mclear-teaching-projects") (followers_url . "https://api.github.com/users/mclear-teaching-projects/followers") (following_url . "https://api.github.com/users/mclear-teaching-projects/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-teaching-projects/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-teaching-projects/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-teaching-projects/subscriptions") (organizations_url . "https://api.github.com/users/mclear-teaching-projects/orgs") (repos_url . "https://api.github.com/users/mclear-teaching-projects/repos") (events_url . "https://api.github.com/users/mclear-teaching-projects/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-teaching-projects/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/mclear-teaching-projects/phil871-kant-survey") (description . "Class surveying Kant's \"critical\" philosophy") (fork) (url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey") (forks_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/forks") (keys_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/teams") (hooks_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/hooks") (issue_events_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/issues/events{/number}") (events_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/events") (assignees_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/assignees{/user}") (branches_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/branches{/branch}") (tags_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/tags") (blobs_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/statuses/{sha}") (languages_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/languages") (stargazers_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/stargazers") (contributors_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/contributors") (subscribers_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/subscribers") (subscription_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/subscription") (commits_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/contents/{+path}") (compare_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/merges") (archive_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/downloads") (issues_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/issues{/number}") (pulls_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/pulls{/number}") (milestones_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/milestones{/number}") (notifications_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/labels{/name}") (releases_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/releases{/id}") (deployments_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/deployments") (created_at . "2018-07-17T15:11:37Z") (updated_at . "2018-08-13T16:14:39Z") (pushed_at . "2018-08-13T16:14:38Z") (git_url . "git://github.com/mclear-teaching-projects/phil871-kant-survey.git") (ssh_url . "git@github.com:mclear-teaching-projects/phil871-kant-survey.git") (clone_url . "https://github.com/mclear-teaching-projects/phil871-kant-survey.git") (svn_url . "https://github.com/mclear-teaching-projects/phil871-kant-survey") (homepage) (size . 13483) (stargazers_count . 0) (watchers_count . 0) (language . "HTML") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "mclear-teaching-projects") (id . 19617595) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjE3NTk1") (avatar_url . "https://avatars0.githubusercontent.com/u/19617595?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-teaching-projects") (html_url . "https://github.com/mclear-teaching-projects") (followers_url . "https://api.github.com/users/mclear-teaching-projects/followers") (following_url . "https://api.github.com/users/mclear-teaching-projects/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-teaching-projects/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-teaching-projects/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-teaching-projects/subscriptions") (organizations_url . "https://api.github.com/users/mclear-teaching-projects/orgs") (repos_url . "https://api.github.com/users/mclear-teaching-projects/repos") (events_url . "https://api.github.com/users/mclear-teaching-projects/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-teaching-projects/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 1)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 141306858) (node_id . "MDEwOlJlcG9zaXRvcnkxNDEzMDY4NTg=") (name . "phil871-kant-survey") (full_name . "mclear-teaching-projects/phil871-kant-survey") (owner (login . "mclear-teaching-projects") (id . 19617595) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjE3NTk1") (avatar_url . "https://avatars0.githubusercontent.com/u/19617595?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-teaching-projects") (html_url . "https://github.com/mclear-teaching-projects") (followers_url . "https://api.github.com/users/mclear-teaching-projects/followers") (following_url . "https://api.github.com/users/mclear-teaching-projects/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-teaching-projects/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-teaching-projects/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-teaching-projects/subscriptions") (organizations_url . "https://api.github.com/users/mclear-teaching-projects/orgs") (repos_url . "https://api.github.com/users/mclear-teaching-projects/repos") (events_url . "https://api.github.com/users/mclear-teaching-projects/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-teaching-projects/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/mclear-teaching-projects/phil871-kant-survey") (description . "Class surveying Kant's \"critical\" philosophy") (fork) (url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey") (forks_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/forks") (keys_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/teams") (hooks_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/hooks") (issue_events_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/issues/events{/number}") (events_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/events") (assignees_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/assignees{/user}") (branches_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/branches{/branch}") (tags_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/tags") (blobs_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/statuses/{sha}") (languages_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/languages") (stargazers_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/stargazers") (contributors_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/contributors") (subscribers_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/subscribers") (subscription_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/subscription") (commits_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/contents/{+path}") (compare_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/merges") (archive_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/downloads") (issues_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/issues{/number}") (pulls_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/pulls{/number}") (milestones_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/milestones{/number}") (notifications_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/labels{/name}") (releases_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/releases{/id}") (deployments_url . "https://api.github.com/repos/mclear-teaching-projects/phil871-kant-survey/deployments") (created_at . "2018-07-17T15:11:37Z") (updated_at . "2018-08-13T16:14:39Z") (pushed_at . "2018-08-13T16:14:38Z") (git_url . "git://github.com/mclear-teaching-projects/phil871-kant-survey.git") (ssh_url . "git@github.com:mclear-teaching-projects/phil871-kant-survey.git") (clone_url . "https://github.com/mclear-teaching-projects/phil871-kant-survey.git") (svn_url . "https://github.com/mclear-teaching-projects/phil871-kant-survey") (homepage) (size . 13483) (stargazers_count . 0) (watchers_count . 0) (language . "HTML") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "mclear-teaching-projects") (id . 19617595) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjE3NTk1") (avatar_url . "https://avatars0.githubusercontent.com/u/19617595?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-teaching-projects") (html_url . "https://github.com/mclear-teaching-projects") (followers_url . "https://api.github.com/users/mclear-teaching-projects/followers") (following_url . "https://api.github.com/users/mclear-teaching-projects/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-teaching-projects/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-teaching-projects/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-teaching-projects/subscriptions") (organizations_url . "https://api.github.com/users/mclear-teaching-projects/orgs") (repos_url . "https://api.github.com/users/mclear-teaching-projects/repos") (events_url . "https://api.github.com/users/mclear-teaching-projects/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-teaching-projects/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 1))))))) nil (nil :repo-demographics (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "mclear-tools")) (name . "dotemacs"))))) (and (not (magithub--api-available-p)) sparse-repo))) ((id . 60934121) (node_id . "MDEwOlJlcG9zaXRvcnk2MDkzNDEyMQ==") (name . "dotemacs") (full_name . "mclear-tools/dotemacs") (owner (login . "mclear-tools") (id . 19655968) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjU1OTY4") (avatar_url . "https://avatars1.githubusercontent.com/u/19655968?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-tools") (html_url . "https://github.com/mclear-tools") (followers_url . "https://api.github.com/users/mclear-tools/followers") (following_url . "https://api.github.com/users/mclear-tools/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-tools/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-tools/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-tools/subscriptions") (organizations_url . "https://api.github.com/users/mclear-tools/orgs") (repos_url . "https://api.github.com/users/mclear-tools/repos") (events_url . "https://api.github.com/users/mclear-tools/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-tools/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/mclear-tools/dotemacs") (description . "My literate emacs configuration. Look at config.org to see how it all is put together.") (fork) (url . "https://api.github.com/repos/mclear-tools/dotemacs") (forks_url . "https://api.github.com/repos/mclear-tools/dotemacs/forks") (keys_url . "https://api.github.com/repos/mclear-tools/dotemacs/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mclear-tools/dotemacs/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mclear-tools/dotemacs/teams") (hooks_url . "https://api.github.com/repos/mclear-tools/dotemacs/hooks") (issue_events_url . "https://api.github.com/repos/mclear-tools/dotemacs/issues/events{/number}") (events_url . "https://api.github.com/repos/mclear-tools/dotemacs/events") (assignees_url . "https://api.github.com/repos/mclear-tools/dotemacs/assignees{/user}") (branches_url . "https://api.github.com/repos/mclear-tools/dotemacs/branches{/branch}") (tags_url . "https://api.github.com/repos/mclear-tools/dotemacs/tags") (blobs_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mclear-tools/dotemacs/statuses/{sha}") (languages_url . "https://api.github.com/repos/mclear-tools/dotemacs/languages") (stargazers_url . "https://api.github.com/repos/mclear-tools/dotemacs/stargazers") (contributors_url . "https://api.github.com/repos/mclear-tools/dotemacs/contributors") (subscribers_url . "https://api.github.com/repos/mclear-tools/dotemacs/subscribers") (subscription_url . "https://api.github.com/repos/mclear-tools/dotemacs/subscription") (commits_url . "https://api.github.com/repos/mclear-tools/dotemacs/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mclear-tools/dotemacs/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mclear-tools/dotemacs/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mclear-tools/dotemacs/contents/{+path}") (compare_url . "https://api.github.com/repos/mclear-tools/dotemacs/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mclear-tools/dotemacs/merges") (archive_url . "https://api.github.com/repos/mclear-tools/dotemacs/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mclear-tools/dotemacs/downloads") (issues_url . "https://api.github.com/repos/mclear-tools/dotemacs/issues{/number}") (pulls_url . "https://api.github.com/repos/mclear-tools/dotemacs/pulls{/number}") (milestones_url . "https://api.github.com/repos/mclear-tools/dotemacs/milestones{/number}") (notifications_url . "https://api.github.com/repos/mclear-tools/dotemacs/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mclear-tools/dotemacs/labels{/name}") (releases_url . "https://api.github.com/repos/mclear-tools/dotemacs/releases{/id}") (deployments_url . "https://api.github.com/repos/mclear-tools/dotemacs/deployments") (created_at . "2016-06-12T00:44:56Z") (updated_at . "2018-08-10T00:28:39Z") (pushed_at . "2018-08-14T05:01:51Z") (git_url . "git://github.com/mclear-tools/dotemacs.git") (ssh_url . "git@github.com:mclear-tools/dotemacs.git") (clone_url . "https://github.com/mclear-tools/dotemacs.git") (svn_url . "https://github.com/mclear-tools/dotemacs") (homepage . "") (size . 19539) (stargazers_count . 9) (watchers_count . 9) (language . "Emacs Lisp") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 1) (open_issues . 0) (watchers . 9) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "mclear-tools") (id . 19655968) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjU1OTY4") (avatar_url . "https://avatars1.githubusercontent.com/u/19655968?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-tools") (html_url . "https://github.com/mclear-tools") (followers_url . "https://api.github.com/users/mclear-tools/followers") (following_url . "https://api.github.com/users/mclear-tools/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-tools/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-tools/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-tools/subscriptions") (organizations_url . "https://api.github.com/users/mclear-tools/orgs") (repos_url . "https://api.github.com/users/mclear-tools/repos") (events_url . "https://api.github.com/users/mclear-tools/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-tools/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 1)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 60934121) (node_id . "MDEwOlJlcG9zaXRvcnk2MDkzNDEyMQ==") (name . "dotemacs") (full_name . "mclear-tools/dotemacs") (owner (login . "mclear-tools") (id . 19655968) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjU1OTY4") (avatar_url . "https://avatars1.githubusercontent.com/u/19655968?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-tools") (html_url . "https://github.com/mclear-tools") (followers_url . "https://api.github.com/users/mclear-tools/followers") (following_url . "https://api.github.com/users/mclear-tools/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-tools/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-tools/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-tools/subscriptions") (organizations_url . "https://api.github.com/users/mclear-tools/orgs") (repos_url . "https://api.github.com/users/mclear-tools/repos") (events_url . "https://api.github.com/users/mclear-tools/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-tools/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/mclear-tools/dotemacs") (description . "My literate emacs configuration. Look at config.org to see how it all is put together.") (fork) (url . "https://api.github.com/repos/mclear-tools/dotemacs") (forks_url . "https://api.github.com/repos/mclear-tools/dotemacs/forks") (keys_url . "https://api.github.com/repos/mclear-tools/dotemacs/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/mclear-tools/dotemacs/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/mclear-tools/dotemacs/teams") (hooks_url . "https://api.github.com/repos/mclear-tools/dotemacs/hooks") (issue_events_url . "https://api.github.com/repos/mclear-tools/dotemacs/issues/events{/number}") (events_url . "https://api.github.com/repos/mclear-tools/dotemacs/events") (assignees_url . "https://api.github.com/repos/mclear-tools/dotemacs/assignees{/user}") (branches_url . "https://api.github.com/repos/mclear-tools/dotemacs/branches{/branch}") (tags_url . "https://api.github.com/repos/mclear-tools/dotemacs/tags") (blobs_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/refs{/sha}") (trees_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/mclear-tools/dotemacs/statuses/{sha}") (languages_url . "https://api.github.com/repos/mclear-tools/dotemacs/languages") (stargazers_url . "https://api.github.com/repos/mclear-tools/dotemacs/stargazers") (contributors_url . "https://api.github.com/repos/mclear-tools/dotemacs/contributors") (subscribers_url . "https://api.github.com/repos/mclear-tools/dotemacs/subscribers") (subscription_url . "https://api.github.com/repos/mclear-tools/dotemacs/subscription") (commits_url . "https://api.github.com/repos/mclear-tools/dotemacs/commits{/sha}") (git_commits_url . "https://api.github.com/repos/mclear-tools/dotemacs/git/commits{/sha}") (comments_url . "https://api.github.com/repos/mclear-tools/dotemacs/comments{/number}") (issue_comment_url . "https://api.github.com/repos/mclear-tools/dotemacs/issues/comments{/number}") (contents_url . "https://api.github.com/repos/mclear-tools/dotemacs/contents/{+path}") (compare_url . "https://api.github.com/repos/mclear-tools/dotemacs/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/mclear-tools/dotemacs/merges") (archive_url . "https://api.github.com/repos/mclear-tools/dotemacs/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/mclear-tools/dotemacs/downloads") (issues_url . "https://api.github.com/repos/mclear-tools/dotemacs/issues{/number}") (pulls_url . "https://api.github.com/repos/mclear-tools/dotemacs/pulls{/number}") (milestones_url . "https://api.github.com/repos/mclear-tools/dotemacs/milestones{/number}") (notifications_url . "https://api.github.com/repos/mclear-tools/dotemacs/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/mclear-tools/dotemacs/labels{/name}") (releases_url . "https://api.github.com/repos/mclear-tools/dotemacs/releases{/id}") (deployments_url . "https://api.github.com/repos/mclear-tools/dotemacs/deployments") (created_at . "2016-06-12T00:44:56Z") (updated_at . "2018-08-10T00:28:39Z") (pushed_at . "2018-08-14T05:01:51Z") (git_url . "git://github.com/mclear-tools/dotemacs.git") (ssh_url . "git@github.com:mclear-tools/dotemacs.git") (clone_url . "https://github.com/mclear-tools/dotemacs.git") (svn_url . "https://github.com/mclear-tools/dotemacs") (homepage . "") (size . 19539) (stargazers_count . 9) (watchers_count . 9) (language . "Emacs Lisp") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 1) (open_issues . 0) (watchers . 9) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "mclear-tools") (id . 19655968) (node_id . "MDEyOk9yZ2FuaXphdGlvbjE5NjU1OTY4") (avatar_url . "https://avatars1.githubusercontent.com/u/19655968?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mclear-tools") (html_url . "https://github.com/mclear-tools") (followers_url . "https://api.github.com/users/mclear-tools/followers") (following_url . "https://api.github.com/users/mclear-tools/following{/other_user}") (gists_url . "https://api.github.com/users/mclear-tools/gists{/gist_id}") (starred_url . "https://api.github.com/users/mclear-tools/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mclear-tools/subscriptions") (organizations_url . "https://api.github.com/users/mclear-tools/orgs") (repos_url . "https://api.github.com/users/mclear-tools/repos") (events_url . "https://api.github.com/users/mclear-tools/events{/privacy}") (received_events_url . "https://api.github.com/users/mclear-tools/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 1))))))) nil))